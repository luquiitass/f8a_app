{"version":3,"sources":["webpack:///src/app/pages/home/results/results.page.html","webpack:///src/app/pages/home/results/results-routing.module.ts","webpack:///src/app/pages/home/results/results.module.ts","webpack:///src/app/pages/home/results/results.page.ts"],"names":["routes","path","component","ResultsPageRoutingModule","imports","forChild","exports","ResultsPageModule","declarations","ResultsPage","request","util","dialogService","paymentTeamService","listsHomeService","tabs","listSkeleton","Array","firstLoad","modelGame","init","event","api_function","subscribe","response","selectLast","target","complete","console","log","error","length","tab","slice","results","tabSelected","delay","focusSegment","index","parseInt","detail","value","loadingProgres","dimissLoaging","segmentId","document","getElementById","scrollIntoView","behavior","block","inline","ms","Promise","resolve","setTimeout","val","setFormatMoment","selector","template"],"mappings":"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","file":"results-results-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Resultados</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"!firstLoad\\\">\\n    <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"init($event)\\\">\\n      <ion-refresher-content\\n      refreshingText=\\\"Cargando...\\\"\\n      ></ion-refresher-content>\\n    </ion-refresher>\\n  \\n    \\n  \\n    <ion-list>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-segment scrollable [(ngModel)]=\\\"tabSelected\\\" (ionChange)=\\\"selectDate($event)\\\" >\\n              <ion-segment-button *ngFor=\\\"let tab of tabs;let i=index\\\" value=\\\"{{i}}\\\" id=\\\"sgm_r_{{i}}\\\" >\\n                {{formatDate(tab.date)}}\\n              </ion-segment-button>\\n            </ion-segment>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n  \\n      <ion-list-header *ngIf=\\\"listsHomeService.results.length == 0\\\"  color=\\\"tertiary\\\">\\n        <ion-label>Sin registros</ion-label>\\n      </ion-list-header>\\n\\n      <app-result-item\\n        *ngFor=\\\"let game of listsHomeService.results\\\"\\n        withEvents=\\\"true\\\"\\n        [game] = \\\"game\\\"\\n        routerLink=\\\"/results/profile/{{game.id}}\\\" \\n        routerDirection=\\\"forward\\\"\\n      ></app-result-item>\\n      \\n        \\n\\n      </ion-list>\\n  \\n\\n  </div>\\n\\n\\n\\n  <div *ngIf=\\\"firstLoad\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>  <ion-skeleton-text animated style=\\\"width: 100% ; height: 30px;\\\"></ion-skeleton-text> </ion-col>\\n        <ion-col>  <ion-skeleton-text animated style=\\\"width: 100% ; height: 30px;\\\"></ion-skeleton-text> </ion-col>\\n        <ion-col>  <ion-skeleton-text animated style=\\\"width: 100% ; height: 30px;\\\"></ion-skeleton-text> </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-card *ngFor=\\\"let i of listSkeleton\\\">\\n      <div class=\\\"ion-padding custom-skeleton\\\">\\n        <ion-skeleton-text animated style=\\\"width: 100% ; height: 30px;\\\"></ion-skeleton-text>\\n        <ion-skeleton-text animated style=\\\"width: 100% ; height: 30px;margin-top: 15px;\\\"></ion-skeleton-text>\\n      </div>\\n    </ion-card>\\n  </div>\\n\\n  \\n\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResultsPage } from './results.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResultsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResultsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResultsPageRoutingModule } from './results-routing.module';\nimport {ComponentsModule} from '../../../components/components.module';\n\n\nimport { ResultsPage } from './results.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ResultsPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [ResultsPage]\n})\nexport class ResultsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Model } from 'src/app/api/models/model';\nimport { RequestService } from 'src/app/api/request.service';\nimport { UtilService } from 'src/app/services/util.service';\nimport { DialogService } from 'src/app/api/util/dialog.service';\nimport { PaymentTeamService } from 'src/app/services/payment-team.service';\nimport { ListsHomeService } from 'src/app/services/lists-home.service';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.page.html',\n  styleUrls: ['./results.page.scss'],\n})\nexport class ResultsPage implements OnInit {\n\n  public modelGame  : Model;\n  //public list : any = [];\n  public tabs = []\n  public tabSelected :any;\n  public lastFocusSegment : any;\n  public listSkeleton = new Array(3)\n  public firstLoad = true;\n\n  constructor(\n    public request : RequestService,\n    public util : UtilService,\n    public dialogService : DialogService,\n    public paymentTeamService : PaymentTeamService,\n    public listsHomeService : ListsHomeService\n\n  ) {\n    this.modelGame = new Model('Game',request);\n\n   }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  async init(event = null){\n    /*this.modelGame.api_function('results').subscribe(data => {\n      if(data['status'] = 'success'){\n        this.list = data['data'];\n        if(event)\n          event.target.complete();\n      }\n    })\n*/\n    //await this.delay(5000);\n    this.modelGame.api_function('pageHomeResults').subscribe(\n      response => {\n        if(response['status'] == 'success'){\n          this.tabs = response['data']['dates'];\n          this.selectLast();\n        }\n        if(event)\n          event.target.complete()\n        console.log(response)\n        this.firstLoad = false;\n      },\n      error => {\n        if(event)\n          event.target.complete()\n        console.error(error)\n        this.firstLoad = false;\n      }\n    )\n  }\n\n   async selectLast(){\n    if(this.tabs.length > 0){\n      let tab = this.tabs.slice(-1)[0];\n      this.listsHomeService.results = tab['results']\n      this.tabSelected = this.tabs.length - 1\n      await this.delay( 1500 )\n      this.focusSegment()\n      //this.selectDate(tab['date']);\n    }\n  }\n\n  async selectDate(event){\n    let index = parseInt( event.detail.value );\n\n    let tab = this.tabs[index];\n\n    if(tab['results']){\n      this.listsHomeService.results = tab['results']\n      this.focusSegment()\n      return;\n    }\n    \n    await this.dialogService.loadingProgres();\n    \n    this.modelGame.api_function('resultsByDate',{'date' : tab['date']}).subscribe(\n      response => {\n        if(response['status'] == 'success'){\n          this.tabs[index]['results'] = response['data']\n          this.listsHomeService.results = this.tabs[index]['results'];\n          this.focusSegment()\n        }\n\n        this.dialogService.dimissLoaging();\n        console.log(response);\n      },\n      error => {\n        console.error(error);\n        this.dialogService.dimissLoaging();\n\n      }\n    )\n\n  }\n\n  focusSegment() {\n    let segmentId = 'sgm_r_' + this.tabSelected;\n    console.log('select segment : ', segmentId)\n    document.getElementById(segmentId).scrollIntoView({ \n      behavior: 'smooth',\n      block: 'center',\n      inline: 'center'\n    });\n  }\n\n  \n  delay(ms: number) {\n    return new Promise( resolve => setTimeout(resolve, ms) );\n  }\n\n  formatDate(val){\n    return this.util.setFormatMoment(val,'DD MMMM YYYY')\n  }\n\n}\n"]}