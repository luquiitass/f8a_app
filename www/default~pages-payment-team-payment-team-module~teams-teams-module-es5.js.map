{"version":3,"sources":["webpack:///src/app/pages/payment-team/payment-team.page.html","webpack:///src/app/pages/payment-team/payment-team.page.scss","webpack:///src/app/pages/payment-team/payment-team.page.ts"],"names":["PaymentTeamPage","reqest","viewCtrl","modalController","dialogService","authUser","router","location","chatService","team","id","name","admins","tabsEnables","info","payment","segmentSelect","errorName","errorAdmins","modelMercadoPago","modelTeam","push","text","user","completeName","email","$event","segment","isBack","console","log","verifyNameSelect","verifyAdmins","api_function","subscribe","response","preference_id","mp","checkout","preference","render","container","label","error","loadingProgres","dimissLoaging","length","dismiss","e","preventDefault","adminsDefault","create","component","componentProps","cancellable","model","multiple","textSearch","listSelect","modal","onDidDismiss","then","data","items","list","present","api_create","showToast","teams","saveUser","selector","template"],"mappings":"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","file":"default~pages-payment-team-payment-team-module~teams-teams-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-button color=\\\"dark\\\" (click)=\\\"close()\\\">\\n            <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n        </ion-button>\\n    </ion-buttons>\\n    <ion-title>Registrar mi equipo</ion-title>\\n    <ion-buttons slot=\\\"secondary\\\">\\n      <ion-button *ngIf=\\\"chatService.isInit\\\" (click)=\\\"chatService.toggle()\\\" [color]=\\\"chatService.isVisible ? 'success' : ''\\\">\\n        <ion-icon name=\\\"help-circle-outline\\\"></ion-icon>\\n      </ion-button>  \\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" [(ngModel)]=\\\"segmentSelect\\\" >\\n    \\n    <ion-segment-button value=\\\"1\\\" [disabled]=\\\"!tabsEnables.name\\\">\\n      <ion-label>1</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"2\\\" [disabled]=\\\"!tabsEnables.admins\\\">\\n      <ion-label>2</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"3\\\" [disabled]=\\\"!tabsEnables.payment\\\">\\n      <ion-label>3</ion-label>\\n    </ion-segment-button>\\n\\n  </ion-segment>\\n\\n  \\n\\n\\n    <div *ngIf=\\\"segmentSelect == '1'\\\">\\n\\n      <ion-card>\\n        <ion-card-content>\\n          <div class=\\\"title msj\\\">\\n            Verifíca el nombre del equipo\\n          </div>\\n\\n          <ion-list>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" >Nombre</ion-label>\\n              <ion-input type=\\\"text\\\" [(ngModel)]=\\\"team.name\\\" name=\\\"name\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-text color=\\\"danger\\\">{{errorName}}</ion-text>\\n\\n          </ion-list>\\n\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col>\\n              </ion-col>\\n              <ion-col>\\n                <ion-button expand=\\\"full\\\" (click)=\\\"changedSegment('2')\\\">\\n                  Siguiente\\n                  <ion-icon name=\\\"chevron-forward-outline\\\"></ion-icon>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n\\n        </ion-card-content>\\n      </ion-card>\\n\\n\\n     \\n\\n    </div>\\n\\n\\n    <div *ngIf=\\\"segmentSelect == '2'\\\">\\n\\n      \\n\\n      <ion-card>\\n        <ion-card-content>\\n          <div class=\\\"title msj\\\">\\n            Seleccionar administradores \\n          </div>\\n\\n          <ion-list>\\n            <div class=\\\"admins\\\" >\\n              <ion-list-header  class=\\\"bg-l1\\\" >\\n                <ion-label>Añadir administradores</ion-label>\\n                <button item-end ion-button color=\\\"danger\\\" (click)=\\\"addAdmins($event)\\\">\\n                  <ion-icon name=\\\"person-add-outline\\\"></ion-icon>\\n                </button>\\n              </ion-list-header>\\n\\n              <ion-text color=\\\"danger\\\">{{errorAdmins}}</ion-text>\\n        \\n              <ion-list  *ngFor=\\\"let item of team.admins\\\"  >\\n                <ion-item>  {{item.text ? item.text : item.last_name +' '+ item.first_name}}</ion-item>\\n              </ion-list>\\n            </div>\\n\\n          </ion-list>\\n\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col>\\n                <ion-button expand=\\\"full\\\" (click)=\\\"changedSegment('1',true)\\\" >\\n                  <ion-icon name=\\\"chevron-back-outline\\\"></ion-icon>\\n                  Atras\\n                </ion-button>\\n              </ion-col>\\n              <ion-col>\\n                <ion-button expand=\\\"full\\\" (click)=\\\"changedSegment('3')\\\">\\n                  Siguiente\\n                  <ion-icon name=\\\"chevron-forward-outline\\\"></ion-icon>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n\\n\\n        </ion-card-content>\\n      </ion-card>\\n\\n    </div>\\n\\n    <div *ngIf=\\\"segmentSelect == '3'\\\">\\n\\n      <ion-card>\\n        <ion-card-content>\\n          <div class=\\\"title msj\\\">\\n            Informacion sobre el registro\\n          </div>\\n\\n          <div class=\\\"cho-container msj-xs text\\\">\\n            Una vez registrado el equipo los administradores recibirán una notificación y podrán modificar los demás datos. \\n          </div>\\n\\n          <div class=\\\"cho-container msj-xs text\\\">\\n            Te recordamos que para que los administradores puedan realizar modificaciones, primero deben abonar la suscripción del equipo. \\n          </div>\\n\\n\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col>\\n                <ion-button expand=\\\"full\\\" (click)=\\\"changedSegment('2',true)\\\">\\n                  <ion-icon name=\\\"chevron-back-outline\\\"></ion-icon>\\n                  Atras\\n                </ion-button>\\n              </ion-col>\\n              <ion-col>\\n                <ion-button expand=\\\"full\\\" (click)=\\\"saveTeam()\\\">\\n                  Finalizar\\n                  <ion-icon name=\\\"checkmark-done-outline\\\"></ion-icon>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n\\n        </ion-card-content>\\n      </ion-card>\\n\\n\\n      \\n\\n    </div>\\n\\n\\n\\n\\n</ion-content>\\n\";","export default \".title {\\n  color: white;\\n  margin: 10px;\\n  background: #56565669;\\n  padding: 10px;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  border-bottom: 1px solid #797575;\\n}\\n\\n.text {\\n  padding: 13px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF5bWVudC10ZWFtL3BheW1lbnQtdGVhbS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxZQUFBO0VBQ0EsWUFBQTtFQUNBLHFCQUFBO0VBQ0EsYUFBQTtFQUNBLDRCQUFBO0VBQ0EsNkJBQUE7RUFDQSxnQ0FBQTtBQUFKOztBQUdBO0VBQ0ksYUFBQTtBQUFKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcGF5bWVudC10ZWFtL3BheW1lbnQtdGVhbS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGl0bGV7XG4gICAgLy9mb250LXNpemU6IHgtbGFyZ2U7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIG1hcmdpbjogMTBweDtcbiAgICBiYWNrZ3JvdW5kOiAjNTY1NjU2Njk7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxMHB4O1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMHB4O1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjNzk3NTc1O1xufVxuXG4udGV4dHtcbiAgICBwYWRkaW5nOiAxM3B4Oztcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Model } from 'src/app/api/models/model';\nimport { RequestService } from 'src/app/api/request.service';\nimport { ModalController } from '@ionic/angular';\nimport { SearchPage } from '../search/search.page';\nimport { ModalForm } from 'src/app/models/modal-form';\nimport { ModalFormInterface } from 'src/app/interfaces/modal-form-interface';\nimport { DialogService } from 'src/app/api/util/dialog.service';\nimport { AuthUserService } from 'src/app/services/auth-user.service';\nimport {environment} from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { PlatformLocation } from '@angular/common';\nimport { ChatService } from 'src/app/services/chat.service';\n\n\n\n\n@Component({\n  selector: 'app-payment-team',\n  templateUrl: './payment-team.page.html',\n  styleUrls: ['./payment-team.page.scss'],\n})\nexport class PaymentTeamPage extends ModalForm implements OnInit , ModalFormInterface {\n  \n  \n  public modelTeam : Model;\n  public modelMercadoPago : Model;\n  \n  public team = {\n    id : '',\n    name : '',\n    admins : []\n  }\n\n  public tabsEnables = {\n    info : true,\n    name : true,\n    admins : false,\n    payment : false\n  }\n\n  public segmentSelect = '1';\n  public errorName = '';\n  public errorAdmins = '';\n  public mp : any;\n\n  constructor(\n    public reqest : RequestService,\n    public viewCtrl: ModalController,\n    public modalController: ModalController,\n    public dialogService : DialogService,\n    public authUser : AuthUserService,\n    public router : Router,\n    location: PlatformLocation,\n    public chatService : ChatService\n\n\n  ) {\n    super(location,viewCtrl);\n    this.modelMercadoPago = new Model('MercadoPagoService',reqest);\n    this.modelTeam = new Model('Team',reqest);\n    this.team.admins.push({\n      text : `${authUser.user.completeName} (${authUser.user.email})`,\n      id : authUser.user.id\n    });\n\n    \n\n  \n\n    //Mercadopago.setPublishableKey(environment.mp_public_key); \n   \n   }\n\n\n  initObject() {\n  }\n\n\n  segmentChanged($event){\n    //this.segmentSelect = $event.detail.value;\n    //this.changedSegment($event.detail.value , this.segmentSelect < $event.detail.value)\n  }\n\n\n  changedSegment( segment , isBack = false){\n    console.log(segment);\n\n    if(isBack){\n      this.segmentSelect = segment;\n      return;\n    }\n\n    switch (segment) {\n      case '2':\n        this.verifyNameSelect()\n        return;\n      \n      case '3':\n          this.verifyAdmins();\n          return;\n\n      default :\n        this.segmentSelect = segment \n    }\n    \n  }\n\n  preferenceApi(){\n    console.log('preference api')\n      this.modelMercadoPago.api_function('createPreference',{}).subscribe(\n        response => {\n          console.log(response);\n          if(response['status'] == 'success'){\n            var preference_id = response['data'];\n            console.log('pref' , preference_id)\n\n            this.mp.checkout({\n              preference: {\n                  id: preference_id\n              },\n              render: {\n                    container: '.cho-container', // Indica el nombre de la clase donde se mostrará el botón de pago\n                    label: 'Pagar', // Cambia el texto del botón de pago (opcional)\n              }\n            })\n          }\n\n\n        },\n        error => {\n          console.error(error)\n        }  \n      )\n  }\n\n\n  async verifyNameSelect(){\n\n    if(this.team.name == ''){\n      this.errorName = 'El campo nombre es Obligario.';\n      this.tabsEnables.admins = false;\n      return;\n    }\n\n\n    await this.dialogService.loadingProgres('verificando nombre');\n    console.log('team' , this.team);\n    this.modelTeam.api_function('exist',this.team).subscribe(\n      response => {\n        this.dialogService.dimissLoaging();\n        if(response['data']){\n          this.errorName = `El equipo ${this.team.name} ya se encuentra Registrado.`;\n          this.tabsEnables.admins = false;\n          return;\n        }\n\n        this.errorName = '';\n        this.segmentSelect = '2';\n        this.tabsEnables.admins = true;\n        console.log(response)  \n      },\n      error => {\n        console.log(error)\n        this.dialogService.dimissLoaging();\n      }\n    )\n  }\n\n  verifyAdmins(){\n    this.errorAdmins = '';\n    if(this.team.admins.length > 0){\n      this.segmentSelect = '3';\n      this.tabsEnables.payment = true\n      //this.preferenceApi();\n    }else{\n      this.errorAdmins = 'Debe añadir como minimo un Administrador';\n      this.tabsEnables.payment = false;\n\n    }\n  }\n\n\n\n  dismiss( team ) {\n    this.viewCtrl.dismiss(\n      {\n        team : team,\n      }\n    );\n  }\n\n  close(){\n    this.viewCtrl.dismiss();\n  }\n\n  async addAdmins(e){\n    this.errorAdmins = '';\n    e.preventDefault();\n    console.log('Add admins');\n\n\n    \n    let adminsDefault = this.team.admins;\n\n    const modal = await this.modalController.create({\n      component: SearchPage ,\n      componentProps: { \n        cancellable: false,\n        model : 'User',\n        function : 'searchUser',\n        multiple : true,\n        textSearch : 'Nombre o email',\n        listSelect : adminsDefault\n      }\n    });\n\n    modal.onDidDismiss().then(data=>{\n      if(data.data && data.data.items){\n        const list = data.data['items'];\n      //console.log('users_select' , list);\n        this.team.admins = list;\n      }\n    })\n\n    return await modal.present();\n  }\n\n  async saveTeam(){\n\n    await this.dialogService.loadingProgres('Registrando');\n\n    this.modelTeam.api_create(this.team).subscribe(\n      response => {\n        this.dialogService.dimissLoaging();\n        if(response['status'] == 'success'){\n          this.dialogService.showToast('Equipo registrado',null,'success');\n          let team = response['Team'];\n          this.authUser.user.teams.push(team);\n          this.authUser.saveUser();\n          this.dismiss(team);\n          //this.router.navigateByUrl('/team/profile/'  + team.id);\n        }\n      }\n    ),\n    error => {\n      console.error(error);\n      this.dialogService.dimissLoaging();\n    }\n\n  }\n\n}\n"]}