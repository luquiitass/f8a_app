{"version":3,"sources":["../src/util/constants.ts","../src/util/errors.ts","../src/api/common.ts","../src/api/create-installation-request.ts","../src/util/sleep.ts","../src/helpers/buffer-to-base64-url-safe.ts","../src/helpers/generate-fid.ts","../src/util/get-key.ts","../src/helpers/fid-changed.ts","../src/helpers/idb-manager.ts","../src/helpers/get-installation-entry.ts","../src/api/generate-auth-token-request.ts","../src/helpers/refresh-auth-token.ts","../src/functions/get-id.ts","../src/functions/get-token.ts","../src/api/delete-installation-request.ts","../src/functions/delete-installation.ts","../src/functions/on-id-change.ts","../src/helpers/extract-app-config.ts","../src/index.ts","../src/interfaces/internal-message-payload.ts","../src/helpers/array-base64-translator.ts","../src/helpers/migrate-old-database.ts","../src/core/api.ts","../src/core/token-management.ts","../src/helpers/externalizePayload.ts","../src/helpers/is-console-message.ts","../src/helpers/sleep.ts","../src/controllers/sw-controller.ts","../src/controllers/window-controller.ts","./node_modules/idb/build/idb.js"],"names":["global","factory","exports","toArray","arr","Array","prototype","slice","call","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","IDBIndex","cursor","_cursor","_request","IDBCursor","methodName","ObjectStore","store","_store","createIndex","IDBObjectStore","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","objectStore","IDBTransaction","UpgradeDB","db","oldVersion","transaction","_db","createObjectStore","IDBDatabase","DB","funcName","replace","callback","length","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","continue","openDb","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","deleteDb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;AAmBO,IAAM,kBAAkB,GAAG,KAA3B;AAEA,IAAM,eAAe,GAAG,OAAK,OAA7B;AACA,IAAM,qBAAqB,GAAG,QAA9B;AAEA,IAAM,qBAAqB,GAChC,iDADK;AAGA,IAAM,uBAAuB,GAAG,KAAK,EAAL,GAAU,IAA1C,C,CAA+C;;AAE/C,IAAM,OAAO,GAAG,eAAhB;AACA,IAAM,YAAY,GAAG,eAArB;AC9BP;;;;;;;;;;;;;;;;;;;AA6BA,IAAM,qBAAqB,aACzB;AAAA;AAAA,IACE,iDAFuB,EAGzB;AAAA;AAAA,IAA4B,0CAHH,EAIzB;AAAA;AAAA,IAAoC,kCAJX,EAKzB;AAAA;AAAA,IACE,4FANuB,EAOzB;AAAA;AAAA,IAAyB,iDAPA,EAQzB;AAAA;AAAA,IACE,0EATuB,EAU1B,EAV0B,CAA3B;AAsBO,IAAM,aAAa,GAAG,IAAI,2DAAJ,CAC3B,OAD2B,EAE3B,YAF2B,EAG3B,qBAH2B,CAAtB;AAcP;;SACgB,a,CAAc,K,EAAc;AAC1C,SACE,KAAK,YAAY,4DAAjB,IACA,KAAK,CAAC,IAAN,CAAW,QAAX,CAAmB;AAAA;AAAnB,GAFF;AAIF;ACvEA;;;;;;;;;;;;;;;;;;SA+BgB,wB,CAAyB,E,EAAwB;MAAtB,SAAS,e;AAClD,SAAU,qBAAqB,eAArB,GAAkC,SAAlC,GAA2C,gBAArD;AACD;;SAEe,gC,CACd,Q,EAAmC;AAEnC,SAAO;AACL,SAAK,EAAE,QAAQ,CAAC,KADX;AAEL,iBAAa;AAAA;AAFR;AAGL,aAAS,EAAE,iCAAiC,CAAC,QAAQ,CAAC,SAAV,CAHvC;AAIL,gBAAY,EAAE,IAAI,CAAC,GAAL;AAJT,GAAP;AAMD;;SAEqB,oB,CACpB,W,EACA,Q,EAAkB;;;;;;AAEkB;AAAA;AAAA,YAAM,QAAQ,CAAC,IAAT,EAAN;;;AAA9B,sBAAY,GAAkB,SAA9B;AACA,mBAAS,GAAG,YAAY,CAAC,KAAzB;AACN;AAAA;AAAA,YAAO,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,YAA+C;AACpD,uBAAW,aADyC;AAEpD,sBAAU,EAAE,SAAS,CAAC,IAF8B;AAGpD,yBAAa,EAAE,SAAS,CAAC,OAH2B;AAIpD,wBAAY,EAAE,SAAS,CAAC;AAJ4B,WAA/C,CAAP;;;;AAMD;;SAEe,U,CAAW,E,EAAqB;MAAnB,MAAM,Y;AACjC,SAAO,IAAI,OAAJ,CAAY;AACjB,oBAAgB,kBADC;AAEjB,UAAM,EAAE,kBAFS;AAGjB,sBAAkB;AAHD,GAAZ,CAAP;AAKD;;SAEe,kB,CACd,S,EACA,E,EAA6C;MAA3C,YAAY,kB;AAEd,MAAM,OAAO,GAAG,UAAU,CAAC,SAAD,CAA1B;AACA,SAAO,CAAC,MAAR,CAAe,eAAf,EAAgC,sBAAsB,CAAC,YAAD,CAAtD;AACA,SAAO,OAAP;AACD;AAUD;;;;;;;SAKsB,kB,CACpB,E,EAA2B;;;;;;AAEZ;AAAA;AAAA,YAAM,EAAE,EAAR;;;AAAT,gBAAM,GAAG,SAAT;;AAEN,cAAI,MAAM,CAAC,MAAP,IAAiB,GAAjB,IAAwB,MAAM,CAAC,MAAP,GAAgB,GAA5C,EAAiD;;AAE/C;AAAA;AAAA,cAAO,EAAE,EAAT;AACD;;AAED;AAAA;AAAA,YAAO,MAAP;;;;AACD;;AAED,SAAS,iCAAT,CAA2C,iBAA3C,EAAoE;;AAElE,SAAO,MAAM,CAAC,iBAAiB,CAAC,OAAlB,CAA0B,GAA1B,EAA+B,KAA/B,CAAD,CAAb;AACD;;AAED,SAAS,sBAAT,CAAgC,YAAhC,EAAoD;AAClD,SAAU,qBAAqB,MAArB,GAAyB,YAAnC;AACF;AC9GA;;;;;;;;;;;;;;;;;;SAiCsB,yB,CACpB,S,EACA,E,EAAoC;MAAlC,GAAG,S;;;;;;AAEC,kBAAQ,GAAG,wBAAwB,CAAC,SAAD,CAAnC;AAEA,iBAAO,GAAG,UAAU,CAAC,SAAD,CAApB;AACA,cAAI,GAAG;AACX,eAAG,KADQ;AAEX,uBAAW,EAAE,qBAFF;AAGX,iBAAK,EAAE,SAAS,CAAC,KAHN;AAIX,sBAAU,EAAE;AAJD,WAAP;AAOA,iBAAO,GAAgB;AAC3B,kBAAM,EAAE,MADmB;AAE3B,mBAAO,SAFoB;AAG3B,gBAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf;AAHqB,WAAvB;AAMW;AAAA;AAAA,YAAM,kBAAkB,CAAC;AAAM,wBAAK,CAAC,QAAD,EAAW,OAAX,CAAL;AAAwB,WAA/B,CAAxB;;;AAAX,kBAAQ,GAAG,SAAX;eACF,QAAQ,CAAC,E,EAAT;AAAA;AAAA;AACgD;AAAA;AAAA,YAAM,QAAQ,CAAC,IAAT,EAAN;;;AAA5C,uBAAa,GAA+B,SAA5C;AACA,qCAA2B,GAAgC;AAC/D,eAAG,EAAE,aAAa,CAAC,GAAd,IAAqB,GADqC;AAE/D,8BAAkB;AAAA;AAF6C;AAG/D,wBAAY,EAAE,aAAa,CAAC,YAHmC;AAI/D,qBAAS,EAAE,gCAAgC,CAAC,aAAa,CAAC,SAAf;AAJoB,WAA3D;AAMN;AAAA;AAAA,YAAO,2BAAP;;;AAEM;AAAA;AAAA,YAAM,oBAAoB,CAAC,qBAAD,EAAwB,QAAxB,CAA1B;;;AAAN,gBAAM,SAAN;;;;;AChEJ;;;;;;;;;;;;;;;;;AAiBA;;;SACgB,K,CAAM,E,EAAU;AAC9B,SAAO,IAAI,OAAJ,CAAkB,mBAAO;AAC9B,cAAU,CAAC,OAAD,EAAU,EAAV,CAAV;AACD,GAFM,CAAP;AAGF;ACtBA;;;;;;;;;;;;;;;;;;SAiBgB,qB,CAAsB,K,EAAiB;AACrD,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,YAAP,CAAmB,KAAnB,SAAM,qHAAiB,KAAjB,EAAN,CAAD,CAAhB;AACA,SAAO,GAAG,CAAC,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,EAAwB,OAAxB,CAAgC,KAAhC,EAAuC,GAAvC,CAAP;AACF;ACpBA;;;;;;;;;;;;;;;;;;AAmBO,IAAM,iBAAiB,GAAG,mBAA1B;AACA,IAAM,WAAW,GAAG,EAApB;AAEP;;;;;SAIgB,W,GAAW;AACzB,MAAI;;;AAGF,QAAM,YAAY,GAAG,IAAI,UAAJ,CAAe,EAAf,CAArB;AACA,QAAM,QAAM,GACV,IAAI,CAAC,MAAL,IAAiB,IAAyC,CAAC,QAD7D;AAEA,YAAM,CAAC,eAAP,CAAuB,YAAvB,EANE,C;;AASF,gBAAY,CAAC,CAAD,CAAZ,GAAkB,MAAc,YAAY,CAAC,CAAD,CAAZ,GAAkB,EAAlD;AAEA,QAAM,GAAG,GAAG,MAAM,CAAC,YAAD,CAAlB;AAEA,WAAO,iBAAiB,CAAC,IAAlB,CAAuB,GAAvB,IAA8B,GAA9B,GAAoC,WAA3C;AACD,GAdD,CAcE,WAAM;;AAEN,WAAO,WAAP;AACD;AACF;AAED;;;AACA,SAAS,MAAT,CAAgB,YAAhB,EAAwC;AACtC,MAAM,SAAS,GAAG,qBAAqB,CAAC,YAAD,CAAvC,CADsC,C;;;AAKtC,SAAO,SAAS,CAAC,MAAV,CAAiB,CAAjB,EAAoB,EAApB,CAAP;AACF;ACtDA;;;;;;;;;;;;;;;;;AAmBA;;;SACgB,M,CAAO,S,EAAoB;AACzC,SAAU,SAAS,CAAC,OAAV,GAAiB,GAAjB,GAAqB,SAAS,CAAC,KAAzC;AACF;ACtBA;;;;;;;;;;;;;;;;;;AAqBA,IAAM,kBAAkB,GAAyC,IAAI,GAAJ,EAAjE;AAEA;;;;;SAIgB,U,CAAW,S,EAAsB,G,EAAW;AAC1D,MAAM,GAAG,GAAG,MAAM,CAAC,SAAD,CAAlB;AAEA,wBAAsB,CAAC,GAAD,EAAM,GAAN,CAAtB;AACA,oBAAkB,CAAC,GAAD,EAAM,GAAN,CAAlB;AACD;;SAEe,W,CACd,S,EACA,Q,EAA4B;;;AAI5B,qBAAmB;AAEnB,MAAM,GAAG,GAAG,MAAM,CAAC,SAAD,CAAlB;AAEA,MAAI,WAAW,GAAG,kBAAkB,CAAC,GAAnB,CAAuB,GAAvB,CAAlB;;AACA,MAAI,CAAC,WAAL,EAAkB;AAChB,eAAW,GAAG,IAAI,GAAJ,EAAd;AACA,sBAAkB,CAAC,GAAnB,CAAuB,GAAvB,EAA4B,WAA5B;AACD;;AACD,aAAW,CAAC,GAAZ,CAAgB,QAAhB;AACD;;SAEe,c,CACd,S,EACA,Q,EAA4B;AAE5B,MAAM,GAAG,GAAG,MAAM,CAAC,SAAD,CAAlB;AAEA,MAAM,WAAW,GAAG,kBAAkB,CAAC,GAAnB,CAAuB,GAAvB,CAApB;;AAEA,MAAI,CAAC,WAAL,EAAkB;AAChB;AACD;;AAED,aAAW,CAAC,MAAZ,CAAmB,QAAnB;;AACA,MAAI,WAAW,CAAC,IAAZ,KAAqB,CAAzB,EAA4B;AAC1B,sBAAkB,CAAC,MAAnB,CAA0B,GAA1B;AACD,GAb2B,C;;;AAgB5B,uBAAqB;AACtB;;AAED,SAAS,sBAAT,CAAgC,GAAhC,EAA6C,GAA7C,EAAwD;;;AACtD,MAAM,SAAS,GAAG,kBAAkB,CAAC,GAAnB,CAAuB,GAAvB,CAAlB;;AACA,MAAI,CAAC,SAAL,EAAgB;AACd;AACD;;;AAED,SAAuB,qFAAS,kCAAhC,EAAgC,mBAAhC,EAAgC,kCAAhC,EAAkC;AAA7B,UAAM,QAAQ,sBAAd;AACH,cAAQ,CAAC,GAAD,CAAR;AACD;;;;;;;;;;;;AACF;;AAED,SAAS,kBAAT,CAA4B,GAA5B,EAAyC,GAAzC,EAAoD;AAClD,MAAM,OAAO,GAAG,mBAAmB,EAAnC;;AACA,MAAI,OAAJ,EAAa;AACX,WAAO,CAAC,WAAR,CAAoB;AAAE,SAAG,KAAL;AAAO,SAAG;AAAV,KAApB;AACD;;AACD,uBAAqB;AACtB;;AAED,IAAI,gBAAgB,GAA4B,IAAhD;AACA;;AACA,SAAS,mBAAT,GAA4B;AAC1B,MAAI,CAAC,gBAAD,IAAqB,sBAAsB,IAA/C,EAAqD;AACnD,oBAAgB,GAAG,IAAI,gBAAJ,CAAqB,uBAArB,CAAnB;;AACA,oBAAgB,CAAC,SAAjB,GAA6B,aAAC;AAC5B,4BAAsB,CAAC,CAAC,CAAC,IAAF,CAAO,GAAR,EAAa,CAAC,CAAC,IAAF,CAAO,GAApB,CAAtB;AACD,KAFD;AAGD;;AACD,SAAO,gBAAP;AACD;;AAED,SAAS,qBAAT,GAA8B;AAC5B,MAAI,kBAAkB,CAAC,IAAnB,KAA4B,CAA5B,IAAiC,gBAArC,EAAuD;AACrD,oBAAgB,CAAC,KAAjB;AACA,oBAAgB,GAAG,IAAnB;AACD;AACH;AC7GA;;;;;;;;;;;;;;;;;;AAuBA,IAAM,aAAa,GAAG,iCAAtB;AACA,IAAM,gBAAgB,GAAG,CAAzB;AACA,IAAM,iBAAiB,GAAG,8BAA1B;AAEA,IAAI,SAAS,GAAuB,IAApC;;AACA,SAAS,YAAT,GAAqB;AACnB,MAAI,CAAC,SAAL,EAAgB;AACd,aAAS,GAAG,kDAAM,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,qBAAS;;;;;;AAM3D,cAAQ,SAAS,CAAC,UAAlB;AACE,aAAK,CAAL;AACE,mBAAS,CAAC,iBAAV,CAA4B,iBAA5B;AAFJ;AAID,KAViB,CAAlB;AAWD;;AACD,SAAO,SAAP;AACD;AAcD;;;SACsB,G,CACpB,S,EACA,K,EAAgB;;;;;;AAEV,aAAG,GAAG,MAAM,CAAC,SAAD,CAAZ;AACK;AAAA;AAAA,YAAM,YAAY,EAAlB;;;AAAL,YAAE,GAAG,SAAL;AACA,YAAE,GAAG,EAAE,CAAC,WAAH,CAAe,iBAAf,EAAkC,WAAlC,CAAL;AACA,qBAAW,GAAG,EAAE,CAAC,WAAH,CAAe,iBAAf,CAAd;AACW;AAAA;AAAA,YAAM,WAAW,CAAC,GAAZ,CAAgB,GAAhB,CAAN;;;AAAX,kBAAQ,GAAG,SAAX;AACN;AAAA;AAAA,YAAM,WAAW,CAAC,GAAZ,CAAgB,KAAhB,EAAuB,GAAvB,CAAN;;;AAAA;;AACA;AAAA;AAAA,YAAM,EAAE,CAAC,QAAT;;;AAAA;;AAEA,cAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,GAAT,KAAiB,KAAK,CAAC,GAAxC,EAA6C;AAC3C,sBAAU,CAAC,SAAD,EAAY,KAAK,CAAC,GAAlB,CAAV;AACD;;AAED;AAAA;AAAA,YAAO,KAAP;;;;AACD;AAED;;;SACsB,M,CAAO,S,EAAoB;;;;;;AACzC,aAAG,GAAG,MAAM,CAAC,SAAD,CAAZ;AACK;AAAA;AAAA,YAAM,YAAY,EAAlB;;;AAAL,YAAE,GAAG,SAAL;AACA,YAAE,GAAG,EAAE,CAAC,WAAH,CAAe,iBAAf,EAAkC,WAAlC,CAAL;AACN;AAAA;AAAA,YAAM,EAAE,CAAC,WAAH,CAAe,iBAAf,EAAkC,MAAlC,CAAyC,GAAzC,CAAN;;;AAAA;;AACA;AAAA;AAAA,YAAM,EAAE,CAAC,QAAT;;;AAAA;;;;;;;;AACD;AAED;;;;;;;;SAMsB,M,CACpB,S,EACA,Q,EAAqE;;;;;;AAE/D,aAAG,GAAG,MAAM,CAAC,SAAD,CAAZ;AACK;AAAA;AAAA,YAAM,YAAY,EAAlB;;;AAAL,YAAE,GAAG,SAAL;AACA,YAAE,GAAG,EAAE,CAAC,WAAH,CAAe,iBAAf,EAAkC,WAAlC,CAAL;AACA,eAAK,GAAG,EAAE,CAAC,WAAH,CAAe,iBAAf,CAAR;AAC0C;AAAA;AAAA,YAAM,KAAK,CAAC,GAAN,CAAU,GAAV,CAAN;;;AAA1C,kBAAQ,GAAkC,SAA1C;AACA,kBAAQ,GAAG,QAAQ,CAAC,QAAD,CAAnB;gBAEF,QAAQ,KAAK,S,GAAb;AAAA;AAAA;AACF;AAAA;AAAA,YAAM,KAAK,CAAC,MAAN,CAAa,GAAb,CAAN;;;AAAA;;;;;;;AAEA;AAAA;AAAA,YAAM,KAAK,CAAC,GAAN,CAAU,QAAV,EAAoB,GAApB,CAAN;;;AAAA;;;;;AAEF;AAAA;AAAA,YAAM,EAAE,CAAC,QAAT;;;AAAA;;AAEA,cAAI,QAAQ,KAAK,CAAC,QAAD,IAAa,QAAQ,CAAC,GAAT,KAAiB,QAAQ,CAAC,GAA5C,CAAZ,EAA8D;AAC5D,sBAAU,CAAC,SAAD,EAAY,QAAQ,CAAC,GAArB,CAAV;AACD;;AAED;AAAA;AAAA,YAAO,QAAP;;;;;AClHF;;;;;;;;;;;;;;;;;AAqCA;;;;;;SAIsB,oB,CACpB,S,EAAoB;;;;;;;;;AAIM;AAAA;AAAA,YAAM,MAAM,CAAC,SAAD,EAAY,oBAAQ;AACxD,gBAAM,iBAAiB,GAAG,+BAA+B,CAAC,QAAD,CAAzD;AACA,gBAAM,gBAAgB,GAAG,8BAA8B,CACrD,SADqD,EAErD,iBAFqD,CAAvD;AAIA,+BAAmB,GAAG,gBAAgB,CAAC,mBAAvC;AACA,mBAAO,gBAAgB,CAAC,iBAAxB;AACD,WARqC,CAAZ;;;AAApB,2BAAiB,GAAG,SAApB;gBAUF,iBAAiB,CAAC,GAAlB,KAA0B,W,GAA1B;AAAA;AAAA;;AAE0B;AAAA;AAAA,YAAM,mBAAN;;;;AAA5B;AAAA;AAAA,aAAS,uBAAmB,SAAnB,EAA6C,EAAtD;;;AAGF;AAAA;AAAA,YAAO;AACL,6BAAiB,mBADZ;AAEL,+BAAmB;AAFd,WAAP;;;;AAID;AAED;;;;;;AAIA,SAAS,+BAAT,CACE,QADF,EACyC;AAEvC,MAAM,KAAK,GAAsB,QAAQ,IAAI;AAC3C,OAAG,EAAE,WAAW,EAD2B;AAE3C,sBAAkB;AAAA;;AAFyB,GAA7C;AAKA,SAAO,oBAAoB,CAAC,KAAD,CAA3B;AACD;AAED;;;;;;;;;AAOA,SAAS,8BAAT,CACE,SADF,EAEE,iBAFF,EAEsC;AAEpC,MAAI,iBAAiB,CAAC,kBAAlB,KAAoC;AAAA;AAAxC,IAAwE;AACtE,QAAI,CAAC,SAAS,CAAC,MAAf,EAAuB;;AAErB,UAAM,4BAA4B,GAAG,OAAO,CAAC,MAAR,CACnC,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,OADmC,CAArC;AAGA,aAAO;AACL,yBAAiB,mBADZ;AAEL,2BAAmB,EAAE;AAFhB,OAAP;AAID,KAVqE,C;;;AAatE,QAAM,eAAe,GAAgC;AACnD,SAAG,EAAE,iBAAiB,CAAC,GAD4B;AAEnD,wBAAkB;AAAA;AAFiC;AAGnD,sBAAgB,EAAE,IAAI,CAAC,GAAL;AAHiC,KAArD;AAKA,QAAM,mBAAmB,GAAG,oBAAoB,CAC9C,SAD8C,EAE9C,eAF8C,CAAhD;AAIA,WAAO;AAAE,uBAAiB,EAAE,eAArB;AAAsC,yBAAmB;AAAzD,KAAP;AACD,GAvBD,MAuBO,IACL,iBAAiB,CAAC,kBAAlB,KAAoC;AAAA;AAD/B,IAEL;AACA,WAAO;AACL,uBAAiB,mBADZ;AAEL,yBAAmB,EAAE,wBAAwB,CAAC,SAAD;AAFxC,KAAP;AAID,GAPM,MAOA;AACL,WAAO;AAAE,uBAAiB;AAAnB,KAAP;AACD;AACF;AAED;;;AACA,SAAe,oBAAf,CACE,SADF,EAEE,iBAFF,EAEgD;;;;;;;;AAGR;AAAA;AAAA,YAAM,yBAAyB,CACjE,SADiE,EAEjE,iBAFiE,CAA/B;;;AAA9B,qCAA2B,GAAG,SAA9B;AAIN;AAAA;AAAA,YAAO,GAAG,CAAC,SAAD,EAAY,2BAAZ,CAAV;;;;gBAEI,aAAa,CAAC,GAAD,CAAb,IAAoB,GAAC,CAAC,UAAF,CAAa,UAAb,KAA4B,G,GAAhD;AAAA;AAAA,e;;;AAGF;AAAA;AAAA,YAAM,MAAM,CAAC,SAAD,CAAZ;;;;;AAAA;;;;;;;;AAGA;AAAA;AAAA,YAAM,GAAG,CAAC,SAAD,EAAY;AACnB,eAAG,EAAE,iBAAiB,CAAC,GADJ;AAEnB,8BAAkB;AAAA;;AAFC,WAAZ,CAAT;;;;AAAA;;;;;AAKF,gBAAM,GAAN;;;;;;;;;AAEH;AAED;;;AACA,SAAe,wBAAf,CACE,SADF,EACsB;;;;;;;AAMW;AAAA;AAAA,YAAM,yBAAyB,CAAC,SAAD,CAA/B;;;AAA3B,eAAK,GAAsB,SAA3B;;;;gBACG,KAAK,CAAC,kBAAN,KAAwB;AAAA;aAA8B;AAAA;AAAA,e;;AAE3D;AAAA;AAAA,YAAM,KAAK,CAAC,GAAD,CAAX;;;;AAAA;;AAEQ;AAAA;AAAA,YAAM,yBAAyB,CAAC,SAAD,CAA/B;;;AAAR,eAAK,GAAG,SAAR;;;;;;gBAGE,KAAK,CAAC,kBAAN,KAAwB;AAAA;aAAxB;AAAA;AAAA;AAKE;AAAA;AAAA,YAAM,oBAAoB,CAAC,SAAD,CAA1B;;;AAHE,eAGF,SAHE,EACJ,iBAAiB,uBADb,EAEJ,mBAAmB,yBAFf;;AAKN,cAAI,mBAAJ,EAAyB;AACvB;AAAA;AAAA,cAAO,mBAAP;AACD,WAFD,MAEO;;AAEL;AAAA;AAAA,cAAO,iBAAP;AACD;;;AAGH;AAAA;AAAA,YAAO,KAAP;;;;AACD;AAED;;;;;;;;;;AAQA,SAAS,yBAAT,CACE,SADF,EACsB;AAEpB,SAAO,MAAM,CAAC,SAAD,EAAY,oBAAQ;AAC/B,QAAI,CAAC,QAAL,EAAe;AACb,YAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,OAAN;AACD;;AACD,WAAO,oBAAoB,CAAC,QAAD,CAA3B;AACD,GALY,CAAb;AAMD;;AAED,SAAS,oBAAT,CAA8B,KAA9B,EAAsD;AACpD,MAAI,8BAA8B,CAAC,KAAD,CAAlC,EAA2C;AACzC,WAAO;AACL,SAAG,EAAE,KAAK,CAAC,GADN;AAEL,wBAAkB;AAAA;;AAFb,KAAP;AAID;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,8BAAT,CACE,iBADF,EACsC;AAEpC,SACE,iBAAiB,CAAC,kBAAlB,KAAoC;AAAA;AAApC,KACA,iBAAiB,CAAC,gBAAlB,GAAqC,kBAArC,GAA0D,IAAI,CAAC,GAAL,EAF5D;AAIF;AClOA;;;;;;;;;;;;;;;;;;SAiCsB,wB,CACpB,E,EACA,iB,EAA8C;MAD5C,SAAS,e;MAAE,sBAAsB,4B;;;;;;AAG7B,kBAAQ,GAAG,4BAA4B,CAAC,SAAD,EAAY,iBAAZ,CAAvC;AAEA,iBAAO,GAAG,kBAAkB,CAAC,SAAD,EAAY,iBAAZ,CAA5B;AAGA,wBAAc,GAAG,sBAAsB,CAAC,YAAvB,CAAoC;AACzD,oBAAQ,EAAE;AAD+C,WAApC,CAAjB;;AAGN,cAAI,cAAJ,EAAoB;AAClB,mBAAO,CAAC,MAAR,CAAe,mBAAf,EAAoC,cAAc,CAAC,qBAAf,EAApC;AACD;;AAEK,cAAI,GAAG;AACX,wBAAY,EAAE;AACZ,wBAAU,EAAE;AADA;AADH,WAAP;AAMA,iBAAO,GAAgB;AAC3B,kBAAM,EAAE,MADmB;AAE3B,mBAAO,SAFoB;AAG3B,gBAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf;AAHqB,WAAvB;AAMW;AAAA;AAAA,YAAM,kBAAkB,CAAC;AAAM,wBAAK,CAAC,QAAD,EAAW,OAAX,CAAL;AAAwB,WAA/B,CAAxB;;;AAAX,kBAAQ,GAAG,SAAX;eACF,QAAQ,CAAC,E,EAAT;AAAA;AAAA;AAC+C;AAAA;AAAA,YAAM,QAAQ,CAAC,IAAT,EAAN;;;AAA3C,uBAAa,GAA8B,SAA3C;AACA,4BAAkB,GAAuB,gCAAgC,CAC7E,aAD6E,CAAzE;AAGN;AAAA;AAAA,YAAO,kBAAP;;;AAEM;AAAA;AAAA,YAAM,oBAAoB,CAAC,qBAAD,EAAwB,QAAxB,CAA1B;;;AAAN,gBAAM,SAAN;;;;AAEH;;AAED,SAAS,4BAAT,CACE,SADF,EAEE,EAFF,EAEsC;MAAlC,GAAG,S;AAEL,SAAU,wBAAwB,CAAC,SAAD,CAAxB,GAAmC,GAAnC,GAAuC,GAAvC,GAA0C,sBAApD;AACF;AC9EA;;;;;;;;;;;;;;;;;AAiCA;;;;;;;;SAMsB,gB,CACpB,Y,EACA,Y,EAAoB;AAApB;AAAA;AAAoB;;;;;;;;AAGN;AAAA;AAAA,YAAM,MAAM,CAAC,YAAY,CAAC,SAAd,EAAyB,oBAAQ;AACzD,gBAAI,CAAC,iBAAiB,CAAC,QAAD,CAAtB,EAAkC;AAChC,oBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,eAAN;AACD;;AAED,gBAAM,YAAY,GAAG,QAAQ,CAAC,SAA9B;;AACA,gBAAI,CAAC,YAAD,IAAiB,gBAAgB,CAAC,YAAD,CAArC,EAAqD;;AAEnD,qBAAO,QAAP;AACD,aAHD,MAGO,IAAI,YAAY,CAAC,aAAb,KAA0B;AAAA;AAA9B,cAA8D;;AAEnE,0BAAY,GAAG,yBAAyB,CAAC,YAAD,EAAe,YAAf,CAAxC;AACA,qBAAO,QAAP;AACD,aAJM,MAIA;;AAEL,kBAAI,CAAC,SAAS,CAAC,MAAf,EAAuB;AACrB,sBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,iBAAN;AACD;;AAED,kBAAM,eAAe,GAAG,mCAAmC,CAAC,QAAD,CAA3D;AACA,0BAAY,GAAG,wBAAwB,CAAC,YAAD,EAAe,eAAf,CAAvC;AACA,qBAAO,eAAP;AACD;AACF,WAvByB,CAAZ;;;AAAR,eAAK,GAAG,SAAR;eAyBY,Y,EAAA;AAAA;AAAA;AACd;AAAA;AAAA,YAAM,YAAN;;;AAAA;;;;;;AACA,eAAC,KAAK,CAAC,SAAP;;;;AAFE,mBAAS,KAAT;AAGN;AAAA;AAAA,YAAO,SAAP;;;;AACD;AAED;;;;;;;;AAMA,SAAe,yBAAf,CACE,YADF,EAEE,YAFF,EAEuB;;;;;;AAMT;AAAA;AAAA,YAAM,sBAAsB,CAAC,YAAY,CAAC,SAAd,CAA5B;;;AAAR,eAAK,GAAG,SAAR;;;;gBACG,KAAK,CAAC,SAAN,CAAgB,aAAhB,KAA6B;AAAA;aAA8B;AAAA;AAAA,e;;AAEhE;AAAA;AAAA,YAAM,KAAK,CAAC,GAAD,CAAX;;;;AAAA;;AAEQ;AAAA;AAAA,YAAM,sBAAsB,CAAC,YAAY,CAAC,SAAd,CAA5B;;;AAAR,eAAK,GAAG,SAAR;;;;;;AAGI,mBAAS,GAAG,KAAK,CAAC,SAAlB;;AACN,cAAI,SAAS,CAAC,aAAV,KAAuB;AAAA;AAA3B,YAA2D;;AAEzD;AAAA;AAAA,cAAO,gBAAgB,CAAC,YAAD,EAAe,YAAf,CAAvB;AACD,WAHD,MAGO;AACL;AAAA;AAAA,cAAO,SAAP;AACD;;;;;AACF;AAED;;;;;;;;;;AAQA,SAAS,sBAAT,CACE,SADF,EACsB;AAEpB,SAAO,MAAM,CAAC,SAAD,EAAY,oBAAQ;AAC/B,QAAI,CAAC,iBAAiB,CAAC,QAAD,CAAtB,EAAkC;AAChC,YAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,OAAN;AACD;;AAED,QAAM,YAAY,GAAG,QAAQ,CAAC,SAA9B;;AACA,QAAI,2BAA2B,CAAC,YAAD,CAA/B,EAA+C;AAC7C,+HACK,QADL,GACa;AACX,iBAAS,EAAE;AAAE,uBAAa;AAAA;;AAAf;AADA,OADb;AAID;;AAED,WAAO,QAAP;AACD,GAdY,CAAb;AAeD;;AAED,SAAe,wBAAf,CACE,YADF,EAEE,iBAFF,EAEgD;;;;;;;;AAG1B;AAAA;AAAA,YAAM,wBAAwB,CAC9C,YAD8C,EAE9C,iBAF8C,CAA9B;;;AAAZ,mBAAS,GAAG,SAAZ;AAIA,kCAAwB,qHACzB,iBADyB,GACR;AACpB,qBAAS;AADW,WADQ,CAAxB;AAIN;AAAA;AAAA,YAAM,GAAG,CAAC,YAAY,CAAC,SAAd,EAAyB,wBAAzB,CAAT;;;AAAA;;AACA;AAAA;AAAA,YAAO,SAAP;;;;gBAGE,aAAa,CAAC,GAAD,CAAb,KACC,GAAC,CAAC,UAAF,CAAa,UAAb,KAA4B,GAA5B,IAAmC,GAAC,CAAC,UAAF,CAAa,UAAb,KAA4B,GADhE,C,GAAA;AAAA;AAAA,e;;;AAKA;AAAA;AAAA,YAAM,MAAM,CAAC,YAAY,CAAC,SAAd,CAAZ;;;;;AAAA;;;;;;;AAEM,kCAAwB,qHACzB,iBADyB,GACR;AACpB,qBAAS,EAAE;AAAE,2BAAa;AAAA;;AAAf;AADS,WADQ,CAAxB;AAIN;AAAA;AAAA,YAAM,GAAG,CAAC,YAAY,CAAC,SAAd,EAAyB,wBAAzB,CAAT;;;AAAA;;;;;AAEF,gBAAM,GAAN;;;;;;;;;AAEH;;AAED,SAAS,iBAAT,CACE,iBADF,EACkD;AAEhD,SACE,iBAAiB,KAAK,SAAtB,IACA,iBAAiB,CAAC,kBAAlB,KAAoC;AAAA;AAFtC;AAID;;AAED,SAAS,gBAAT,CAA0B,SAA1B,EAA8C;AAC5C,SACE,SAAS,CAAC,aAAV,KAAuB;AAAA;AAAvB,KACA,CAAC,kBAAkB,CAAC,SAAD,CAFrB;AAID;;AAED,SAAS,kBAAT,CAA4B,SAA5B,EAAyD;AACvD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAL,EAAZ;AACA,SACE,GAAG,GAAG,SAAS,CAAC,YAAhB,IACA,SAAS,CAAC,YAAV,GAAyB,SAAS,CAAC,SAAnC,GAA+C,GAAG,GAAG,uBAFvD;AAID;AAED;;;AACA,SAAS,mCAAT,CACE,QADF,EACuC;AAErC,MAAM,mBAAmB,GAAwB;AAC/C,iBAAa;AAAA;AADkC;AAE/C,eAAW,EAAE,IAAI,CAAC,GAAL;AAFkC,GAAjD;AAIA,2HACK,QADL,GACa;AACX,aAAS,EAAE;AADA,GADb;AAID;;AAED,SAAS,2BAAT,CAAqC,SAArC,EAAyD;AACvD,SACE,SAAS,CAAC,aAAV,KAAuB;AAAA;AAAvB,KACA,SAAS,CAAC,WAAV,GAAwB,kBAAxB,GAA6C,IAAI,CAAC,GAAL,EAF/C;AAIF;ACnNA;;;;;;;;;;;;;;;;;;SAqBsB,M,CACpB,Y,EAAkC;;;;;;;AAEiB;AAAA;AAAA,YAAM,oBAAoB,CAC3E,YAAY,CAAC,SAD8D,CAA1B;;;AAA7C,eAA6C,SAA7C,EAAE,iBAAiB,uBAAnB,EAAqB,mBAAmB,yBAAxC;;AAIN,cAAI,mBAAJ,EAAyB;AACvB,+BAAmB,CAAC,KAApB,CAA0B,OAAO,CAAC,KAAlC;AACD,WAFD,MAEO;;;AAGL,4BAAgB,CAAC,YAAD,CAAhB,CAA+B,KAA/B,CAAqC,OAAO,CAAC,KAA7C;AACD;;AAED;AAAA;AAAA,YAAO,iBAAiB,CAAC,GAAzB;;;;;ACpCF;;;;;;;;;;;;;;;;;;SAsBsB,S,CACpB,Y,EACA,Y,EAAoB;AAApB;AAAA;AAAoB;;;;;;;AAEpB;AAAA;AAAA,YAAM,gCAAgC,CAAC,YAAY,CAAC,SAAd,CAAtC;;;AAAA;;AAIkB;AAAA;AAAA,YAAM,gBAAgB,CAAC,YAAD,EAAe,YAAf,CAAtB;;;AAAZ,mBAAS,GAAG,SAAZ;AACN;AAAA;AAAA,YAAO,SAAS,CAAC,KAAjB;;;;AACD;;AAED,SAAe,gCAAf,CACE,SADF,EACsB;;;;;;AAEY;AAAA;AAAA,YAAM,oBAAoB,CAAC,SAAD,CAA1B;;;AAAxB,6BAAmB,GAAK,UAAL,mBAAnB;eAEJ,mB,EAAA;AAAA;AAAA,e;;AAEF;AAAA;AAAA,YAAM,mBAAN;;;;AAAA;;;;;;;;;;;;ACzCJ;;;;;;;;;;;;;;;;;;SA0BsB,yB,CACpB,S,EACA,iB,EAA8C;;;;;;AAExC,kBAAQ,GAAG,iBAAiB,CAAC,SAAD,EAAY,iBAAZ,CAA5B;AAEA,iBAAO,GAAG,kBAAkB,CAAC,SAAD,EAAY,iBAAZ,CAA5B;AACA,iBAAO,GAAgB;AAC3B,kBAAM,EAAE,QADmB;AAE3B,mBAAO;AAFoB,WAAvB;AAKW;AAAA;AAAA,YAAM,kBAAkB,CAAC;AAAM,wBAAK,CAAC,QAAD,EAAW,OAAX,CAAL;AAAwB,WAA/B,CAAxB;;;AAAX,kBAAQ,GAAG,SAAX;eACF,CAAC,QAAQ,CAAC,E,EAAV;AAAA;AAAA;AACI;AAAA;AAAA,YAAM,oBAAoB,CAAC,qBAAD,EAAwB,QAAxB,CAA1B;;;AAAN,gBAAM,SAAN;;;;;;;;;AAEH;;AAED,SAAS,iBAAT,CACE,SADF,EAEE,EAFF,EAEsC;MAAlC,GAAG,S;AAEL,SAAU,wBAAwB,CAAC,SAAD,CAAxB,GAAmC,GAAnC,GAAuC,GAAjD;AACF;ACjDA;;;;;;;;;;;;;;;;;;SAuBsB,kB,CACpB,Y,EAAkC;;;;;;AAE1B,mBAAS,GAAK,YAAY,CAAjB,SAAT;AAEM;AAAA;AAAA,YAAM,MAAM,CAAC,SAAD,EAAY,oBAAQ;AAC5C,gBAAI,QAAQ,IAAI,QAAQ,CAAC,kBAAT,KAA2B;AAAA;AAA3C,cAA2E;;AAEzE,qBAAO,SAAP;AACD;;AACD,mBAAO,QAAP;AACD,WANyB,CAAZ;;;AAAR,eAAK,GAAG,SAAR;eAQF,K,EAAA;AAAA;AAAA;gBACE,KAAK,CAAC,kBAAN,KAAwB;AAAA;aAAxB;AAAA;AAAA,e;;AAEF,gBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,WAAN;;;gBACS,KAAK,CAAC,kBAAN,KAAwB;AAAA;aAAxB;AAAA;AAAA;eACL,CAAC,SAAS,CAAC,M,EAAX;AAAA;AAAA;AACF,gBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,WAAN;;;AAEA;AAAA;AAAA,YAAM,yBAAyB,CAAC,SAAD,EAAY,KAAZ,CAA/B;;;AAAA;;AACA;AAAA;AAAA,YAAM,MAAM,CAAC,SAAD,CAAZ;;;AAAA;;;;;;;;;;;;AC7CR;;;;;;;;;;;;;;;;;AAuBA;;;;;;SAIgB,W,CACd,E,EACA,Q,EAA4B;MAD1B,SAAS,e;AAGX,aAAW,CAAC,SAAD,EAAY,QAAZ,CAAX;AAEA,SAAO;AACL,kBAAc,CAAC,SAAD,EAAY,QAAZ,CAAd;AACD,GAFD;AAGF;ACpCA;;;;;;;;;;;;;;;;;;SAsBgB,gB,CAAiB,G,EAAgB;;;AAC/C,MAAI,CAAC,GAAD,IAAQ,CAAC,GAAG,CAAC,OAAjB,EAA0B;AACxB,UAAM,oBAAoB,CAAC,mBAAD,CAA1B;AACD;;AAED,MAAI,CAAC,GAAG,CAAC,IAAT,EAAe;AACb,UAAM,oBAAoB,CAAC,UAAD,CAA1B;AACD,GAP8C,C;;;AAU/C,MAAM,UAAU,GAAiC,CAC/C,WAD+C,EAE/C,QAF+C,EAG/C,OAH+C,CAAjD;;;AAMA,SAAsB,uFAAU,oCAAhC,EAAgC,oBAAhC,EAAgC,oCAAhC,EAAkC;AAA7B,UAAM,OAAO,uBAAb;;AACH,UAAI,CAAC,GAAG,CAAC,OAAJ,CAAY,OAAZ,CAAL,EAA2B;AACzB,cAAM,oBAAoB,CAAC,OAAD,CAA1B;AACD;AACF;;;;;;;;;;;;;AAED,SAAO;AACL,WAAO,EAAE,GAAG,CAAC,IADR;AAEL,aAAS,EAAE,GAAG,CAAC,OAAJ,CAAY,SAFlB;AAGL,UAAM,EAAE,GAAG,CAAC,OAAJ,CAAY,MAHf;AAIL,SAAK,EAAE,GAAG,CAAC,OAAJ,CAAY;AAJd,GAAP;AAMD;;AAED,SAAS,oBAAT,CAA8B,SAA9B,EAA+C;AAC7C,SAAO,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,IAA0D;AAC/D,aAAS;AADsD,GAA1D,CAAP;AAGF;ACxDA;;;;;;;;;;;;;;;;;;SAqCgB,qB,CAAsB,Q,EAA4B;AAChE,MAAM,iBAAiB,GAAG,eAA1B;AAEA,UAAQ,CAAC,QAAT,CAAkB,iBAAlB,CACE,IAAI,6DAAJ,CACE,iBADF,EAEE,qBAAS;AACP,QAAM,GAAG,GAAG,SAAS,CAAC,WAAV,CAAsB,KAAtB,EAA6B,YAA7B,EAAZ,CADO,C;;AAIP,QAAM,SAAS,GAAG,gBAAgB,CAAC,GAAD,CAAlC;AACA,QAAM,sBAAsB,GAAG,SAAS,CAAC,WAAV,CAAsB,iBAAtB,CAA/B;AACA,QAAM,YAAY,GAAyB;AACzC,eAAS,WADgC;AAEzC,4BAAsB;AAFmB,KAA3C;AAKA,QAAM,aAAa,GAA4C;AAC7D,SAAG,KAD0D;AAE7D,WAAK,EAAE;AAAM,qBAAK,CAAC,YAAD,CAAL;AAAmB,OAF6B;AAG7D,cAAQ,EAAE,kBAAC,YAAD,EAAuB;AAC/B,wBAAQ,CAAC,YAAD,EAAe,YAAf,CAAR;AAAoC,OAJuB;AAK7D,YAAM,EAAE;AAAM,iCAAkB,CAAC,YAAD,CAAlB;AAAgC,OALe;AAM7D,gBAAU,EAAE,oBAAC,QAAD,EAA6B;AACvC,0BAAU,CAAC,YAAD,EAAe,QAAf,CAAV;AAAkC;AAPyB,KAA/D;AASA,WAAO,aAAP;AACD,GAvBH,EAuBG;AAAA;AAvBH,GADF;AA6BA,UAAQ,CAAC,eAAT,CAAyB,IAAzB,EAA+B,OAA/B;AACD;;AAED,qBAAqB,CAAC,qDAAD,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;AlBxEA;;;;;;;;;;;;;;;;;;;AAuCO,IAAM,SAAS,aACpB;AAAA;AAAA,IACE,iDAFkB,EAGpB;AAAA;AAAA,IACE,+CAJkB,EAKpB;AAAA;AAAA,IACE,uDANkB,EAOpB;AAAA;AAAA,IACE,oEARkB,EASpB;AAAA;AAAA,IACE,kEAVkB,EAWpB;AAAA;AAAA,IACE,0EAZkB,EAapB;AAAA;AAAA,IACE,8EAdkB,EAepB;AAAA;AAAA,IACE,oEAhBkB,EAiBpB;AAAA;AAAA,IACE,0DAlBkB,EAmBpB;AAAA;AAAA,IACE,gDACA,6BArBkB,EAsBpB;AAAA;AAAA,IACE,mEAvBkB,EAwBpB;AAAA;AAAA,IACE,uDAzBkB,EA0BpB;AAAA;AAAA,IACE,uEACA,yEA5BkB,EA6BpB;AAAA;AAAA,IACE,sEA9BkB,EA+BpB;AAAA;AAAA,IACE,gEAhCkB,EAiCpB;AAAA;AAAA,IAA+B,wCAjCX,EAkCpB;AAAA;AAAA,IACE,wEACA,oEApCkB,EAqCrB,EArCqB,CAAf;AAiDA,IAAM,aAAa,GAAG,IAAI,2DAAJ,CAC3B,WAD2B,EAE3B,WAF2B,EAG3B,SAH2B,CAAtB;ADxFP;;;;;;;;;;;;;;;;;AAiBO,IAAM,eAAe,GAAG,2BAAxB;AACA,IAAM,gBAAgB,GAAG,sCAAzB;AAEA,IAAM,iBAAiB,GAC5B,yFADK;AAGA,IAAM,QAAQ,GAAG,4CAAjB,C,CAEP;;AACO,IAAM,OAAO,GAAG,SAAhB;AACA,IAAM,GAAG,GAAG,qBAAZ,C,CAEP;;AACO,IAAM,kCAAkC,GAAG,cAA3C;AACA,IAAM,mBAAmB,GAAG,iBAA5B;AACA,IAAM,qBAAqB,GAAG,eAA9B;AACA,IAAM,qBAAqB,GAAG,gBAA9B,C,CAEP;AACA;AACA;AACA;;AACO,IAAM,yCAAyC,GAAG,IAAlD,C,CAEP;;AACO,IAAM,qCAAqC,GAAG,IAA9C;AoB1CP;;;;;;;;;;;;;;;AAsDA,IAAY,WAAZ;;AAAA,WAAY,WAAZ,EAAuB;AACrB;AACA;AACD,CAHD,EAAY,WAAW,KAAX,WAAW,MAAvB;ACtDA;;;;;;;;;;;;;;;;;;SAiBgB,a,CAAc,K,EAA+B;AAC3D,MAAM,UAAU,GAAG,IAAI,UAAJ,CAAe,KAAf,CAAnB;AACA,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAP,CAAmB,KAAnB,SAAM,qHAAiB,UAAjB,EAAN,CAAD,CAAzB;AACA,SAAO,YAAY,CAAC,OAAb,CAAqB,IAArB,EAA2B,EAA3B,EAA+B,OAA/B,CAAuC,KAAvC,EAA8C,GAA9C,EAAmD,OAAnD,CAA2D,KAA3D,EAAkE,GAAlE,CAAP;AACD;;SAEe,a,CAAc,Y,EAAoB;AAChD,MAAM,OAAO,GAAG,IAAI,MAAJ,CAAW,CAAC,IAAK,YAAY,CAAC,MAAb,GAAsB,CAA5B,IAAkC,CAA7C,CAAhB;AACA,MAAM,MAAM,GAAG,CAAC,YAAY,GAAG,OAAhB,EACZ,OADY,CACJ,KADI,EACG,GADH,EAEZ,OAFY,CAEJ,IAFI,EAEE,GAFF,CAAf;AAIA,MAAM,OAAO,GAAG,IAAI,CAAC,MAAD,CAApB;AACA,MAAM,WAAW,GAAG,IAAI,UAAJ,CAAe,OAAO,CAAC,MAAvB,CAApB;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,EAAE,CAAtC,EAAyC;AACvC,eAAW,CAAC,CAAD,CAAX,GAAiB,OAAO,CAAC,UAAR,CAAmB,CAAnB,CAAjB;AACD;;AACD,SAAO,WAAP;AACF;ACpCA;;;;;;;;;;;;;;;;;;AA6DA,IAAM,WAAW,GAAG,sBAApB;AACA;;;;;AAIA,IAAM,cAAc,GAAG,CAAvB;AACA,IAAM,qBAAqB,GAAG,wBAA9B;;SAEsB,kB,CACpB,Q,EAAgB;;;;;;;;;gBAEZ,eAAe,S,GAAf;AAAA;AAAA;AAGgB;AAAA;AAAA,YAAO,SAEvB,CAAC,SAFsB,EAAP;;;AAAZ,mBAAS,GAAG,SAAZ;AAGA,iBAAO,GAAG,SAAS,CAAC,GAAV,CAAc,cAAE;AAAI,qBAAE,CAAC,IAAH;AAAO,WAA3B,CAAV;;AAEN,cAAI,CAAC,OAAO,CAAC,QAAR,CAAiB,WAAjB,CAAL,EAAoC;;AAElC;AAAA;AAAA,cAAO,IAAP;AACD;;;;;AAGC,sBAAY,GAAwB,IAApC;AAEO;AAAA;AAAA,YAAM,kDAAM,CAAC,WAAD,EAAc,cAAd,EAA8B,UAAM,EAAN,EAAQ;AAAA;;;;;;;;AAC3D,wBAAI,EAAE,CAAC,UAAH,GAAgB,CAApB,EAAuB;;AAErB;AAAA;AAAA;AACD;;AAED,wBAAI,CAAC,EAAE,CAAC,gBAAH,CAAoB,QAApB,CAA6B,qBAA7B,CAAL,EAA0D;;AAExD;AAAA;AAAA;AACD;;AAEK,+BAAW,GAAG,EAAE,CAAC,WAAH,CAAe,WAAf,CAA2B,qBAA3B,CAAd;AACQ;AAAA;AAAA,sBAAM,WAAW,CAAC,KAAZ,CAAkB,aAAlB,EAAiC,GAAjC,CAAqC,QAArC,CAAN;;;AAAR,yBAAK,GAAG,SAAR;AACN;AAAA;AAAA,sBAAM,WAAW,CAAC,KAAZ,EAAN;;;AAAA;;AAEA,wBAAI,CAAC,KAAL,EAAY;;AAEV;AAAA;AAAA;AACD;;AAED,wBAAI,EAAE,CAAC,UAAH,KAAkB,CAAtB,EAAyB;AACjB,gCAAU,GAAG,KAAb;;AAEN,0BAAI,CAAC,UAAU,CAAC,IAAZ,IAAoB,CAAC,UAAU,CAAC,MAAhC,IAA0C,CAAC,UAAU,CAAC,QAA1D,EAAoE;AAClE;AAAA;AAAA;AACD;;AAED,kCAAY,GAAG;AACb,6BAAK,EAAE,UAAU,CAAC,QADL;AAEb,kCAAU,EAAE,gBAAU,CAAC,UAAX,MAAqB,IAArB,IAAqB,aAArB,GAAqB,EAArB,GAAyB,IAAI,CAAC,GAAL,EAFxB;AAGb,2CAAmB,EAAE;AACnB,8BAAI,EAAE,UAAU,CAAC,IADE;AAEnB,gCAAM,EAAE,UAAU,CAAC,MAFA;AAGnB,kCAAQ,EAAE,UAAU,CAAC,QAHF;AAInB,iCAAO,EAAE,UAAU,CAAC,OAJD;AAKnB,kCAAQ,EACN,OAAO,UAAU,CAAC,QAAlB,KAA+B,QAA/B,GACI,UAAU,CAAC,QADf,GAEI,aAAa,CAAC,UAAU,CAAC,QAAZ;AARA;AAHR,uBAAf;AAcD,qBArBD,MAqBO,IAAI,EAAE,CAAC,UAAH,KAAkB,CAAtB,EAAyB;AACxB,gCAAU,GAAG,KAAb;AAEN,kCAAY,GAAG;AACb,6BAAK,EAAE,UAAU,CAAC,QADL;AAEb,kCAAU,EAAE,UAAU,CAAC,UAFV;AAGb,2CAAmB,EAAE;AACnB,8BAAI,EAAE,aAAa,CAAC,UAAU,CAAC,IAAZ,CADA;AAEnB,gCAAM,EAAE,aAAa,CAAC,UAAU,CAAC,MAAZ,CAFF;AAGnB,kCAAQ,EAAE,UAAU,CAAC,QAHF;AAInB,iCAAO,EAAE,UAAU,CAAC,OAJD;AAKnB,kCAAQ,EAAE,aAAa,CAAC,UAAU,CAAC,QAAZ;AALJ;AAHR,uBAAf;AAWD,qBAdM,MAcA,IAAI,EAAE,CAAC,UAAH,KAAkB,CAAtB,EAAyB;AACxB,gCAAU,GAAG,KAAb;AAEN,kCAAY,GAAG;AACb,6BAAK,EAAE,UAAU,CAAC,QADL;AAEb,kCAAU,EAAE,UAAU,CAAC,UAFV;AAGb,2CAAmB,EAAE;AACnB,8BAAI,EAAE,aAAa,CAAC,UAAU,CAAC,IAAZ,CADA;AAEnB,gCAAM,EAAE,aAAa,CAAC,UAAU,CAAC,MAAZ,CAFF;AAGnB,kCAAQ,EAAE,UAAU,CAAC,QAHF;AAInB,iCAAO,EAAE,UAAU,CAAC,OAJD;AAKnB,kCAAQ,EAAE,aAAa,CAAC,UAAU,CAAC,QAAZ;AALJ;AAHR,uBAAf;AAWD;;;;;;;aArE0D;AAsE5D,WAtEsB,CAAZ;;;AAAL,YAAE,GAAG,SAAL;AAuEN,YAAE,CAAC,KAAH,G;;AAGA;AAAA;AAAA,YAAM,oDAAQ,CAAC,WAAD,CAAd;;;;AAAA;;AACA;AAAA;AAAA,YAAM,oDAAQ,CAAC,sBAAD,CAAd;;;AAAA;;AACA;AAAA;AAAA,YAAM,oDAAQ,CAAC,WAAD,CAAd;;;AAAA;;AAEA;AAAA;AAAA,YAAO,iBAAiB,CAAC,YAAD,CAAjB,GAAkC,YAAlC,GAAiD,IAAxD;;;;AACD;;AAED,SAAS,iBAAT,CACE,YADF,EACmC;AAEjC,MAAI,CAAC,YAAD,IAAiB,CAAC,YAAY,CAAC,mBAAnC,EAAwD;AACtD,WAAO,KAAP;AACD;;AACO,yBAAmB,GAAK,YAAY,CAAjB,mBAAnB;AACR,SACE,OAAO,YAAY,CAAC,UAApB,KAAmC,QAAnC,IACA,YAAY,CAAC,UAAb,GAA0B,CAD1B,IAEA,OAAO,YAAY,CAAC,KAApB,KAA8B,QAF9B,IAGA,YAAY,CAAC,KAAb,CAAmB,MAAnB,GAA4B,CAH5B,IAIA,OAAO,mBAAmB,CAAC,IAA3B,KAAoC,QAJpC,IAKA,mBAAmB,CAAC,IAApB,CAAyB,MAAzB,GAAkC,CALlC,IAMA,OAAO,mBAAmB,CAAC,MAA3B,KAAsC,QANtC,IAOA,mBAAmB,CAAC,MAApB,CAA2B,MAA3B,GAAoC,CAPpC,IAQA,OAAO,mBAAmB,CAAC,QAA3B,KAAwC,QARxC,IASA,mBAAmB,CAAC,QAApB,CAA6B,MAA7B,GAAsC,CATtC,IAUA,OAAO,mBAAmB,CAAC,OAA3B,KAAuC,QAVvC,IAWA,mBAAmB,CAAC,OAApB,CAA4B,MAA5B,GAAqC,CAXrC,IAYA,OAAO,mBAAmB,CAAC,QAA3B,KAAwC,QAZxC,IAaA,mBAAmB,CAAC,QAApB,CAA6B,MAA7B,GAAsC,CAdxC;AAgBF;AbhMA;;;;;;;;;;;;;;;;AAuBA;;;AACO,IAAM,aAAa,GAAG,6BAAtB;AACP,IAAM,gBAAgB,GAAG,CAAzB;AACA,IAAM,iBAAiB,GAAG,0BAA1B;AAEA,IAAI,SAAS,GAAuB,IAApC;;AACA,SAAS,YAAT,GAAqB;AACnB,MAAI,CAAC,SAAL,EAAgB;AACd,aAAS,GAAG,kDAAM,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,qBAAS;;;;;AAK3D,cAAQ,SAAS,CAAC,UAAlB;AACE,aAAK,CAAL;AACE,mBAAS,CAAC,iBAAV,CAA4B,iBAA5B;AAFJ;AAID,KATiB,CAAlB;AAUD;;AACD,SAAO,SAAP;AACD;AAED;;;SACsB,K,CACpB,oB,EAAkD;;;;;;AAE5C,aAAG,GAAG,MAAM,CAAC,oBAAD,CAAZ;AACK;AAAA;AAAA,YAAM,YAAY,EAAlB;;;AAAL,YAAE,GAAG,SAAL;AACe;AAAA;AAAA,YAAM,EAAE,CAC1B,WADwB,CACZ,iBADY,EAExB,WAFwB,CAEZ,iBAFY,EAGxB,GAHwB,CAGpB,GAHoB,CAAN;;;AAAf,sBAAY,GAAG,SAAf;eAKF,Y,EAAA;AAAA;AAAA;AACF;AAAA;AAAA,YAAO,YAAP;;;AAGwB;AAAA;AAAA,YAAM,kBAAkB,CAC9C,oBAAoB,CAAC,SAArB,CAA+B,QADe,CAAxB;;;AAAlB,yBAAe,GAAG,SAAlB;eAGF,e,EAAA;AAAA;AAAA;AACF;AAAA;AAAA,YAAM,KAAK,CAAC,oBAAD,EAAuB,eAAvB,CAAX;;;AAAA;;AACA;AAAA;AAAA,YAAO,eAAP;;;;;;;;;AAGL;AAED;;;SACsB,K,CACpB,oB,EACA,Y,EAA0B;;;;;;AAEpB,aAAG,GAAG,MAAM,CAAC,oBAAD,CAAZ;AACK;AAAA;AAAA,YAAM,YAAY,EAAlB;;;AAAL,YAAE,GAAG,SAAL;AACA,YAAE,GAAG,EAAE,CAAC,WAAH,CAAe,iBAAf,EAAkC,WAAlC,CAAL;AACN;AAAA;AAAA,YAAM,EAAE,CAAC,WAAH,CAAe,iBAAf,EAAkC,GAAlC,CAAsC,YAAtC,EAAoD,GAApD,CAAN;;;AAAA;;AACA;AAAA;AAAA,YAAM,EAAE,CAAC,QAAT;;;AAAA;;AACA;AAAA;AAAA,YAAO,YAAP;;;;AACD;AAED;;;SACsB,Q,CACpB,oB,EAAkD;;;;;;AAE5C,aAAG,GAAG,MAAM,CAAC,oBAAD,CAAZ;AACK;AAAA;AAAA,YAAM,YAAY,EAAlB;;;AAAL,YAAE,GAAG,SAAL;AACA,YAAE,GAAG,EAAE,CAAC,WAAH,CAAe,iBAAf,EAAkC,WAAlC,CAAL;AACN;AAAA;AAAA,YAAM,EAAE,CAAC,WAAH,CAAe,iBAAf,EAAkC,MAAlC,CAAyC,GAAzC,CAAN;;;AAAA;;AACA;AAAA;AAAA,YAAM,EAAE,CAAC,QAAT;;;AAAA;;;;;;;;AACD;;AAWD,SAAS,MAAT,CAAgB,EAAhB,EAA2D;MAAzC,SAAS,e;AACzB,SAAO,SAAS,CAAC,KAAjB;AACF;AczGA;;;;;;;;;;;;;;;;;;SAsCsB,e,CACpB,oB,EACA,mB,EAAwC;;;;;;AAExB;AAAA;AAAA,YAAM,UAAU,CAAC,oBAAD,CAAhB;;;AAAV,iBAAO,GAAG,SAAV;AACA,cAAI,GAAG,OAAO,CAAC,mBAAD,CAAd;AAEA,0BAAgB,GAAG;AACvB,kBAAM,EAAE,MADe;AAEvB,mBAAO,SAFgB;AAGvB,gBAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf;AAHiB,WAAnB;;;;;;AAQa;AAAA;AAAA,YAAM,KAAK,CAC1B,WAAW,CAAC,oBAAoB,CAAC,SAAtB,CADe,EAE1B,gBAF0B,CAAX;;;AAAX,kBAAQ,GAAG,SAAX;AAIS;AAAA;AAAA,YAAM,QAAQ,CAAC,IAAT,EAAN;;;AAAf,sBAAY,GAAG,SAAf;;;;;;;AAEA,gBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,YAAuD;AAC3D,qBAAS,EAAE;AADgD,WAAvD,CAAN;;;AAKF,cAAI,YAAY,CAAC,KAAjB,EAAwB;AAChB,mBAAO,GAAG,YAAY,CAAC,KAAb,CAAmB,OAA7B;AACN,kBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,cAAuD;AAC3D,uBAAS,EAAE;AADgD,aAAvD,CAAN;AAGD;;AAED,cAAI,CAAC,YAAY,CAAC,KAAlB,EAAyB;AACvB,kBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,aAAN;AACD;;AAED;AAAA;AAAA,YAAO,YAAY,CAAC,KAApB;;;;AACD;;SAEqB,kB,CACpB,oB,EACA,Y,EAA0B;;;;;;AAEV;AAAA;AAAA,YAAM,UAAU,CAAC,oBAAD,CAAhB;;;AAAV,iBAAO,GAAG,SAAV;AACA,cAAI,GAAG,OAAO,CAAC,YAAY,CAAC,mBAAd,CAAd;AAEA,uBAAa,GAAG;AACpB,kBAAM,EAAE,OADY;AAEpB,mBAAO,SAFa;AAGpB,gBAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf;AAHc,WAAhB;;;;;;AAQa;AAAA;AAAA,YAAM,KAAK,CACvB,WAAW,CAAC,oBAAoB,CAAC,SAAtB,CAAX,GAA2C,GAA3C,GAA+C,YAAY,CAAC,KADrC,EAE1B,aAF0B,CAAX;;;AAAX,kBAAQ,GAAG,SAAX;AAIS;AAAA;AAAA,YAAM,QAAQ,CAAC,IAAT,EAAN;;;AAAf,sBAAY,GAAG,SAAf;;;;;;;AAEA,gBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,YAAoD;AACxD,qBAAS,EAAE;AAD6C,WAApD,CAAN;;;AAKF,cAAI,YAAY,CAAC,KAAjB,EAAwB;AAChB,mBAAO,GAAG,YAAY,CAAC,KAAb,CAAmB,OAA7B;AACN,kBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,cAAoD;AACxD,uBAAS,EAAE;AAD6C,aAApD,CAAN;AAGD;;AAED,cAAI,CAAC,YAAY,CAAC,KAAlB,EAAyB;AACvB,kBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,aAAN;AACD;;AAED;AAAA;AAAA,YAAO,YAAY,CAAC,KAApB;;;;AACD;;SAEqB,kB,CACpB,oB,EACA,K,EAAa;;;;;;AAEG;AAAA;AAAA,YAAM,UAAU,CAAC,oBAAD,CAAhB;;;AAAV,iBAAO,GAAG,SAAV;AAEA,4BAAkB,GAAG;AACzB,kBAAM,EAAE,QADiB;AAEzB,mBAAO;AAFkB,WAArB;;;;;;AAMa;AAAA;AAAA,YAAM,KAAK,CACvB,WAAW,CAAC,oBAAoB,CAAC,SAAtB,CAAX,GAA2C,GAA3C,GAA+C,KADxB,EAE1B,kBAF0B,CAAX;;;AAAX,kBAAQ,GAAG,SAAX;AAI4B;AAAA;AAAA,YAAM,QAAQ,CAAC,IAAT,EAAN;;;AAA5B,sBAAY,GAAgB,SAA5B;;AACN,cAAI,YAAY,CAAC,KAAjB,EAAwB;AAChB,mBAAO,GAAG,YAAY,CAAC,KAAb,CAAmB,OAA7B;AACN,kBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,cAAyD;AAC7D,uBAAS,EAAE;AADkD,aAAzD,CAAN;AAGD;;;;;;;;AAED,gBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,YAAyD;AAC7D,qBAAS,EAAE;AADkD,WAAzD,CAAN;;;;;;;;;AAIH;;AAED,SAAS,WAAT,CAAqB,EAArB,EAA6C;MAAtB,SAAS,e;AAC9B,SAAU,QAAQ,eAAR,GAAqB,SAArB,GAA+B,gBAAzC;AACD;;AAED,SAAe,UAAf,CAA0B,EAA1B,EAG+B;MAF7B,SAAS,e;MACT,aAAa,mB;;;;;;AAEK;AAAA;AAAA,YAAM,aAAa,CAAC,QAAd,EAAN;;;AAAZ,mBAAS,GAAG,SAAZ;AAEN;AAAA;AAAA,YAAO,IAAI,OAAJ,CAAY;AACjB,4BAAgB,kBADC;AAEjB,kBAAM,EAAE,kBAFS;AAGjB,8BAAkB,SAAS,CAAC,MAHX;AAIjB,kDAAsC,SAAO;AAJ5B,WAAZ,CAAP;;;;AAMD;;AAED,SAAS,OAAT,CAAiB,EAAjB,EAKsB;MAJpB,MAAM,Y;MACN,IAAI,U;MACJ,QAAQ,c;MACR,QAAQ,c;AAER,MAAM,IAAI,GAAmB;AAC3B,OAAG,EAAE;AACH,cAAQ,UADL;AAEH,UAAI,MAFD;AAGH,YAAM;AAHH;AADsB,GAA7B;;AAQA,MAAI,QAAQ,KAAK,iBAAjB,EAAoC;AAClC,QAAI,CAAC,GAAL,CAAS,iBAAT,GAA6B,QAA7B;AACD;;AAED,SAAO,IAAP;AACF;ACzLA;;;;;;;;;;;;;;;;;AA4BA;;;AACA,IAAM,mBAAmB,GAAG,IAAI,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IAA/C,C,CAAoD;;SAE9B,Q,CACpB,oB,EACA,c,EACA,Q,EAAgB;;;;;;AAEhB,cAAI,YAAY,CAAC,UAAb,KAA4B,SAAhC,EAA2C;AACzC,kBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,aAAN;AACD;;AAIwB;AAAA;AAAA,YAAM,mBAAmB,CAAC,cAAD,EAAiB,QAAjB,CAAzB;;;AAAnB,0BAAgB,GAAG,SAAnB;AACe;AAAA;AAAA,YAAM,KAAK,CAAC,oBAAD,CAAX;;;AAAf,sBAAY,GAAG,SAAf;AAEA,6BAAmB,GAAwB;AAC/C,oBAAQ,UADuC;AAE/C,mBAAO,EAAE,cAAc,CAAC,KAFuB;AAG/C,oBAAQ,EAAE,gBAAgB,CAAC,QAHoB;AAI/C,gBAAI,EAAE,aAAa,CAAC,gBAAgB,CAAC,MAAjB,CAAwB,MAAxB,CAAD,CAJ4B;AAK/C,kBAAM,EAAE,aAAa,CAAC,gBAAgB,CAAC,MAAjB,CAAwB,QAAxB,CAAD;AAL0B,WAA3C;eAQF,CAAC,Y,EAAD;AAAA;AAAA,e;;AAEF;AAAA;AAAA,YAAO,WAAW,CAAC,oBAAD,EAAuB,mBAAvB,CAAlB;;;eAEA,CAAC,YAAY,CAAC,YAAY,CAAC,mBAAd,EAAoC,mBAApC,C,EAAb;AAAA;AAAA;;;;;;AAIE;AAAA;AAAA,YAAM,kBAAkB,CAAC,oBAAD,EAAuB,YAAY,CAAC,KAApC,CAAxB;;;AAAA;;;;;;;;;AAGA,iBAAO,CAAC,IAAR,CAAa,GAAb;;;;;;AAGF;AAAA;AAAA,YAAO,WAAW,CAAC,oBAAD,EAAuB,mBAAvB,CAAlB;;;AACK,cAAI,IAAI,CAAC,GAAL,MAAc,YAAY,CAAC,UAAb,GAA0B,mBAA5C,EAAiE;;AAEtE;AAAA;AAAA,cAAO,WAAW,CAChB;AACE,mBAAK,EAAE,YAAY,CAAC,KADtB;AAEE,wBAAU,EAAE,IAAI,CAAC,GAAL,EAFd;AAGE,iCAAmB;AAHrB,aADgB,EAMhB,oBANgB,EAOhB,cAPgB,CAAlB;AASD,WAXM,MAWA;;AAEL;AAAA;AAAA,cAAO,YAAY,CAAC,KAApB;AACD;;;;;;;;;AACF;AAED;;;;;;SAIsB,W,CACpB,oB,EACA,c,EAAyC;;;;;;AAEpB;AAAA;AAAA,YAAM,KAAK,CAAC,oBAAD,CAAX;;;AAAf,sBAAY,GAAG,SAAf;eACF,Y,EAAA;AAAA;AAAA;AACF;AAAA;AAAA,YAAM,kBAAkB,CAAC,oBAAD,EAAuB,YAAY,CAAC,KAApC,CAAxB;;;AAAA;;AACA;AAAA;AAAA,YAAM,QAAQ,CAAC,oBAAD,CAAd;;;AAAA;;;;;AAIuB;AAAA;AAAA,YAAM,cAAc,CAAC,WAAf,CAA2B,eAA3B,EAAN;;;AAAnB,0BAAgB,GAAG,SAAnB;;AACN,cAAI,gBAAJ,EAAsB;AACpB;AAAA;AAAA,cAAO,gBAAgB,CAAC,WAAjB,EAAP;AACD,W;;;AAGD;AAAA;AAAA,YAAO,IAAP;;;;AACD;;AAED,SAAe,WAAf,CACE,YADF,EAEE,oBAFF,EAGE,cAHF,EAG2C;;;;;;;;AAGlB;AAAA;AAAA,YAAM,kBAAkB,CAC3C,oBAD2C,EAE3C,YAF2C,CAAxB;;;AAAf,sBAAY,GAAG,SAAf;AAKA,6BAAmB,qHACpB,YADoB,GACR;AACf,iBAAK,EAAE,YADQ;AAEf,sBAAU,EAAE,IAAI,CAAC,GAAL;AAFG,WADQ,CAAnB;AAMN;AAAA;AAAA,YAAM,KAAK,CAAC,oBAAD,EAAuB,mBAAvB,CAAX;;;AAAA;;AACA;AAAA;AAAA,YAAO,YAAP;;;;AAEA;AAAA;AAAA,YAAM,WAAW,CAAC,oBAAD,EAAuB,cAAvB,CAAjB;;;AAAA;;AACA,gBAAM,GAAN;;;;;;;;;AAEH;;AAED,SAAe,WAAf,CACE,oBADF,EAEE,mBAFF,EAE0C;;;;;;AAE1B;AAAA;AAAA,YAAM,eAAe,CACjC,oBADiC,EAEjC,mBAFiC,CAArB;;;AAAR,eAAK,GAAG,SAAR;AAIA,sBAAY,GAAiB;AACjC,iBAAK,OAD4B;AAEjC,sBAAU,EAAE,IAAI,CAAC,GAAL,EAFqB;AAGjC,+BAAmB;AAHc,WAA7B;AAKN;AAAA;AAAA,YAAM,KAAK,CAAC,oBAAD,EAAuB,YAAvB,CAAX;;;AAAA;;AACA;AAAA;AAAA,YAAO,YAAY,CAAC,KAApB;;;;AACD;AAED;;;;;AAGA,SAAe,mBAAf,CACE,cADF,EAEE,QAFF,EAEkB;;;;;;AAEK;AAAA;AAAA,YAAM,cAAc,CAAC,WAAf,CAA2B,eAA3B,EAAN;;;AAAf,sBAAY,GAAG,SAAf;;AACN,cAAI,YAAJ,EAAkB;AAChB;AAAA;AAAA,cAAO,YAAP;AACD;;AACD;AAAA;AAAA,YAAO,cAAc,CAAC,WAAf,CAA2B,SAA3B,CAAqC;AAC1C,2BAAe,EAAE,IADyB;;;AAI1C,gCAAoB,EAAE,aAAa,CAAC,QAAD;AAJO,WAArC,CAAP;;;;AAMD;AAED;;;;;AAGA,SAAS,YAAT,CACE,SADF,EAEE,cAFF,EAEqC;AAEnC,MAAM,eAAe,GAAG,cAAc,CAAC,QAAf,KAA4B,SAAS,CAAC,QAA9D;AACA,MAAM,eAAe,GAAG,cAAc,CAAC,QAAf,KAA4B,SAAS,CAAC,QAA9D;AACA,MAAM,WAAW,GAAG,cAAc,CAAC,IAAf,KAAwB,SAAS,CAAC,IAAtD;AACA,MAAM,aAAa,GAAG,cAAc,CAAC,MAAf,KAA0B,SAAS,CAAC,MAA1D;AAEA,SAAO,eAAe,IAAI,eAAnB,IAAsC,WAAtC,IAAqD,aAA5D;AACF;ACvLA;;;;;;;;;;;;;;;;;;SAoBgB,kB,CACd,e,EAAuC;AAEvC,MAAM,OAAO,GAAmB;AAC9B,QAAI,EAAE,eAAe,CAAC,IADQ;;AAG9B,eAAW,EAAE,eAAe,CAAC,YAHC;;AAK9B,aAAS,EAAE,eAAe,CAAC;AALG,GAAhC;AAQA,8BAA4B,CAAC,OAAD,EAAU,eAAV,CAA5B;AACA,sBAAoB,CAAC,OAAD,EAAU,eAAV,CAApB;AACA,qBAAmB,CAAC,OAAD,EAAU,eAAV,CAAnB;AAEA,SAAO,OAAP;AACD;;AAED,SAAS,4BAAT,CACE,OADF,EAEE,sBAFF,EAEgD;AAE9C,MAAI,CAAC,sBAAsB,CAAC,YAA5B,EAA0C;AACxC;AACD;;AAED,SAAO,CAAC,YAAR,GAAuB,EAAvB;AAEA,MAAM,KAAK,GAAG,sBAAsB,CAAC,YAAvB,CAAqC,KAAnD;;AACA,MAAI,CAAC,CAAC,KAAN,EAAa;AACX,WAAO,CAAC,YAAR,CAAsB,KAAtB,GAA8B,KAA9B;AACD;;AAED,MAAM,IAAI,GAAG,sBAAsB,CAAC,YAAvB,CAAqC,IAAlD;;AACA,MAAI,CAAC,CAAC,IAAN,EAAY;AACV,WAAO,CAAC,YAAR,CAAsB,IAAtB,GAA6B,IAA7B;AACD;;AAED,MAAM,KAAK,GAAG,sBAAsB,CAAC,YAAvB,CAAqC,KAAnD;;AACA,MAAI,CAAC,CAAC,KAAN,EAAa;AACX,WAAO,CAAC,YAAR,CAAsB,KAAtB,GAA8B,KAA9B;AACD;AACF;;AAED,SAAS,oBAAT,CACE,OADF,EAEE,sBAFF,EAEgD;AAE9C,MAAI,CAAC,sBAAsB,CAAC,IAA5B,EAAkC;AAChC;AACD;;AAED,SAAO,CAAC,IAAR,GAAe,sBAAsB,CAAC,IAAtC;AACD;;AAED,SAAS,mBAAT,CACE,OADF,EAEE,sBAFF,EAEgD;AAE9C,MAAI,CAAC,sBAAsB,CAAC,UAA5B,EAAwC;AACtC;AACD;;AAED,SAAO,CAAC,UAAR,GAAqB,EAArB;AAEA,MAAM,IAAI,GAAG,sBAAsB,CAAC,UAAvB,CAAmC,IAAhD;;AACA,MAAI,CAAC,CAAC,IAAN,EAAY;AACV,WAAO,CAAC,UAAR,CAAoB,IAApB,GAA2B,IAA3B;AACD,GAX6C,C;;;AAc9C,MAAM,cAAc,GAAG,sBAAsB,CAAC,UAAvB,CAAmC,eAA1D;;AACA,MAAI,CAAC,CAAC,cAAN,EAAsB;AACpB,WAAO,CAAC,UAAR,CAAoB,cAApB,GAAqC,cAArC;AACD;AACH;AC/FA;;;;;;;;;;;;;;;;;;SAoBgB,gB,CAAiB,I,EAAa;;AAE5C,SAAO,OAAO,IAAP,KAAgB,QAAhB,IAA4B,CAAC,CAAC,IAA9B,IAAsC,mBAAmB,IAAI,IAApE;AACF;ACvBA;;;;;;;;;;;;;;;;;AAiBA;;;SACgB,K,CAAM,E,EAAU;AAC9B,SAAO,IAAI,OAAJ,CAAkB,mBAAO;AAC9B,cAAU,CAAC,OAAD,EAAU,EAAV,CAAV;AACD,GAFM,CAAP;AAGF;ACtBA;;;;;;;;;;;;;;;;;;AA+CA;AAAA;AAAA;AAaE,wBACmB,oBADnB,EACqE;AADrE;;AACmB,qDAAkD,C;;;;;AAT7D,qCAA4C,IAA5C;AACA,oBAA0B,IAA1B;AACA,4BAIuB,IAJvB;AASN,QAAI,CAAC,gBAAL,CAAsB,MAAtB,EAA8B,aAAC;AAC7B,OAAC,CAAC,SAAF,CAAY,KAAI,CAAC,MAAL,CAAY,CAAZ,CAAZ;AACD,KAFD;AAGA,QAAI,CAAC,gBAAL,CAAsB,wBAAtB,EAAgD,aAAC;AAC/C,OAAC,CAAC,SAAF,CAAY,KAAI,CAAC,WAAL,CAAiB,CAAjB,CAAZ;AACD,KAFD;AAGA,QAAI,CAAC,gBAAL,CAAsB,mBAAtB,EAA2C,aAAC;AAC1C,OAAC,CAAC,SAAF,CAAY,KAAI,CAAC,mBAAL,CAAyB,CAAzB,CAAZ;AACD,KAFD;AAGD;;AAED,wBAAI,sBAAJ,EAAI,KAAJ,EAAO;SAAP;AACE,aAAO,KAAK,oBAAL,CAA0B,GAAjC;AACD,KAFM;qBAAA;;AAAA,GAAP;;;;;;;;;;;;;;;;;AAmBA,iEAA4B,QAA5B,EAAsD;AACpD,SAAK,yBAAL,GAAiC,KAAjC;;AAEA,QAAI,CAAC,QAAD,IAAa,OAAO,QAAP,KAAoB,UAArC,EAAiD;AAC/C,YAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,OAAN;AACD;;AAED,SAAK,gBAAL,GAAwB,QAAxB;AACD,GARD;;AAUA,yDACE,cADF,EACmE;AADnE;;AAGE,SAAK,yBAAL,GAAiC,IAAjC;AACA,SAAK,gBAAL,GAAwB,cAAxB;AAEA,WAAO;AACL,WAAI,CAAC,gBAAL,GAAwB,IAAxB;AACD,KAFD;AAGD,GATD,CAxDF,C;;;;AAqEQ,oCAAN;;;;;;;;iBACM,CAAC,KAAK,Q,EAAN;AAAA;AAAA;AAImB;AAAA;AAAA,cAAM,KAAK,CAAC,KAAK,oBAAN,CAAX;;;AAAf,wBAAY,GAAG,SAAf;AACN,iBAAK,QAAL,GACE,wBAAY,SAAZ,gBAAY,WAAZ,GAAY,MAAZ,eAAY,CAAE,mBAAd,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAE,QAAnC,MAA2C,IAA3C,IAA2C,aAA3C,GAA2C,EAA3C,GAA+C,iBADjD;;;;AAIF;AAAA;AAAA,cAAO,QAAQ,CACb,KAAK,oBADQ,EAEb,IAAI,CAAC,YAFQ,EAGb,KAAK,QAHQ,CAAf;;;;AAKD,GAfK,CArER,C;;;;AAwFE;AACE,WAAO,WAAW,CAAC,KAAK,oBAAN,EAA4B,IAAI,CAAC,YAAjC,CAAlB;AACD,GAFD;;AAIA;AACE,UAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,KAAN;AACD,GAFD,CA5FF,C;;;AAiGE,uDAAkB,QAAlB,EAAkC;AAChC,QAAI,KAAK,QAAL,KAAkB,IAAtB,EAA4B;AAC1B,YAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,OAAN;AACD;;AAED,QAAI,OAAO,QAAP,KAAoB,QAApB,IAAgC,QAAQ,CAAC,MAAT,KAAoB,CAAxD,EAA2D;AACzD,YAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,OAAN;AACD;;AAED,SAAK,QAAL,GAAgB,QAAhB;AACD,GAVD;;AAYA;AACE,UAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,KAAN;AACD,GAFD;;AAIA;AACE,UAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,KAAN;AACD,GAFD;;AAIA;AACE,UAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,KAAN;AACD,GAFD;;;;;;;;;;;;;AAcM,kCAAN,UAAa,KAAb,EAA6B;;;;;;AACrB,2BAAe,GAAG,yBAAyB,CAAC,KAAD,CAA3C;;AACN,gBAAI,CAAC,eAAL,EAAsB;AACpB,qBAAO,CAAC,KAAR,CACE,GAAG,GACD,iFAFJ;AAIA;AAAA;AAAA;AACD;;AAGkB;AAAA;AAAA,cAAM,aAAa,EAAnB;;;AAAb,sBAAU,GAAG,SAAb;;AACN,gBAAI,iBAAiB,CAAC,UAAD,CAArB,EAAmC;AACjC;AAAA;AAAA,gBAAO,mCAAmC,CAAC,UAAD,EAAa,eAAb,CAA1C;AACD;;AAGG,+BAAmB,GAAG,KAAtB;iBACA,CAAC,CAAC,eAAe,CAAC,Y,EAAlB;AAAA;AAAA;AACF;AAAA;AAAA,cAAM,gBAAgB,CAAC,mBAAmB,CAAC,eAAD,CAApB,CAAtB;;;AAAA;;AACA,+BAAmB,GAAG,IAAtB;;;;;;AAKF,gBACE,mBAAmB,KAAK,IAAxB,IACA,KAAK,yBAAL,KAAmC,KAFrC,EAGE;AACA;AAAA;AAAA;AACD;;AAED,gBAAI,CAAC,CAAC,KAAK,gBAAX,EAA6B;AACrB,qBAAO,GAAG,kBAAkB,CAAC,eAAD,CAA5B;;AAEN,kBAAI,OAAO,KAAK,gBAAZ,KAAiC,UAArC,EAAiD;AAC/C,qBAAK,gBAAL,CAAsB,OAAtB;AACD,eAFD,MAEO;AACL,qBAAK,gBAAL,CAAsB,IAAtB,CAA2B,OAA3B;AACD;AACF,a;;;AAGD;AAAA;AAAA,cAAM,KAAK,CAAC,yCAAD,CAAX;;;;AAAA;;;;;;;;AACD,GA5CK;;AA8CA,uCAAN,UAAkB,KAAlB,EAAoD;;;;;;;;AAC1C,2BAAe,GAAK,KAAK,CAAV,eAAf;iBACJ,CAAC,e,EAAD;AAAA;AAAA,iB;;AAEF;AAAA;AAAA,cAAM,WAAW,CAAC,KAAK,oBAAN,EAA4B,IAAI,CAAC,YAAjC,CAAjB;;;;AAAA;;AACA;AAAA;AAAA;;;AAGmB;AAAA;AAAA,cAAM,KAAK,CAAC,KAAK,oBAAN,CAAX;;;AAAf,wBAAY,GAAG,SAAf;AACN;AAAA;AAAA,cAAM,WAAW,CAAC,KAAK,oBAAN,EAA4B,IAAI,CAAC,YAAjC,CAAjB;;;AAAA;;AACA;AAAA;AAAA,cAAM,QAAQ,CACZ,KAAK,oBADO,EAEZ,IAAI,CAAC,YAFO,EAGZ,wBAAY,SAAZ,gBAAY,WAAZ,GAAY,MAAZ,eAAY,CAAE,mBAAd,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAE,QAAnC,MAA2C,IAA3C,IAA2C,aAA3C,GAA2C,EAA3C,GAA+C,iBAHnC,CAAd;;;AAAA;;;;;;;;AAKD,GAfK;;AAiBA,+CAAN,UAA0B,KAA1B,EAAkD;;;;;;;;AAC1C,2BAAe,GACnB,iBAAK,CAAC,YAAN,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE,IAApB,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAG,OAAH,CADpB;;AAGN,gBAAI,CAAC,eAAL,EAAsB;AACpB;AAAA;AAAA;AACD,aAFD,MAEO,IAAI,KAAK,CAAC,MAAV,EAAkB;;;AAGvB;AAAA;AAAA;AACD,a;;;AAGD,iBAAK,CAAC,wBAAN;AACA,iBAAK,CAAC,YAAN,CAAmB,KAAnB;AAGM,gBAAI,GAAG,OAAO,CAAC,eAAD,CAAd;;AACN,gBAAI,CAAC,IAAL,EAAW;AACT;AAAA;AAAA;AACD;;AAGK,eAAG,GAAG,IAAI,GAAJ,CAAQ,IAAR,EAAc,IAAI,CAAC,QAAL,CAAc,IAA5B,CAAN;AACA,qBAAS,GAAG,IAAI,GAAJ,CAAQ,IAAI,CAAC,QAAL,CAAc,MAAtB,CAAZ;;AAEN,gBAAI,GAAG,CAAC,IAAJ,KAAa,SAAS,CAAC,IAA3B,EAAiC;AAC/B;AAAA;AAAA;AACD;;AAEY;AAAA;AAAA,cAAM,eAAe,CAAC,GAAD,CAArB;;;AAAT,kBAAM,GAAG,SAAT;iBAEA,CAAC,M,EAAD;AAAA;AAAA;AACO;AAAA;AAAA,cAAM,IAAI,CAAC,OAAL,CAAa,UAAb,CAAwB,IAAxB,CAAN;;;AAAT,kBAAM,GAAG,SAAT,C;;;AAIA;AAAA;AAAA,cAAM,KAAK,CAAC,qCAAD,CAAX;;;;;AAAA;;;;;;;AAES;AAAA;AAAA,cAAM,MAAM,CAAC,KAAP,EAAN;;;AAAT,kBAAM,GAAG,SAAT;;;;AAGF,gBAAI,CAAC,MAAL,EAAa;;AAEX;AAAA;AAAA;AACD;;AAED,2BAAe,CAAC,WAAhB,GAA8B,WAAW,CAAC,oBAA1C;AACA,2BAAe,CAAC,mBAAhB,GAAsC,IAAtC;AACA;AAAA;AAAA,cAAO,MAAM,CAAC,WAAP,CAAmB,eAAnB,CAAP;;;;AACD,GAlDK;;AAmDR;AAAC,CArPD;;AAuPA,SAAS,mBAAT,CACE,eADF,EACyC;;;AAEvC,MAAM,sBAAsB,8DACrB,eAAe,CAAC,YADK,CAA5B,CAFuC,C;;;;;AASvC,wBAAsB,CAAC,IAAvB,IAA2B,SACzB,GAAC,OAAD,IAAW,eADc,EAE1B,EAFD;AAIA,SAAO,sBAAP;AACD;;AAED,SAAS,yBAAT,CAAmC,EAAnC,EAEY;MADV,IAAI,U;;AAEJ,MAAI,CAAC,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,MAAI;AACF,WAAO,IAAI,CAAC,IAAL,EAAP;AACD,GAFD,CAEE,OAAO,GAAP,EAAY;;AAEZ,WAAO,IAAP;AACD;AACF;AAED;;;;;;AAIA,SAAe,eAAf,CAA+B,GAA/B,EAAuC;;;;;;;;;AAClB;AAAA;AAAA,YAAM,aAAa,EAAnB;;;AAAb,oBAAU,GAAG,SAAb;;;AAEN,iBAAqB,mFAAU,oCAA/B,EAA+B,oBAA/B,EAA+B,oCAA/B,EAAiC;AAAtB,oBAAM,uBAAN;AACH,uBAAS,GAAG,IAAI,GAAJ,CAAQ,MAAM,CAAC,GAAf,EAAoB,IAAI,CAAC,QAAL,CAAc,IAAlC,CAAZ;;AAEN,kBAAI,GAAG,CAAC,IAAJ,KAAa,SAAS,CAAC,IAA3B,EAAiC;AAC/B;AAAA;AAAA,kBAAO,MAAP;AACD;AACF;;;;;;;;;;;;;AAED;AAAA;AAAA,YAAO,IAAP;;;;AACD;AAED;;;;;;AAIA,SAAS,iBAAT,CAA2B,UAA3B,EAAqD;AACnD,SAAO,UAAU,CAAC,IAAX,CACL,kBAAM;AACJ,iBAAM,CAAC,eAAP,KAA2B,SAA3B,I;;AAGA,KAAC,MAAM,CAAC,GAAP,CAAW,UAAX,CAAsB,qBAAtB,CAHD;AAG6C,GAL1C,CAAP;AAOD;;AAED,SAAS,mCAAT,CACE,UADF,EAEE,eAFF,EAEyC;;;AAEvC,iBAAe,CAAC,mBAAhB,GAAsC,IAAtC;AACA,iBAAe,CAAC,WAAhB,GAA8B,WAAW,CAAC,aAA1C;;;AAEA,SAAqB,uFAAU,oCAA/B,EAA+B,oBAA/B,EAA+B,oCAA/B,EAAiC;AAA5B,UAAM,MAAM,uBAAZ;AACH,YAAM,CAAC,WAAP,CAAmB,eAAnB;AACD;;;;;;;;;;;;AACF;;AAED,SAAS,aAAT,GAAsB;AACpB,SAAO,IAAI,CAAC,OAAL,CAAa,QAAb,CAAsB;AAC3B,QAAI,EAAE,QADqB;AAE3B,uBAAmB,EAAE,IAFM,C;;AAAA,GAAtB,CAAP;AAKD;;AAED,SAAS,gBAAT,CACE,2BADF,EAC0D;SAAA,C;;;;AAIhD,aAAO,GAAK,2BAA2B,CAAhC,OAAP;AACA,gBAAU,GAAK,YAAY,CAAjB,UAAV;;AACR,MAAI,OAAO,IAAI,UAAX,IAAyB,OAAO,CAAC,MAAR,GAAiB,UAA9C,EAA0D;AACxD,WAAO,CAAC,IAAR,CACE,gCAA8B,UAA9B,GAAwC,wDAD1C;AAGD;;AAED,SAAO,IAAI,CAAC,YAAL,CAAkB,gBAAlB;;AACQ,mCAA2B,CAAC,KAA5B,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,EAAjC,GAAqC,EAD7C,EAEL,2BAFK,CAAP;AAID;;AAED,SAAS,OAAT,CAAiB,OAAjB,EAAgD;iBAAA,C;;;AAE9C,MAAM,IAAI,GAAG,mBAAO,CAAC,UAAR,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE,IAApB,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,EAAxB,GAA4B,aAAO,CAAC,YAAR,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAE,YAA/D;;AACA,MAAI,IAAJ,EAAU;AACR,WAAO,IAAP;AACD;;AAED,MAAI,gBAAgB,CAAC,OAAO,CAAC,IAAT,CAApB,EAAoC;;AAElC,WAAO,IAAI,CAAC,QAAL,CAAc,MAArB;AACD,GAHD,MAGO;AACL,WAAO,IAAP;AACD;AACH;AC1ZA;;;;;;;;;;;;;;;;;;AAyCA;AAAA;AAAA;AAKE,4BACmB,oBADnB,EACqE;AADrE;;AACmB;AALX,oBAA0B,IAA1B;AAEA,6BAA8D,IAA9D;AAKN,aAAS,CAAC,aAAV,CAAwB,gBAAxB,CAAyC,SAAzC,EAAoD,aAAC;AACnD,kBAAI,CAAC,oBAAL,CAA0B,CAA1B;AAA4B,KAD9B;AAGD;;AAED,wBAAI,0BAAJ,EAAI,KAAJ,EAAO;SAAP;AACE,aAAO,KAAK,oBAAL,CAA0B,GAAjC;AACD,KAFM;qBAAA;;AAAA,GAAP;;AAIc,oDAAd,UAAmC,KAAnC,EAAsD;;;;;;AAC9C,2BAAe,GAAG,KAAK,CAAC,IAAxB;;AAEN,gBAAI,CAAC,eAAe,CAAC,mBAArB,EAA0C;AACxC;AAAA;AAAA;AACD,a;;;;;AAKD,gBACE,KAAK,iBAAL,IACA,eAAe,CAAC,WAAhB,KAAgC,WAAW,CAAC,aAF9C,EAGE;AACA,kBAAI,OAAO,KAAK,iBAAZ,KAAkC,UAAtC,EAAkD;AAChD,qBAAK,iBAAL,CACE,mBAAmB,CAAC,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,eAAlB,CAAD,CADrB;AAGD,eAJD,MAIO;AACL,qBAAK,iBAAL,CAAuB,IAAvB,CAA4B,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,eAAlB,CAA5B;AACD;AACF;;AAEK,uBAAW,GAAG,eAAe,CAAC,IAA9B;kBAGJ,gBAAgB,CAAC,WAAD,CAAhB,IACA,WAAW,CAAC,kCAAD,CAAX,KAAoD,G,GADpD;AAAA;AAAA;AAGA;AAAA;AAAA,cAAM,KAAK,QAAL,CAAc,eAAe,CAAC,WAA9B,EAA4C,WAA5C,CAAN;;;AAAA;;;;;;;;;;;AAEH,GA/Ba;;AAiCd;AACE,WAAO,KAAK,QAAZ;AACD,GAFD;;AAIA;AACE,WAAO,KAAK,cAAZ;AACD,GAFD;;AAIM,wCAAN,UAAe,OAAf,EAGC;;;;;kBACK,YAAY,CAAC,UAAb,KAA4B,S,GAA5B;AAAA;AAAA;AACF;AAAA;AAAA,cAAM,YAAY,CAAC,iBAAb,EAAN;;;AAAA;;;;;AAGF,gBAAI,YAAY,CAAC,UAAb,KAA4B,SAAhC,EAA2C;AACzC,oBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,eAAN;AACD;;AAED;AAAA;AAAA,cAAM,KAAK,cAAL,CAAoB,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAE,QAA7B,CAAN;;;AAAA;;AACA;AAAA;AAAA,cAAM,KAAK,WAAL,CAAiB,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAE,yBAA1B,CAAN;;;AAAA;;AAEA;AAAA;AAAA,cAAO,QAAQ,CACb,KAAK,oBADQ,EAEb,KAAK,cAFQ,EAGb,KAAK,QAHQ,CAAf;;;;AAKD,GApBK;;AAsBA,8CAAN,UAAqB,QAArB,EAAkD;;;AAChD,YAAI,CAAC,CAAC,QAAN,EAAgB;AACd,eAAK,QAAL,GAAgB,QAAhB;AACD,SAFD,MAEO,IAAI,CAAC,KAAK,QAAV,EAAoB;AACzB,eAAK,QAAL,GAAgB,iBAAhB;AACD;;;;;;;AACF,GANK;;AAQA,2CAAN,UACE,cADF,EACwD;;;;;kBAElD,CAAC,cAAD,IAAmB,CAAC,KAAK,c,GAAzB;AAAA;AAAA;AACF;AAAA;AAAA,cAAM,KAAK,iBAAL,EAAN;;;AAAA;;;;;AAGF,gBAAI,CAAC,cAAD,IAAmB,CAAC,CAAC,KAAK,cAA9B,EAA8C;AAC5C;AAAA;AAAA;AACD;;AAED,gBAAI,EAAE,cAAc,YAAY,yBAA5B,CAAJ,EAA4D;AAC1D,oBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,eAAN;AACD;;AAED,iBAAK,cAAL,GAAsB,cAAtB;;;;;;;AACD,GAhBK;;AAkBQ,iDAAd;;;;;;;;;AAEI;AAAsB;AAAA;AAAA,cAAM,SAAS,CAAC,aAAV,CAAwB,QAAxB,CAC1B,eAD0B,EAE1B;AACE,mBAAK,EAAE;AADT,aAF0B,CAAN;;;AAAtB,eAAK,cAAL,GAAsB,SAAtB,C;;;;;;AAYA,iBAAK,cAAL,CAAoB,MAApB,GAA6B,KAA7B,CAAmC;;AAElC,aAFD;;;;;;;AAIA,kBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,cAA4D;AAChE,iCAAmB,EAAE,GAAC,CAAC;AADyC,aAA5D,CAAN;;;;;;;;;AAIH,GAtBa;;AAwBR,2CAAN;;;;;iBACM,CAAC,KAAK,c,EAAN;AAAA;AAAA;AACF;AAAA;AAAA,cAAM,KAAK,iBAAL,EAAN;;;AAAA;;;;;AAGF;AAAA;AAAA,cAAO,WAAW,CAAC,KAAK,oBAAN,EAA4B,KAAK,cAAjC,CAAlB;;;;AACD,GANK;;;;;;;;;;;AAgBA,iDAAN;;;;;;AACE,gBAAI,YAAY,CAAC,UAAb,KAA4B,SAAhC,EAA2C;AACzC;AAAA;AAAA;AACD;;AAEwB;AAAA;AAAA,cAAM,YAAY,CAAC,iBAAb,EAAN;;;AAAnB,4BAAgB,GAAG,SAAnB;;AACN,gBAAI,gBAAgB,KAAK,SAAzB,EAAoC;AAClC;AAAA;AAAA;AACD,aAFD,MAEO,IAAI,gBAAgB,KAAK,QAAzB,EAAmC;AACxC,oBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,eAAN;AACD,aAFM,MAEA;AACL,oBAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,eAAN;AACD;;;;;AACF,GAbK;;;;;;;AAmBN,2DAAkB,QAAlB,EAAkC;AAChC,QAAI,KAAK,QAAL,KAAkB,IAAtB,EAA4B;AAC1B,YAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,OAAN;AACD;;AAED,QAAI,OAAO,QAAP,KAAoB,QAApB,IAAgC,QAAQ,CAAC,MAAT,KAAoB,CAAxD,EAA2D;AACzD,YAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,OAAN;AACD;;AAED,SAAK,QAAL,GAAgB,QAAhB;AACD,GAVD;;;;;;;AAgBA,0DAAiB,cAAjB,EAA0D;AACxD,QAAI,EAAE,cAAc,YAAY,yBAA5B,CAAJ,EAA4D;AAC1D,YAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,OAAN;AACD;;AAED,QAAI,KAAK,cAAT,EAAyB;AACvB,YAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,OAAN;AACD;;AAED,SAAK,cAAL,GAAsB,cAAtB;AACD,GAVD;;;;;;;;AAiBA,mDAAU,cAAV,EAA2D;AAA3D;;AACE,SAAK,iBAAL,GAAyB,cAAzB;AAEA,WAAO;AACL,WAAI,CAAC,iBAAL,GAAyB,IAAzB;AACD,KAFD;AAGD,GAND;;AAQA;AACE,UAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,KAAN;AACD,GAFD;;AAIA;AACE,UAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,KAAN;AACD,GAFD;;;;;;;AAQA;AACE,WAAO,aAAQ,CAAf;AACD,GAFD;;AAIc,wCAAd,UACE,WADF,EAEE,IAFF,EAE0B;;;;;;AAElB,qBAAS,GAAG,YAAY,CAAC,WAAD,CAAxB;AACY;AAAA;AAAA,cAAM,KAAK,oBAAL,CAA0B,iBAA1B,CAA4C,GAA5C,EAAN;;;AAAZ,qBAAS,GAAG,SAAZ;AACN,qBAAS,CAAC,QAAV,CAAmB,SAAnB,EAA8B;;AAE5B,wBAAU,EAAE,IAAI,CAAC,mBAAD,CAFY;AAG5B,0BAAY,EAAE,IAAI,CAAC,qBAAD,CAHU;AAI5B,0BAAY,EAAE,IAAI,CAAC,qBAAD,CAJU;AAK5B,iCAAmB,EAAE,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,GAAL,KAAa,IAAxB;;;AALO,aAA9B;;;;;;;AAQD,GAda;;AAehB;AAAC,CA7OD;;AA+OA,SAAS,YAAT,CAAsB,WAAtB,EAA8C;AAC5C,UAAQ,WAAR;AACE,SAAK,WAAW,CAAC,oBAAjB;AACE,aAAO,mBAAP;;AACF,SAAK,WAAW,CAAC,aAAjB;AACE,aAAO,yBAAP;;AACF;AACE,YAAM,IAAI,KAAJ,EAAN;AANJ;AAQD;;AAED,SAAS,mBAAT,CACE,eADF,EACyC;AAEvC,SAAO,eAAe,CAAC,WAAvB;AACA,SAAO,eAAe,CAAC,mBAAvB;AACA,SAAO,eAAP;AACF;AXzSA;;;;;;;;;;;;;;;;;;SAuBgB,gB,CAAiB,G,EAAgB;;;AAC/C,MAAI,CAAC,GAAD,IAAQ,CAAC,GAAG,CAAC,OAAjB,EAA0B;AACxB,UAAM,oBAAoB,CAAC,0BAAD,CAA1B;AACD;;AAED,MAAI,CAAC,GAAG,CAAC,IAAT,EAAe;AACb,UAAM,oBAAoB,CAAC,UAAD,CAA1B;AACD,GAP8C,C;;;AAU/C,MAAM,UAAU,GAAyC,CACvD,WADuD,EAEvD,QAFuD,EAGvD,OAHuD,EAIvD,mBAJuD,CAAzD;AAOQ,aAAO,GAAK,GAAG,CAAR,OAAP;;;AACR,SAAsB,uFAAU,oCAAhC,EAAgC,oBAAhC,EAAgC,oCAAhC,EAAkC;AAA7B,UAAM,OAAO,uBAAb;;AACH,UAAI,CAAC,OAAO,CAAC,OAAD,CAAZ,EAAuB;AACrB,cAAM,oBAAoB,CAAC,OAAD,CAA1B;AACD;AACF;;;;;;;;;;;;;AAED,SAAO;AACL,WAAO,EAAE,GAAG,CAAC,IADR;AAEL,aAAS,EAAE,OAAO,CAAC,SAFd;AAGL,UAAM,EAAE,OAAO,CAAC,MAHX;AAIL,SAAK,EAAE,OAAO,CAAC,KAJV;AAKL,YAAQ,EAAE,OAAO,CAAC;AALb,GAAP;AAOD;;AAED,SAAS,oBAAT,CAA8B,SAA9B,EAA+C;AAC7C,SAAO,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,IAA0D;AAC/D,aAAS;AADsD,GAA1D,CAAP;AAGF;AC5DA;;;;;;;;;;;;;;;;;;AAqCA,IAAM,cAAc,GAAG,WAAvB;;AACA,SAAS,aAAT,CACE,SADF,EAC+B;;AAG7B,MAAM,GAAG,GAAG,SAAS,CAAC,WAAV,CAAsB,KAAtB,EAA6B,YAA7B,EAAZ;AACA,MAAM,SAAS,GAAG,gBAAgB,CAAC,GAAD,CAAlC;AACA,MAAM,aAAa,GAAG,SAAS,CAAC,WAAV,CAAsB,eAAtB,EAAuC,YAAvC,EAAtB;AACA,MAAM,iBAAiB,GAAG,SAAS,CAAC,WAAV,CAAsB,oBAAtB,CAA1B;AAEA,MAAM,oBAAoB,GAAiC;AACzD,OAAG,KADsD;AAEzD,aAAS,WAFgD;AAGzD,iBAAa,eAH4C;AAIzD,qBAAiB;AAJwC,GAA3D;;AAOA,MAAI,CAAC,WAAW,EAAhB,EAAoB;AAClB,UAAM,aAAa,CAAC,MAAd,CAAoB;AAAA;AAApB,KAAN;AACD;;AAED,MAAI,IAAI,IAAI,8BAA8B,IAA1C,EAAgD;;AAE9C,WAAO,IAAI,YAAJ,CAAiB,oBAAjB,CAAP;AACD,GAHD,MAGO;;AAEL,WAAO,IAAI,gBAAJ,CAAqB,oBAArB,CAAP;AACD;AACF;;AAED,IAAM,iBAAiB,GAAG;AACxB,aAAW;AADa,CAA1B;AAIC,qDAA+B,CAAC,QAAhC,CAAyC,iBAAzC,CACC,IAAI,6DAAJ,CACE,cADF,EAEE,aAFF,EAEe;AAAA;AAFf,EAIE,eAJF,CAIkB,iBAJlB,CADD;;AAuBD,SAAS,WAAT,GAAoB;AAClB,MAAI,IAAI,IAAI,8BAA8B,IAA1C,EAAgD;;AAE9C,WAAO,uBAAuB,EAA9B;AACD,GAHD,MAGO;;AAEL,WAAO,2BAA2B,EAAlC;AACD;AACF;AAED;;;;;AAGA,SAAS,2BAAT,GAAoC;AAClC,SACE,eAAe,MAAf,IACA,SAAS,KAAK,IADd,IAEA,SAAS,CAAC,aAFV,IAGA,mBAAmB,SAHnB,IAIA,iBAAiB,MAJjB,IAKA,kBAAkB,MALlB,IAMA,WAAW,MANX,IAOA,yBAAyB,CAAC,SAA1B,CAAoC,cAApC,CAAmD,kBAAnD,CAPA,IAQA,gBAAgB,CAAC,SAAjB,CAA2B,cAA3B,CAA0C,QAA1C,CATF;AAWD;AAED;;;;;AAGA,SAAS,uBAAT,GAAgC;AAC9B,SACE,eAAe,IAAf,IACA,SAAS,KAAK,IADd,IAEA,iBAAiB,IAFjB,IAGA,kBAAkB,IAHlB,IAIA,yBAAyB,CAAC,SAA1B,CAAoC,cAApC,CAAmD,kBAAnD,CAJA,IAKA,gBAAgB,CAAC,SAAjB,CAA2B,cAA3B,CAA0C,QAA1C,CANF;AAQF,C;;;;;;;;;;;;;;;;;;;;;;;;;AWrIC,WAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AAC1B,UAA+DA,OAAO,CAACC,OAAD,CAAtE,GACA,SADA;AAGD,CAJA,EAIC,IAJD,EAIO,UAAUA,OAAV,EAAmB;AAAE;;AAE3B,WAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,WAAOC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BJ,GAA3B,CAAP;AACD;;AAED,WAASK,gBAAT,CAA0BC,OAA1B,EAAmC;AACjC,WAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3CH,aAAO,CAACI,SAAR,GAAoB,YAAW;AAC7BF,eAAO,CAACF,OAAO,CAACK,MAAT,CAAP;AACD,OAFD;;AAIAL,aAAO,CAACM,OAAR,GAAkB,YAAW;AAC3BH,cAAM,CAACH,OAAO,CAACO,KAAT,CAAN;AACD,OAFD;AAGD,KARM,CAAP;AASD;;AAED,WAASC,oBAAT,CAA8BC,GAA9B,EAAmCC,MAAnC,EAA2CC,IAA3C,EAAiD;AAC/C,QAAIX,OAAJ;AACA,QAAIY,CAAC,GAAG,IAAIX,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC5CH,aAAO,GAAGS,GAAG,CAACC,MAAD,CAAH,CAAYG,KAAZ,CAAkBJ,GAAlB,EAAuBE,IAAvB,CAAV;AACAZ,sBAAgB,CAACC,OAAD,CAAhB,CAA0Bc,IAA1B,CAA+BZ,OAA/B,EAAwCC,MAAxC;AACD,KAHO,CAAR;AAKAS,KAAC,CAACZ,OAAF,GAAYA,OAAZ;AACA,WAAOY,CAAP;AACD;;AAED,WAASG,0BAAT,CAAoCN,GAApC,EAAyCC,MAAzC,EAAiDC,IAAjD,EAAuD;AACrD,QAAIC,CAAC,GAAGJ,oBAAoB,CAACC,GAAD,EAAMC,MAAN,EAAcC,IAAd,CAA5B;AACA,WAAOC,CAAC,CAACE,IAAF,CAAO,UAASE,KAAT,EAAgB;AAC5B,UAAI,CAACA,KAAL,EAAY;AACZ,aAAO,IAAIC,MAAJ,CAAWD,KAAX,EAAkBJ,CAAC,CAACZ,OAApB,CAAP;AACD,KAHM,CAAP;AAID;;AAED,WAASkB,eAAT,CAAyBC,UAAzB,EAAqCC,UAArC,EAAiDC,UAAjD,EAA6D;AAC3DA,cAAU,CAACC,OAAX,CAAmB,UAASC,IAAT,EAAe;AAChCC,YAAM,CAACC,cAAP,CAAsBN,UAAU,CAACvB,SAAjC,EAA4C2B,IAA5C,EAAkD;AAChDG,WAAG,EAAE,eAAW;AACd,iBAAO,KAAKN,UAAL,EAAiBG,IAAjB,CAAP;AACD,SAH+C;AAIhDI,WAAG,EAAE,aAASC,GAAT,EAAc;AACjB,eAAKR,UAAL,EAAiBG,IAAjB,IAAyBK,GAAzB;AACD;AAN+C,OAAlD;AAQD,KATD;AAUD;;AAED,WAASC,mBAAT,CAA6BV,UAA7B,EAAyCC,UAAzC,EAAqDU,WAArD,EAAkET,UAAlE,EAA8E;AAC5EA,cAAU,CAACC,OAAX,CAAmB,UAASC,IAAT,EAAe;AAChC,UAAI,EAAEA,IAAI,IAAIO,WAAW,CAAClC,SAAtB,CAAJ,EAAsC;;AACtCuB,gBAAU,CAACvB,SAAX,CAAqB2B,IAArB,IAA6B,YAAW;AACtC,eAAOf,oBAAoB,CAAC,KAAKY,UAAL,CAAD,EAAmBG,IAAnB,EAAyBQ,SAAzB,CAA3B;AACD,OAFD;AAGD,KALD;AAMD;;AAED,WAASC,YAAT,CAAsBb,UAAtB,EAAkCC,UAAlC,EAA8CU,WAA9C,EAA2DT,UAA3D,EAAuE;AACrEA,cAAU,CAACC,OAAX,CAAmB,UAASC,IAAT,EAAe;AAChC,UAAI,EAAEA,IAAI,IAAIO,WAAW,CAAClC,SAAtB,CAAJ,EAAsC;;AACtCuB,gBAAU,CAACvB,SAAX,CAAqB2B,IAArB,IAA6B,YAAW;AACtC,eAAO,KAAKH,UAAL,EAAiBG,IAAjB,EAAuBV,KAAvB,CAA6B,KAAKO,UAAL,CAA7B,EAA+CW,SAA/C,CAAP;AACD,OAFD;AAGD,KALD;AAMD;;AAED,WAASE,yBAAT,CAAmCd,UAAnC,EAA+CC,UAA/C,EAA2DU,WAA3D,EAAwET,UAAxE,EAAoF;AAClFA,cAAU,CAACC,OAAX,CAAmB,UAASC,IAAT,EAAe;AAChC,UAAI,EAAEA,IAAI,IAAIO,WAAW,CAAClC,SAAtB,CAAJ,EAAsC;;AACtCuB,gBAAU,CAACvB,SAAX,CAAqB2B,IAArB,IAA6B,YAAW;AACtC,eAAOR,0BAA0B,CAAC,KAAKK,UAAL,CAAD,EAAmBG,IAAnB,EAAyBQ,SAAzB,CAAjC;AACD,OAFD;AAGD,KALD;AAMD;;AAED,WAASG,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAAKC,MAAL,GAAcD,KAAd;AACD;;AAEDjB,iBAAe,CAACgB,KAAD,EAAQ,QAAR,EAAkB,CAC/B,MAD+B,EAE/B,SAF+B,EAG/B,YAH+B,EAI/B,QAJ+B,CAAlB,CAAf;AAOAL,qBAAmB,CAACK,KAAD,EAAQ,QAAR,EAAkBG,QAAlB,EAA4B,CAC7C,KAD6C,EAE7C,QAF6C,EAG7C,QAH6C,EAI7C,YAJ6C,EAK7C,OAL6C,CAA5B,CAAnB;AAQAJ,2BAAyB,CAACC,KAAD,EAAQ,QAAR,EAAkBG,QAAlB,EAA4B,CACnD,YADmD,EAEnD,eAFmD,CAA5B,CAAzB;;AAKA,WAASpB,MAAT,CAAgBqB,MAAhB,EAAwBtC,OAAxB,EAAiC;AAC/B,SAAKuC,OAAL,GAAeD,MAAf;AACA,SAAKE,QAAL,GAAgBxC,OAAhB;AACD;;AAEDkB,iBAAe,CAACD,MAAD,EAAS,SAAT,EAAoB,CACjC,WADiC,EAEjC,KAFiC,EAGjC,YAHiC,EAIjC,OAJiC,CAApB,CAAf;AAOAY,qBAAmB,CAACZ,MAAD,EAAS,SAAT,EAAoBwB,SAApB,EAA+B,CAChD,QADgD,EAEhD,QAFgD,CAA/B,CAAnB,CAjHyB,CAsHzB;;AACA,GAAC,SAAD,EAAY,UAAZ,EAAwB,oBAAxB,EAA8CnB,OAA9C,CAAsD,UAASoB,UAAT,EAAqB;AACzE,QAAI,EAAEA,UAAU,IAAID,SAAS,CAAC7C,SAA1B,CAAJ,EAA0C;;AAC1CqB,UAAM,CAACrB,SAAP,CAAiB8C,UAAjB,IAA+B,YAAW;AACxC,UAAIJ,MAAM,GAAG,IAAb;AACA,UAAI3B,IAAI,GAAGoB,SAAX;AACA,aAAO9B,OAAO,CAACC,OAAR,GAAkBY,IAAlB,CAAuB,YAAW;AACvCwB,cAAM,CAACC,OAAP,CAAeG,UAAf,EAA2B7B,KAA3B,CAAiCyB,MAAM,CAACC,OAAxC,EAAiD5B,IAAjD;;AACA,eAAOZ,gBAAgB,CAACuC,MAAM,CAACE,QAAR,CAAhB,CAAkC1B,IAAlC,CAAuC,UAASE,KAAT,EAAgB;AAC5D,cAAI,CAACA,KAAL,EAAY;AACZ,iBAAO,IAAIC,MAAJ,CAAWD,KAAX,EAAkBsB,MAAM,CAACE,QAAzB,CAAP;AACD,SAHM,CAAP;AAID,OANM,CAAP;AAOD,KAVD;AAWD,GAbD;;AAeA,WAASG,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAAKC,MAAL,GAAcD,KAAd;AACD;;AAEDD,aAAW,CAAC/C,SAAZ,CAAsBkD,WAAtB,GAAoC,YAAW;AAC7C,WAAO,IAAIZ,KAAJ,CAAU,KAAKW,MAAL,CAAYC,WAAZ,CAAwBjC,KAAxB,CAA8B,KAAKgC,MAAnC,EAA2Cd,SAA3C,CAAV,CAAP;AACD,GAFD;;AAIAY,aAAW,CAAC/C,SAAZ,CAAsBuC,KAAtB,GAA8B,YAAW;AACvC,WAAO,IAAID,KAAJ,CAAU,KAAKW,MAAL,CAAYV,KAAZ,CAAkBtB,KAAlB,CAAwB,KAAKgC,MAA7B,EAAqCd,SAArC,CAAV,CAAP;AACD,GAFD;;AAIAb,iBAAe,CAACyB,WAAD,EAAc,QAAd,EAAwB,CACrC,MADqC,EAErC,SAFqC,EAGrC,YAHqC,EAIrC,eAJqC,CAAxB,CAAf;AAOAd,qBAAmB,CAACc,WAAD,EAAc,QAAd,EAAwBI,cAAxB,EAAwC,CACzD,KADyD,EAEzD,KAFyD,EAGzD,QAHyD,EAIzD,OAJyD,EAKzD,KALyD,EAMzD,QANyD,EAOzD,QAPyD,EAQzD,YARyD,EASzD,OATyD,CAAxC,CAAnB;AAYAd,2BAAyB,CAACU,WAAD,EAAc,QAAd,EAAwBI,cAAxB,EAAwC,CAC/D,YAD+D,EAE/D,eAF+D,CAAxC,CAAzB;AAKAf,cAAY,CAACW,WAAD,EAAc,QAAd,EAAwBI,cAAxB,EAAwC,CAClD,aADkD,CAAxC,CAAZ;;AAIA,WAASC,WAAT,CAAqBC,cAArB,EAAqC;AACnC,SAAKC,GAAL,GAAWD,cAAX;AACA,SAAKE,QAAL,GAAgB,IAAIlD,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACpD8C,oBAAc,CAACG,UAAf,GAA4B,YAAW;AACrClD,eAAO;AACR,OAFD;;AAGA+C,oBAAc,CAAC3C,OAAf,GAAyB,YAAW;AAClCH,cAAM,CAAC8C,cAAc,CAAC1C,KAAhB,CAAN;AACD,OAFD;;AAGA0C,oBAAc,CAACI,OAAf,GAAyB,YAAW;AAClClD,cAAM,CAAC8C,cAAc,CAAC1C,KAAhB,CAAN;AACD,OAFD;AAGD,KAVe,CAAhB;AAWD;;AAEDyC,aAAW,CAACpD,SAAZ,CAAsB0D,WAAtB,GAAoC,YAAW;AAC7C,WAAO,IAAIX,WAAJ,CAAgB,KAAKO,GAAL,CAASI,WAAT,CAAqBzC,KAArB,CAA2B,KAAKqC,GAAhC,EAAqCnB,SAArC,CAAhB,CAAP;AACD,GAFD;;AAIAb,iBAAe,CAAC8B,WAAD,EAAc,KAAd,EAAqB,CAClC,kBADkC,EAElC,MAFkC,CAArB,CAAf;AAKAhB,cAAY,CAACgB,WAAD,EAAc,KAAd,EAAqBO,cAArB,EAAqC,CAC/C,OAD+C,CAArC,CAAZ;;AAIA,WAASC,SAAT,CAAmBC,EAAnB,EAAuBC,UAAvB,EAAmCC,WAAnC,EAAgD;AAC9C,SAAKC,GAAL,GAAWH,EAAX;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,WAAL,GAAmB,IAAIX,WAAJ,CAAgBW,WAAhB,CAAnB;AACD;;AAEDH,WAAS,CAAC5D,SAAV,CAAoBiE,iBAApB,GAAwC,YAAW;AACjD,WAAO,IAAIlB,WAAJ,CAAgB,KAAKiB,GAAL,CAASC,iBAAT,CAA2BhD,KAA3B,CAAiC,KAAK+C,GAAtC,EAA2C7B,SAA3C,CAAhB,CAAP;AACD,GAFD;;AAIAb,iBAAe,CAACsC,SAAD,EAAY,KAAZ,EAAmB,CAChC,MADgC,EAEhC,SAFgC,EAGhC,kBAHgC,CAAnB,CAAf;AAMAxB,cAAY,CAACwB,SAAD,EAAY,KAAZ,EAAmBM,WAAnB,EAAgC,CAC1C,mBAD0C,EAE1C,OAF0C,CAAhC,CAAZ;;AAKA,WAASC,EAAT,CAAYN,EAAZ,EAAgB;AACd,SAAKG,GAAL,GAAWH,EAAX;AACD;;AAEDM,IAAE,CAACnE,SAAH,CAAa+D,WAAb,GAA2B,YAAW;AACpC,WAAO,IAAIX,WAAJ,CAAgB,KAAKY,GAAL,CAASD,WAAT,CAAqB9C,KAArB,CAA2B,KAAK+C,GAAhC,EAAqC7B,SAArC,CAAhB,CAAP;AACD,GAFD;;AAIAb,iBAAe,CAAC6C,EAAD,EAAK,KAAL,EAAY,CACzB,MADyB,EAEzB,SAFyB,EAGzB,kBAHyB,CAAZ,CAAf;AAMA/B,cAAY,CAAC+B,EAAD,EAAK,KAAL,EAAYD,WAAZ,EAAyB,CACnC,OADmC,CAAzB,CAAZ,CA7OyB,CAiPzB;AACA;;AACA,GAAC,YAAD,EAAe,eAAf,EAAgCxC,OAAhC,CAAwC,UAAS0C,QAAT,EAAmB;AACzD,KAACrB,WAAD,EAAcT,KAAd,EAAqBZ,OAArB,CAA6B,UAASQ,WAAT,EAAsB;AACjD;AACA,UAAI,EAAEkC,QAAQ,IAAIlC,WAAW,CAAClC,SAA1B,CAAJ,EAA0C;;AAE1CkC,iBAAW,CAAClC,SAAZ,CAAsBoE,QAAQ,CAACC,OAAT,CAAiB,MAAjB,EAAyB,SAAzB,CAAtB,IAA6D,YAAW;AACtE,YAAItD,IAAI,GAAGlB,OAAO,CAACsC,SAAD,CAAlB;AACA,YAAImC,QAAQ,GAAGvD,IAAI,CAACA,IAAI,CAACwD,MAAL,GAAc,CAAf,CAAnB;AACA,YAAIC,YAAY,GAAG,KAAKvB,MAAL,IAAe,KAAKT,MAAvC;AACA,YAAIpC,OAAO,GAAGoE,YAAY,CAACJ,QAAD,CAAZ,CAAuBnD,KAAvB,CAA6BuD,YAA7B,EAA2CzD,IAAI,CAACd,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAA3C,CAAd;;AACAG,eAAO,CAACI,SAAR,GAAoB,YAAW;AAC7B8D,kBAAQ,CAAClE,OAAO,CAACK,MAAT,CAAR;AACD,SAFD;AAGD,OARD;AASD,KAbD;AAcD,GAfD,EAnPyB,CAoQzB;;AACA,GAAC6B,KAAD,EAAQS,WAAR,EAAqBrB,OAArB,CAA6B,UAASQ,WAAT,EAAsB;AACjD,QAAIA,WAAW,CAAClC,SAAZ,CAAsByE,MAA1B,EAAkC;;AAClCvC,eAAW,CAAClC,SAAZ,CAAsByE,MAAtB,GAA+B,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AACpD,UAAIC,QAAQ,GAAG,IAAf;AACA,UAAIC,KAAK,GAAG,EAAZ;AAEA,aAAO,IAAIxE,OAAJ,CAAY,UAASC,OAAT,EAAkB;AACnCsE,gBAAQ,CAACE,aAAT,CAAuBJ,KAAvB,EAA8B,UAAShC,MAAT,EAAiB;AAC7C,cAAI,CAACA,MAAL,EAAa;AACXpC,mBAAO,CAACuE,KAAD,CAAP;AACA;AACD;;AACDA,eAAK,CAACE,IAAN,CAAWrC,MAAM,CAACtB,KAAlB;;AAEA,cAAIuD,KAAK,KAAKK,SAAV,IAAuBH,KAAK,CAACN,MAAN,IAAgBI,KAA3C,EAAkD;AAChDrE,mBAAO,CAACuE,KAAD,CAAP;AACA;AACD;;AACDnC,gBAAM,CAACuC,QAAP;AACD,SAZD;AAaD,OAdM,CAAP;AAeD,KAnBD;AAoBD,GAtBD;;AAwBA,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgD;AAC9C,QAAIrE,CAAC,GAAGJ,oBAAoB,CAAC0E,SAAD,EAAY,MAAZ,EAAoB,CAACH,IAAD,EAAOC,OAAP,CAApB,CAA5B;AACA,QAAIhF,OAAO,GAAGY,CAAC,CAACZ,OAAhB;;AAEA,QAAIA,OAAJ,EAAa;AACXA,aAAO,CAACmF,eAAR,GAA0B,UAASC,KAAT,EAAgB;AACxC,YAAIH,eAAJ,EAAqB;AACnBA,yBAAe,CAAC,IAAIzB,SAAJ,CAAcxD,OAAO,CAACK,MAAtB,EAA8B+E,KAAK,CAAC1B,UAApC,EAAgD1D,OAAO,CAAC2D,WAAxD,CAAD,CAAf;AACD;AACF,OAJD;AAKD;;AAED,WAAO/C,CAAC,CAACE,IAAF,CAAO,UAAS2C,EAAT,EAAa;AACzB,aAAO,IAAIM,EAAJ,CAAON,EAAP,CAAP;AACD,KAFM,CAAP;AAGD;;AAED,WAAS4B,QAAT,CAAkBN,IAAlB,EAAwB;AACtB,WAAOvE,oBAAoB,CAAC0E,SAAD,EAAY,gBAAZ,EAA8B,CAACH,IAAD,CAA9B,CAA3B;AACD;;AAEDvF,SAAO,CAACsF,MAAR,GAAiBA,MAAjB;AACAtF,SAAO,CAAC6F,QAAR,GAAmBA,QAAnB;AAEA7D,QAAM,CAACC,cAAP,CAAsBjC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEwB,SAAK,EAAE;AAAT,GAA7C;AAED,CA3TA,CAAD,C","file":"firebase-messaging.js","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n// Key of FCM Payload in Notification's data field.\nexport const FCM_MSG = 'FCM_MSG';\nexport const TAG = 'FirebaseMessaging: ';\n\n// Set to '1' if Analytics is enabled for the campaign\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\n\n// Due to the fact that onBackgroundMessage can't be awaited (to support rxjs), a silent push\n// warning might be shown by the browser if the callback fails to completes by the end of onPush.\n// Experiments were ran to determine the majority onBackground message clock time. This brief\n// blocking time would allow majority of the onBackgroundMessage callback to finish.\nexport const BACKGROUND_HANDLE_EXECUTION_TIME_LIMIT_MS = 1000;\n\n// Preparation time for client to initialize and set up the message handler.\nexport const FOREGROUND_HANDLE_PREPARATION_TIME_MS = 3000;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the firebase SDK.\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function createInstallationRequest(\n  appConfig: AppConfig,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || ((self as unknown) as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/app-config';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/app-config';\nimport { IdChangeCallbackFn } from '../functions';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, deleteDb, openDb } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from './migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDb => {\n      // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n      // because if there are multiple versions between the old version and the current version, we\n      // want ALL the migrations that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDb.oldVersion) {\n        case 0:\n          upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.complete;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDb(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../api/create-installation-request';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      appConfig,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      appConfig,\n      installationEntry\n    );\n    return set(appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const {\n      installationEntry,\n      registrationPromise\n    } = await getInstallationEntry(appConfig);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, platformLoggerProvider }: FirebaseDependencies,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If platform logger exists, add the platform info string to the header.\n  const platformLogger = platformLoggerProvider.getImmediate({\n    optional: true\n  });\n  if (platformLogger) {\n    headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../api/generate-auth-token-request';\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  dependencies: FirebaseDependencies,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(dependencies.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(dependencies, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(dependencies, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  dependencies: FirebaseDependencies,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(dependencies.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(dependencies.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(dependencies, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  dependencies: FirebaseDependencies,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      dependencies,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(dependencies.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(dependencies.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(dependencies.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\n\nexport async function getId(\n  dependencies: FirebaseDependencies\n): Promise<string> {\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    dependencies.appConfig\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(dependencies).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\n\nexport async function getToken(\n  dependencies: FirebaseDependencies,\n  forceRefresh = false\n): Promise<string> {\n  await completeInstallationRegistration(dependencies.appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(dependencies, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(appConfig);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallationRequest(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteInstallationRequest } from '../api/delete-installation-request';\nimport { remove, update } from '../helpers/idb-manager';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\nimport { RequestStatus } from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport async function deleteInstallation(\n  dependencies: FirebaseDependencies\n): Promise<void> {\n  const { appConfig } = dependencies;\n\n  const entry = await update(appConfig, oldEntry => {\n    if (oldEntry && oldEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n      // Delete the unregistered entry without sending a deleteInstallation request.\n      return undefined;\n    }\n    return oldEntry;\n  });\n\n  if (entry) {\n    if (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(ErrorCode.DELETE_PENDING_REGISTRATION);\n    } else if (entry.registrationStatus === RequestStatus.COMPLETED) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { addCallback, removeCallback } from '../helpers/fid-changed';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\n\nexport type IdChangeCallbackFn = (installationId: string) => void;\nexport type IdChangeUnsubscribeFn = () => void;\n\n/**\n * Sets a new callback that will get called when Installation ID changes.\n * Returns an unsubscribe function that will remove the callback when called.\n */\nexport function onIdChange(\n  { appConfig }: FirebaseDependencies,\n  callback: IdChangeCallbackFn\n): IdChangeUnsubscribeFn {\n  addCallback(appConfig, callback);\n\n  return () => {\n    removeCallback(appConfig, callback);\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-types';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '@firebase/installations';\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport {\n  FirebaseService,\n  _FirebaseNamespace\n} from '@firebase/app-types/private';\n\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport { SwController } from './controllers/sw-controller';\nimport { WindowController } from './controllers/window-controller';\nimport { extractAppConfig } from './helpers/extract-app-config';\nimport firebase from '@firebase/app';\n\nconst MESSAGING_NAME = 'messaging';\nfunction factoryMethod(\n  container: ComponentContainer\n): FirebaseService & FirebaseMessaging {\n  // Dependencies.\n  const app = container.getProvider('app').getImmediate();\n  const appConfig = extractAppConfig(app);\n  const installations = container.getProvider('installations').getImmediate();\n  const analyticsProvider = container.getProvider('analytics-internal');\n\n  const firebaseDependencies: FirebaseInternalDependencies = {\n    app,\n    appConfig,\n    installations,\n    analyticsProvider\n  };\n\n  if (!isSupported()) {\n    throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n  }\n\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return new SwController(firebaseDependencies);\n  } else {\n    // Assume we are in the window context.\n    return new WindowController(firebaseDependencies);\n  }\n}\n\nconst NAMESPACE_EXPORTS = {\n  isSupported\n};\n\n(firebase as _FirebaseNamespace).INTERNAL.registerComponent(\n  new Component(\n    MESSAGING_NAME,\n    factoryMethod,\n    ComponentType.PUBLIC\n  ).setServiceProps(NAMESPACE_EXPORTS)\n);\n\n/**\n * Define extension behavior of `registerMessaging`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    messaging: {\n      (app?: FirebaseApp): FirebaseMessaging;\n      isSupported(): boolean;\n    };\n  }\n  interface FirebaseApp {\n    messaging(): FirebaseMessaging;\n  }\n}\n\nfunction isSupported(): boolean {\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return isSWControllerSupported();\n  } else {\n    // Assume we are in the window context.\n    return isWindowControllerSupported();\n  }\n}\n\n/**\n * Checks to see if the required APIs exist.\n */\nfunction isWindowControllerSupported(): boolean {\n  return (\n    'indexedDB' in window &&\n    indexedDB !== null &&\n    navigator.cookieEnabled &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks to see if the required APIs exist within SW Context.\n */\nfunction isSWControllerSupported(): boolean {\n  return (\n    'indexedDB' in self &&\n    indexedDB !== null &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n  // eslint-disable-next-line camelcase\n  fcm_message_id: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDb, openDb } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (indexedDB as {\n      databases(): Promise<Array<{ name: string; version: number }>>;\n    }).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDb(OLD_DB_NAME, OLD_DB_VERSION, async db => {\n    if (db.oldVersion < 2) {\n      // Database too old, skip migration.\n      return;\n    }\n\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n      // Database did not exist. Nothing to do.\n      return;\n    }\n\n    const objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\n    const value = await objectStore.index('fcmSenderId').get(senderId);\n    await objectStore.clear();\n\n    if (!value) {\n      // No entry in the database, nothing to migrate.\n      return;\n    }\n\n    if (db.oldVersion === 2) {\n      const oldDetails = value as V2TokenDetails;\n\n      if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n        return;\n      }\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime ?? Date.now(),\n        subscriptionOptions: {\n          auth: oldDetails.auth,\n          p256dh: oldDetails.p256dh,\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey:\n            typeof oldDetails.vapidKey === 'string'\n              ? oldDetails.vapidKey\n              : arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 3) {\n      const oldDetails = value as V3TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 4) {\n      const oldDetails = value as V4TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDb(OLD_DB_NAME);\n  await deleteDb('fcm_vapid_details_db');\n  await deleteDb('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from '../helpers/idb-manager';\nimport { requestDeleteToken, requestGetToken, requestUpdateToken } from './api';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\n/** UpdateRegistration will be called once every week. */\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<string> {\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  // If a PushSubscription exists it's returned, otherwise a new subscription is generated and\n  // returned.\n  const pushSubscription = await getPushSubscription(swRegistration, vapidKey);\n  const tokenDetails = await dbGet(firebaseDependencies);\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey,\n    swScope: swRegistration.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(firebaseDependencies, tokenDetails.token);\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(firebaseDependencies, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(\n      {\n        token: tokenDetails.token,\n        createTime: Date.now(),\n        subscriptionOptions\n      },\n      firebaseDependencies,\n      swRegistration\n    );\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration\n): Promise<boolean> {\n  const tokenDetails = await dbGet(firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(firebaseDependencies, tokenDetails.token);\n    await dbRemove(firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription = await swRegistration.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  tokenDetails: TokenDetails,\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteToken(firebaseDependencies, swRegistration);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '@firebase/messaging-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcm_message_id\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.fcmOptions) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link = messagePayloadInternal.fcmOptions!.link;\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions!.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BACKGROUND_HANDLE_EXECUTION_TIME_LIMIT_MS,\n  DEFAULT_VAPID_KEY,\n  FCM_MSG,\n  FOREGROUND_HANDLE_PREPARATION_TIME_MS,\n  TAG\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseMessaging, MessagePayload } from '@firebase/messaging-types';\nimport {\n  MessagePayloadInternal,\n  MessageType,\n  NotificationPayloadInternal\n} from '../interfaces/internal-message-payload';\nimport { NextFn, Observer, Unsubscribe } from '@firebase/util';\nimport { deleteToken, getToken } from '../core/token-management';\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { FirebaseService } from '@firebase/app-types/private';\nimport { dbGet } from '../helpers/idb-manager';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { sleep } from '../helpers/sleep';\n\n// Let TS know that this is a service worker\ndeclare const self: ServiceWorkerGlobalScope;\n\nexport type BgMessageHandler = (payload: MessagePayload) => unknown;\n\nexport class SwController implements FirebaseMessaging, FirebaseService {\n  // A boolean flag to determine wether an app is using onBackgroundMessage or\n  // setBackgroundMessageHandler. onBackgroundMessage will receive a MessagePayload regardless of if\n  // a notification is displayed. Whereas, setBackgroundMessageHandler will swallow the\n  // MessagePayload if a NotificationPayload is included.\n  private isOnBackgroundMessageUsed: boolean | null = null;\n  private vapidKey: string | null = null;\n  private bgMessageHandler:\n    | null\n    | BgMessageHandler\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload> = null;\n\n  constructor(\n    private readonly firebaseDependencies: FirebaseInternalDependencies\n  ) {\n    self.addEventListener('push', e => {\n      e.waitUntil(this.onPush(e));\n    });\n    self.addEventListener('pushsubscriptionchange', e => {\n      e.waitUntil(this.onSubChange(e));\n    });\n    self.addEventListener('notificationclick', e => {\n      e.waitUntil(this.onNotificationClick(e));\n    });\n  }\n\n  get app(): FirebaseApp {\n    return this.firebaseDependencies.app;\n  }\n\n  /**\n   * @deprecated. Use onBackgroundMessage(nextOrObserver: NextFn<object> | Observer<object>):\n   * Unsubscribe instead.\n   *\n   * Calling setBackgroundMessageHandler will opt in to some specific behaviors.\n   *\n   * 1.) If a notification doesn't need to be shown due to a window already being visible, then push\n   * messages will be sent to the page. 2.) If a notification needs to be shown, and the message\n   * contains no notification data this method will be called and the promise it returns will be\n   * passed to event.waitUntil. If you do not set this callback then all push messages will let and\n   * the developer can handle them in a their own 'push' event callback\n   *\n   * @param callback The callback to be called when a push message is received and a notification\n   * must be shown. The callback will be given the data from the push message.\n   */\n  setBackgroundMessageHandler(callback: BgMessageHandler): void {\n    this.isOnBackgroundMessageUsed = false;\n\n    if (!callback || typeof callback !== 'function') {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_BG_HANDLER);\n    }\n\n    this.bgMessageHandler = callback;\n  }\n\n  onBackgroundMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe {\n    this.isOnBackgroundMessageUsed = true;\n    this.bgMessageHandler = nextOrObserver;\n\n    return () => {\n      this.bgMessageHandler = null;\n    };\n  }\n\n  // TODO: Remove getToken from SW Controller. Calling this from an old SW can cause all kinds of\n  // trouble.\n  async getToken(): Promise<string> {\n    if (!this.vapidKey) {\n      // Call getToken using the current VAPID key if there already is a token. This is needed\n      // because usePublicVapidKey was not available in SW. It will be removed when vapidKey becomes\n      // a parameter of getToken, or when getToken is removed from SW.\n      const tokenDetails = await dbGet(this.firebaseDependencies);\n      this.vapidKey =\n        tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY;\n    }\n\n    return getToken(\n      this.firebaseDependencies,\n      self.registration,\n      this.vapidKey\n    );\n  }\n\n  // TODO: Remove deleteToken from SW Controller. Calling this from an old SW can cause all kinds of\n  // trouble.\n  deleteToken(): Promise<boolean> {\n    return deleteToken(this.firebaseDependencies, self.registration);\n  }\n\n  requestPermission(): Promise<void> {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  // TODO: Remove this together with getToken from SW Controller.\n  usePublicVapidKey(vapidKey: string): void {\n    if (this.vapidKey !== null) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN);\n    }\n\n    if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_VAPID_KEY);\n    }\n\n    this.vapidKey = vapidKey;\n  }\n\n  useServiceWorker(): void {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  onMessage(): Unsubscribe {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  onTokenRefresh(): Unsubscribe {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  /**\n   * A handler for push events that shows notifications based on the content of the payload.\n   *\n   * The payload must be a JSON-encoded Object with a `notification` key. The value of the\n   * `notification` property will be used as the NotificationOptions object passed to\n   * showNotification. Additionally, the `title` property of the notification object will be used as\n   * the title.\n   *\n   * If there is no notification data in the payload then no notification will be shown.\n   */\n  async onPush(event: PushEvent): Promise<void> {\n    const internalPayload = getMessagePayloadInternal(event);\n    if (!internalPayload) {\n      console.debug(\n        TAG +\n          'failed to get parsed MessagePayload from the PushEvent. Skip handling the push.'\n      );\n      return;\n    }\n\n    // foreground handling: eventually passed to onMessage hook\n    const clientList = await getClientList();\n    if (hasVisibleClients(clientList)) {\n      return sendMessagePayloadInternalToWindows(clientList, internalPayload);\n    }\n\n    // background handling: display and pass to onBackgroundMessage hook\n    let isNotificationShown = false;\n    if (!!internalPayload.notification) {\n      await showNotification(wrapInternalPayload(internalPayload));\n      isNotificationShown = true;\n    }\n\n    // MessagePayload is only passed to `onBackgroundMessage`. Skip passing MessagePayload for\n    // the legacy `setBackgroundMessageHandler` to preserve the SDK behaviors.\n    if (\n      isNotificationShown === true &&\n      this.isOnBackgroundMessageUsed === false\n    ) {\n      return;\n    }\n\n    if (!!this.bgMessageHandler) {\n      const payload = externalizePayload(internalPayload);\n\n      if (typeof this.bgMessageHandler === 'function') {\n        this.bgMessageHandler(payload);\n      } else {\n        this.bgMessageHandler.next(payload);\n      }\n    }\n\n    // wait briefly to allow onBackgroundMessage to complete\n    await sleep(BACKGROUND_HANDLE_EXECUTION_TIME_LIMIT_MS);\n  }\n\n  async onSubChange(event: PushSubscriptionChangeEvent): Promise<void> {\n    const { newSubscription } = event;\n    if (!newSubscription) {\n      // Subscription revoked, delete token\n      await deleteToken(this.firebaseDependencies, self.registration);\n      return;\n    }\n\n    const tokenDetails = await dbGet(this.firebaseDependencies);\n    await deleteToken(this.firebaseDependencies, self.registration);\n    await getToken(\n      this.firebaseDependencies,\n      self.registration,\n      tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY\n    );\n  }\n\n  async onNotificationClick(event: NotificationEvent): Promise<void> {\n    const internalPayload: MessagePayloadInternal =\n      event.notification?.data?.[FCM_MSG];\n\n    if (!internalPayload) {\n      return;\n    } else if (event.action) {\n      // User clicked on an action button. This will allow developers to act on action button clicks\n      // by using a custom onNotificationClick listener that they define.\n      return;\n    }\n\n    // Prevent other listeners from receiving the event\n    event.stopImmediatePropagation();\n    event.notification.close();\n\n    // Note clicking on a notification with no link set will focus the Chrome's current tab.\n    const link = getLink(internalPayload);\n    if (!link) {\n      return;\n    }\n\n    // FM should only open/focus links from app's origin.\n    const url = new URL(link, self.location.href);\n    const originUrl = new URL(self.location.origin);\n\n    if (url.host !== originUrl.host) {\n      return;\n    }\n\n    let client = await getWindowClient(url);\n\n    if (!client) {\n      client = await self.clients.openWindow(link);\n\n      // Wait three seconds for the client to initialize and set up the message handler so that it\n      // can receive the message.\n      await sleep(FOREGROUND_HANDLE_PREPARATION_TIME_MS);\n    } else {\n      client = await client.focus();\n    }\n\n    if (!client) {\n      // Window Client will not be returned if it's for a third party origin.\n      return;\n    }\n\n    internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\n    internalPayload.isFirebaseMessaging = true;\n    return client.postMessage(internalPayload);\n  }\n}\n\nfunction wrapInternalPayload(\n  internalPayload: MessagePayloadInternal\n): NotificationPayloadInternal {\n  const wrappedInternalPayload: NotificationPayloadInternal = {\n    ...((internalPayload.notification as unknown) as NotificationPayloadInternal)\n  };\n\n  // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\n  // notification vs a notification from somewhere else (i.e. normal web push or developer generated\n  // notification).\n  wrappedInternalPayload.data = {\n    [FCM_MSG]: internalPayload\n  };\n\n  return wrappedInternalPayload;\n}\n\nfunction getMessagePayloadInternal({\n  data\n}: PushEvent): MessagePayloadInternal | null {\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n\n/**\n * @param url The URL to look for when focusing a client.\n * @return Returns an existing window client or a newly opened WindowClient.\n */\nasync function getWindowClient(url: URL): Promise<WindowClient | null> {\n  const clientList = await getClientList();\n\n  for (const client of clientList) {\n    const clientUrl = new URL(client.url, self.location.href);\n\n    if (url.host === clientUrl.host) {\n      return client;\n    }\n  }\n\n  return null;\n}\n\n/**\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\n * otherwise false.\n */\nfunction hasVisibleClients(clientList: WindowClient[]): boolean {\n  return clientList.some(\n    client =>\n      client.visibilityState === 'visible' &&\n      // Ignore chrome-extension clients as that matches the background pages of extensions, which\n      // are always considered visible for some reason.\n      !client.url.startsWith('chrome-extension://')\n  );\n}\n\nfunction sendMessagePayloadInternalToWindows(\n  clientList: WindowClient[],\n  internalPayload: MessagePayloadInternal\n): void {\n  internalPayload.isFirebaseMessaging = true;\n  internalPayload.messageType = MessageType.PUSH_RECEIVED;\n\n  for (const client of clientList) {\n    client.postMessage(internalPayload);\n  }\n}\n\nfunction getClientList(): Promise<WindowClient[]> {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true\n    // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n  }) as Promise<WindowClient[]>;\n}\n\nfunction showNotification(\n  notificationPayloadInternal: NotificationPayloadInternal\n): Promise<void> {\n  // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n  const { actions } = notificationPayloadInternal;\n  const { maxActions } = Notification;\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\n      `This browser only supports ${maxActions} actions. The remaining actions will not be displayed.`\n    );\n  }\n\n  return self.registration.showNotification(\n    /* title= */ notificationPayloadInternal.title ?? '',\n    notificationPayloadInternal\n  );\n}\n\nfunction getLink(payload: MessagePayloadInternal): string | null {\n  // eslint-disable-next-line camelcase\n  const link = payload.fcmOptions?.link ?? payload.notification?.click_action;\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME,\n  DEFAULT_SW_PATH,\n  DEFAULT_SW_SCOPE,\n  DEFAULT_VAPID_KEY\n} from '../util/constants';\nimport {\n  ConsoleMessageData,\n  MessagePayloadInternal,\n  MessageType\n} from '../interfaces/internal-message-payload';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { NextFn, Observer, Unsubscribe } from '@firebase/util';\nimport { deleteToken, getToken } from '../core/token-management';\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport { FirebaseService } from '@firebase/app-types/private';\nimport { isConsoleMessage } from '../helpers/is-console-message';\n\nexport class WindowController implements FirebaseMessaging, FirebaseService {\n  private vapidKey: string | null = null;\n  private swRegistration?: ServiceWorkerRegistration;\n  private onMessageCallback: NextFn<object> | Observer<object> | null = null;\n\n  constructor(\n    private readonly firebaseDependencies: FirebaseInternalDependencies\n  ) {\n    navigator.serviceWorker.addEventListener('message', e =>\n      this.messageEventListener(e)\n    );\n  }\n\n  get app(): FirebaseApp {\n    return this.firebaseDependencies.app;\n  }\n\n  private async messageEventListener(event: MessageEvent): Promise<void> {\n    const internalPayload = event.data as MessagePayloadInternal;\n\n    if (!internalPayload.isFirebaseMessaging) {\n      return;\n    }\n\n    // onMessageCallback is either a function or observer/subscriber.\n    // TODO: in the modularization release, have onMessage handle type MessagePayload as supposed to\n    // the legacy payload where some fields are in snake cases.\n    if (\n      this.onMessageCallback &&\n      internalPayload.messageType === MessageType.PUSH_RECEIVED\n    ) {\n      if (typeof this.onMessageCallback === 'function') {\n        this.onMessageCallback(\n          stripInternalFields(Object.assign({}, internalPayload))\n        );\n      } else {\n        this.onMessageCallback.next(Object.assign({}, internalPayload));\n      }\n    }\n\n    const dataPayload = internalPayload.data;\n\n    if (\n      isConsoleMessage(dataPayload) &&\n      dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n    ) {\n      await this.logEvent(internalPayload.messageType!, dataPayload);\n    }\n  }\n\n  getVapidKey(): string | null {\n    return this.vapidKey;\n  }\n\n  getSwReg(): ServiceWorkerRegistration | undefined {\n    return this.swRegistration;\n  }\n\n  async getToken(options?: {\n    vapidKey?: string;\n    serviceWorkerRegistration?: ServiceWorkerRegistration;\n  }): Promise<string> {\n    if (Notification.permission === 'default') {\n      await Notification.requestPermission();\n    }\n\n    if (Notification.permission !== 'granted') {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n    }\n\n    await this.updateVapidKey(options?.vapidKey);\n    await this.updateSwReg(options?.serviceWorkerRegistration);\n\n    return getToken(\n      this.firebaseDependencies,\n      this.swRegistration!,\n      this.vapidKey!\n    );\n  }\n\n  async updateVapidKey(vapidKey?: string | undefined): Promise<void> {\n    if (!!vapidKey) {\n      this.vapidKey = vapidKey;\n    } else if (!this.vapidKey) {\n      this.vapidKey = DEFAULT_VAPID_KEY;\n    }\n  }\n\n  async updateSwReg(\n    swRegistration?: ServiceWorkerRegistration | undefined\n  ): Promise<void> {\n    if (!swRegistration && !this.swRegistration) {\n      await this.registerDefaultSw();\n    }\n\n    if (!swRegistration && !!this.swRegistration) {\n      return;\n    }\n\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n    }\n\n    this.swRegistration = swRegistration;\n  }\n\n  private async registerDefaultSw(): Promise<void> {\n    try {\n      this.swRegistration = await navigator.serviceWorker.register(\n        DEFAULT_SW_PATH,\n        {\n          scope: DEFAULT_SW_SCOPE\n        }\n      );\n\n      // The timing when browser updates sw when sw has an update is unreliable by my experiment. It\n      // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n      // is stuck with the old version. For example,\n      // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n      // sw if there was an update.\n      this.swRegistration.update().catch(() => {\n        /* it is non blocking and we don't care if it failed */\n      });\n    } catch (e) {\n      throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n        browserErrorMessage: e.message\n      });\n    }\n  }\n\n  async deleteToken(): Promise<boolean> {\n    if (!this.swRegistration) {\n      await this.registerDefaultSw();\n    }\n\n    return deleteToken(this.firebaseDependencies, this.swRegistration!);\n  }\n\n  /**\n   * Request permission if it is not currently granted.\n   *\n   * @return Resolves if the permission was granted, rejects otherwise.\n   *\n   * @deprecated Use Notification.requestPermission() instead.\n   * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\n   */\n  async requestPermission(): Promise<void> {\n    if (Notification.permission === 'granted') {\n      return;\n    }\n\n    const permissionResult = await Notification.requestPermission();\n    if (permissionResult === 'granted') {\n      return;\n    } else if (permissionResult === 'denied') {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n    } else {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_DEFAULT);\n    }\n  }\n\n  /**\n   * @deprecated. Use getToken(options?: {vapidKey?: string; serviceWorkerRegistration?:\n   * ServiceWorkerRegistration;}): Promise<string> instead.\n   */\n  usePublicVapidKey(vapidKey: string): void {\n    if (this.vapidKey !== null) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN);\n    }\n\n    if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_VAPID_KEY);\n    }\n\n    this.vapidKey = vapidKey;\n  }\n\n  /**\n   * @deprecated. Use getToken(options?: {vapidKey?: string; serviceWorkerRegistration?:\n   * ServiceWorkerRegistration;}): Promise<string> instead.\n   */\n  useServiceWorker(swRegistration: ServiceWorkerRegistration): void {\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n    }\n\n    if (this.swRegistration) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_SW_AFTER_GET_TOKEN);\n    }\n\n    this.swRegistration = swRegistration;\n  }\n\n  /**\n   * @param nextOrObserver An observer object or a function triggered on message.\n   *\n   * @return The unsubscribe function for the observer.\n   */\n  onMessage(nextOrObserver: NextFn<object> | Observer<object>): Unsubscribe {\n    this.onMessageCallback = nextOrObserver;\n\n    return () => {\n      this.onMessageCallback = null;\n    };\n  }\n\n  setBackgroundMessageHandler(): void {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  onBackgroundMessage(): Unsubscribe {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  /**\n   * @deprecated No-op. It was initially designed with token rotation requests from server in mind.\n   * However, the plan to implement such feature was abandoned.\n   */\n  onTokenRefresh(): Unsubscribe {\n    return () => {};\n  }\n\n  private async logEvent(\n    messageType: MessageType,\n    data: ConsoleMessageData\n  ): Promise<void> {\n    const eventType = getEventType(messageType);\n    const analytics = await this.firebaseDependencies.analyticsProvider.get();\n    analytics.logEvent(eventType, {\n      /* eslint-disable camelcase */\n      message_id: data[CONSOLE_CAMPAIGN_ID],\n      message_name: data[CONSOLE_CAMPAIGN_NAME],\n      message_time: data[CONSOLE_CAMPAIGN_TIME],\n      message_device_time: Math.floor(Date.now() / 1000)\n      /* eslint-enable camelcase */\n    });\n  }\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n\nfunction stripInternalFields(\n  internalPayload: MessagePayloadInternal\n): MessagePayloadInternal {\n  delete internalPayload.messageType;\n  delete internalPayload.isFirebaseMessaging;\n  return internalPayload;\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.idb = {}));\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"sourceRoot":"webpack:///"}