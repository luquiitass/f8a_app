{"version":3,"sources":["webpack:///src/app/pages/game/game-form/game-form.page.html","webpack:///src/app/pages/game/game-form/game-form-routing.module.ts","webpack:///src/app/pages/game/game-form/game-form.module.ts","webpack:///src/app/pages/game/game-form/game-form.page.scss","webpack:///src/app/pages/game/game-form/game-form.page.ts","webpack:///src/app/services/photo.service.ts"],"names":["routes","path","component","GameFormPageRoutingModule","imports","forChild","exports","GameFormPageModule","declarations","GameFormPage","request","dialogService","viewCtrl","photoService","navParams","modalController","teams","numbGoals","customDayShortNames","status","myDateFilter","d","day","getDay","serviceGame","serviceTeam","id","get","toDate","Date","console","log","api_function","subscribe","data","i","push","initObject","game","l_team","v_team","l_goals","v_goals","time","date","location","description","api_find","api_update","showToast","dismiss","api_create","create","modal","onDidDismiss","then","team","present","selector","template","Camera","Filesystem","Storage","PhotoService","photos","convertBlobToBase64","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","serviceImage","url","thumb","pathDefault","photo","Photo","image","getPhoto","resultType","Uri","source","quality","capturedPhoto","readAsBase64","base64Data","unshift","webPath","cameraPhoto","fetch","response","isLoadPthoto","providedIn","filepath","webviewPath"],"mappings":"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","file":"pages-game-game-form-game-form-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Partido</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"dark\\\" (click)=\\\"close()\\\">\\n          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n  </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <form (ngSubmit)=\\\"submit()\\\"  (keyup)=\\\"serviceGame.errorsForm.clear()\\\" >\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Equipo local</ion-label>\\n      <ion-select [(ngModel)]=\\\"game.l_team\\\" name=\\\"l_team\\\">\\n        <ion-select-option [value]=\\\"l_team.id\\\" *ngFor=\\\"let l_team of teams\\\">{{ l_team.name }}</ion-select-option>\\n      </ion-select>\\n      <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ serviceGame.errorsForm.get('l_team') }}</div>\\n\\n    </ion-item>\\n\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Equipo Vicitante</ion-label>\\n      <ion-select [(ngModel)]=\\\"game.v_team\\\" name=\\\"v_team\\\">\\n        <ion-select-option [value]=\\\"v_team.id\\\" *ngFor=\\\"let v_team of teams\\\">{{ v_team.name }}</ion-select-option>\\n      </ion-select>\\n      <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ serviceGame.errorsForm.get('v_team') }}</div>\\n    </ion-item>\\n\\n    <div *ngIf=\\\"game.other_team\\\">\\n      <ion-item >\\n        <ion-label position=\\\"floating\\\" >Otro Equipo</ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"game.other_team\\\" name=\\\"other_team\\\"></ion-input>\\n      </ion-item>\\n      <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ serviceGame.errorsForm.get('other_team') }}</div>\\n  \\n      <ion-button size=\\\"sm\\\" (click)=\\\"newTeam()\\\">Nuevo equipo</ion-button>\\n    </div>\\n  \\n    <br>\\n\\n    <div class=\\\"goals\\\">\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Goles L</ion-label>\\n        <ion-select [(ngModel)]=\\\"game.l_goals\\\" name=\\\"l_goals\\\">\\n          <ion-select-option [value]=\\\"i\\\" *ngFor=\\\"let i of numbGoals\\\">{{ i }}</ion-select-option>\\n        </ion-select>\\n        <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ serviceGame.errorsForm.get('l_goals') }}</div>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Goles V</ion-label>\\n        <ion-select [(ngModel)]=\\\"game.v_goals\\\" name=\\\"v_goals\\\" >\\n          <ion-select-option [value]=\\\"e\\\" *ngFor=\\\"let e of numbGoals\\\">{{ e }}</ion-select-option>\\n        </ion-select>\\n        <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ serviceGame.errorsForm.get('v_goals') }}</div>\\n      </ion-item>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label>HH:mm</ion-label>\\n      <ion-datetime \\n        [(ngModel)]=\\\"game.time\\\" \\n        displayFormat=\\\"HH:mm \\\"  \\n        name=\\\"time\\\">\\n      </ion-datetime>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" >Lugar</ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"game.location\\\" name=\\\"location\\\"></ion-input>\\n    </ion-item>\\n    <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ serviceGame.errorsForm.get('location') }}</div>\\n\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" >Comentario</ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"game.description\\\" name=\\\"description\\\"></ion-input>\\n    </ion-item>\\n    <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ serviceGame.errorsForm.get('description') }}</div>\\n\\n    <ion-item>\\n      <ion-label>Fecha</ion-label>\\n      <ion-datetime \\n        name=\\\"date\\\"\\n        [(ngModel)]=\\\"game.date\\\"\\n        displayFormat=\\\"YYYY-MM-DD\\\"\\n        ></ion-datetime>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Estado</ion-label>\\n      <ion-select [(ngModel)]=\\\"game.status\\\" name=\\\"status\\\">\\n        <ion-select-option [value]=\\\"i\\\" *ngFor=\\\"let i of status\\\">{{ i }}</ion-select-option>\\n      </ion-select>\\n      <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ serviceGame.errorsForm.get('status') }}</div>\\n    </ion-item>\\n   \\n    <ion-button type=\\\"submit\\\"  expand=\\\"block\\\">Guardar</ion-button>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GameFormPage } from './game-form.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GameFormPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GameFormPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GameFormPageRoutingModule } from './game-form-routing.module';\n\nimport { GameFormPage } from './game-form.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GameFormPageRoutingModule\n  ],\n  declarations: [GameFormPage]\n})\nexport class GameFormPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2dhbWUvZ2FtZS1mb3JtL2dhbWUtZm9ybS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\nimport {RequestService} from '../../../api/request.service';\nimport { ModalController, NavParams } from '@ionic/angular';\nimport { PhotoService } from 'src/app/services/photo.service';\nimport { Model } from 'src/app/api/models/model';\nimport { DialogService } from 'src/app/api/util/dialog.service';\nimport { FormPage } from '../../team/form/form.page';\n\n@Component({\n  selector: 'app-game-form',\n  templateUrl: './game-form.page.html',\n  styleUrls: ['./game-form.page.scss'],\n})\nexport class GameFormPage implements OnInit {\n\n  public teams = [];\n  public game : any;\n  public numbGoals = []\n  public id : any;\n  public customDayShortNames = ['s\\u00f8n'];\n  public status = ['Pendiente','Suspendido','Jugado','Created'];\n  public toDate : any;\n\n  public serviceGame : Model;\n  public serviceTeam : Model;\n\n  constructor(\n    public request : RequestService,\n    public dialogService : DialogService,\n    public viewCtrl: ModalController,\n    public photoService : PhotoService,\n    navParams: NavParams,\n    public modalController : ModalController\n  ) {\n    this.serviceGame = new Model('Game',request);\n    this.serviceTeam =  new Model('Team',request);\n    //this.serviceTeam.setModel('Team');\n\n    this.id = navParams.get('id') ;\n    this.toDate = navParams.get('date') ?? new Date();\n    console.log('date',this.toDate)\n    \n   }\n\n  ngOnInit() {\n    this.serviceTeam.api_function('getAllTeamsSelect').subscribe(data => {\n      if(data['data']){\n        this.teams = data['data']\n        console.log('teams -> ' , this.teams)\n        //this.serviceGame.setModel('Game');\n      }\n    });\n\n\n    for (var i = 0; i <= 30; i++) {\n      this.numbGoals.push(i);\n    }\n    this.initObject();\n  }\n\n  initObject(){\n    this.game = { \n      l_team :'',\n      v_team : '',\n      l_goals : 0,\n      v_goals : 0,\n      time : '15:00',\n      date : this.toDate,\n      location : '',\n      description : '',\n      status : 'Pendiente'\n    };\n\n    if(this.id){\n      this.serviceGame.api_find(this.id).subscribe(data => {\n        if(data['status'] == 'success'){\n          this.game = data['Game'];\n        }\n      })\n    }\n  }\n\n\n  submit(){\n    if(this.game.id){\n      this.serviceGame.api_update(this.game).subscribe(data => {\n        if(data['status'] == 'success'){\n          this.dialogService.showToast( data['msjSuccess'] ?? 'Registrado' );\n          console.log(data);\n          this.dismiss(data['Game'])\n        }\n      });\n\n    }else{\n      this.serviceGame.api_create(this.game).subscribe(data => {\n        if(data['status'] == 'success'){\n          this.dialogService.showToast( data['msjSuccess'] ?? 'Registrado' );\n          this.dismiss(data['Game'])\n        }\n    })\n    }\n  }\n\n  dismiss(game) {\n    this.viewCtrl.dismiss(\n      {\n        game : game,\n      }\n    );\n  }\n\n  close(){\n    this.viewCtrl.dismiss();\n  }\n\n  myDateFilter = (d: Date): boolean => {\n    const day = d.getDay();\n    // Prevent Saturday and Sunday from being selected.\n    return day == 6 ;\n  }\n\n  print(){\n    console.log(this.game);\n  }\n\n  async newTeam(){\n    \n    const modal = await this.modalController.create({\n      component: FormPage ,\n    });\n\n    modal.onDidDismiss().then(data=>{\n      if(data.data['team']){\n        const team = data.data['team'];\n        this.teams.push(team);\n      }\n    })\n\n    return await modal.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Plugins, CameraResultType, Capacitor, FilesystemDirectory, \n  CameraPhoto, CameraSource } from '@capacitor/core';\nimport { Model } from '../api/models/model';\nimport { RequestService } from '../api/request.service';\n\nconst { Camera, Filesystem, Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n\n  public photos: Photo[] = [];\n\n  public photo : any;\n  public url :string ;\n  public thumb : boolean ;\n  public serviceImage : Model;\n  public image : any ;\n  public path : string;\n\n  constructor(request : RequestService) { \n      this.serviceImage = new Model('Image',request);\n  }\n\n  public init(url : string, thumb : boolean = true,pathDefault = 'assets/images/pngwing.png'){\n      this.url = url ?? '/images/';\n      this.thumb = thumb ?? false ;\n      this.path = pathDefault;\n      this.photo = new Photo(pathDefault);\n  }\n\n  setImage(image){\n    this.image = image;\n    this.photo.image = image;\n  }\n\n  public async addNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri, \n      source: CameraSource.Camera, \n      quality: 100 \n    });\n\n\n\n    const base64Data = await this.readAsBase64(capturedPhoto);\n\n  \n    this.photos.unshift(new Photo(null,capturedPhoto.webPath, base64Data, this.url, this.thumb));\n  }\n\n\n  public async addOneNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri, \n      source: CameraSource.Camera, \n      quality: 100 \n    });\n  \n    const base64Data = await this.readAsBase64(capturedPhoto);\n\n    this.photo = new Photo(capturedPhoto.webPath,base64Data, base64Data, this.url, this.thumb, this.image);\n\n  \n  }\n\n  public isLoadPthoto() {\n    return  this.photo.data? true : false;\n  }\n\n  private async readAsBase64(cameraPhoto: CameraPhoto) {\n    // Fetch the photo, read as a blob, then convert to base64 format\n    const response = await fetch(cameraPhoto.webPath!);\n    const blob = await response.blob();\n  \n    return await this.convertBlobToBase64(blob) as string;  \n  }\n  \n  convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader;\n    reader.onerror = reject;\n    reader.onload = () => {\n        resolve(reader.result);\n    };\n    reader.readAsDataURL(blob);\n  });\n\n\n  uploadImage(){\n    if(this.isLoadPthoto()){\n      if(this.photo.id){\n        return this.serviceImage.api_update(this.photo);\n      }else{\n        return this.serviceImage.api_create(this.photo);\n      }\n    }\n  }\n}\n\nexport class Photo {\n  id? : string;\n  filepath: string;\n  webviewPath: string;\n  data :string;\n  url : string;\n  thumb : boolean;\n  image ? :{}\n\n  constructor(  filepath : string = \"assets/images/pngwing.png\",webviewPath : string = null,data :string = '',url : string = '',thumb : boolean = false , image : any = null){\n    this.id = image ? image.id : '';\n    this.webviewPath = webviewPath;\n    this.filepath = filepath;\n    this.data = data;\n    this.url = url;\n    this.thumb = thumb;\n    this.image = image\n  }\n\n  getPath(){\n    if(this.webviewPath){\n      return this.webviewPath;\n    }\n    else if(this.image && this.image['urlComplete'] ){\n      return this.image['urlComplete'];\n    }else{\n      return this.filepath;\n    }\n  }\n}\n"]}