{"version":3,"sources":["webpack:///src/app/pages/event/event-form/event-form.page.html","webpack:///src/app/pages/payment/alert-create-team/alert-create-team.page.html","webpack:///src/app/pages/event/event-form/event-form.page.scss","webpack:///src/app/pages/event/event-form/event-form.page.ts","webpack:///src/app/pages/payment/alert-create-team/alert-create-team.page.scss","webpack:///src/app/pages/payment/alert-create-team/alert-create-team.page.ts","webpack:///src/app/services/payment-team.service.ts","webpack:///src/app/services/util-array.service.ts"],"names":["EventFormPage","navParams","requestService","dialogService","viewCtrl","utilArray","paymentTeamService","location","twoTeam","events","myDateFilter","d","day","getDay","gameModel","eventModel","game_id","get","id","team_admin","game","init","loadEvent","event","type_event_id","player_id","team_id","time","api_function","subscribe","data","dataEvent","types_events","console","log","team","teams","find","t","players","isValid","showToast","message","teamSelect","getTeamType","setTeam","noPaid","close","showAlert","api_update","dismiss","api_create","Error","type_team","eventSelect","findList","name","total_golas","total_goals_reg","filter","e","type_event","length","v_team","selector","template","AlertCreateTeamPage","router","navigateByUrl","PaymentTeamService","modalController","active","paid","create","component","componentProps","modal","onDidDismiss","then","present","providedIn","UtilArrayService","list","item","push","unshift","index","findIndexList","splice","findIndex","objectResult","object","attibutes","att","hasOwnProperty"],"mappings":"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","file":"default~pages-balance-sheet-months-months-module~pages-balance-sheet-payments-balance-payments-balan~5aacf81f-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Evento</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"dark\\\" (click)=\\\"close()\\\">\\n          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n  </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <form (ngSubmit)=\\\"submit()\\\"  (keyup)=\\\"eventModel.errorsForm.clear()\\\" *ngIf=\\\"dataEvent\\\">\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Tipo de Evento</ion-label>\\n      <ion-select [(ngModel)]=\\\"event.type_event_id\\\" name=\\\"type_event_id\\\">\\n        <ion-select-option [value]=\\\"type_event.id\\\" *ngFor=\\\"let type_event of dataEvent.types_events\\\">{{ type_event.name }}</ion-select-option>\\n      </ion-select>\\n      <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ eventModel.errorsForm.get('type_event_id') }}</div>\\n    </ion-item>\\n    \\n    <ion-item *ngIf=\\\"!team_admin || twoTeam\\\">\\n      <ion-label position=\\\"floating\\\">Equipo</ion-label>\\n      <ion-select [(ngModel)]=\\\"event.team_id\\\" name=\\\"team_id\\\">\\n        <ion-select-option [value]=\\\"team.id\\\" *ngFor=\\\"let team of dataEvent.teams\\\">{{ team.name }}</ion-select-option>\\n      </ion-select>\\n      <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ eventModel.errorsForm.get('team_id') }}</div>\\n    </ion-item>\\n \\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Jugador</ion-label> \\n       <ion-select [(ngModel)]=\\\"event.player_id\\\" name=\\\"player_id\\\">\\n        <ion-select-option [value]=\\\"player.id\\\" *ngFor=\\\"let player of getPlayers()\\\">{{ player.name }}</ion-select-option>\\n      </ion-select>\\n      <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ eventModel.errorsForm.get('player_id') }}</div>\\n    </ion-item>\\n\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" >Tiempo</ion-label>\\n      <ion-input type=\\\"number\\\" [(ngModel)]=\\\"event.time\\\" name=\\\"time\\\"></ion-input>\\n    </ion-item>\\n    <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ eventModel.errorsForm.get('time') }}</div> \\n\\n    <ion-button type=\\\"submit\\\"  expand=\\\"block\\\">Guardar</ion-button>\\n  </form>\\n</ion-content>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Pago pendiente</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"dark\\\" (click)=\\\"close()\\\">\\n          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n  </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card>\\n    <ion-card-content>\\n\\n\\n      <ion-text class=\\\"text\\\">\\n        Para que los administradores de este equipo puedan modificar los datos (Fotos,nombre, jugadores, redes, sucesos de partidos , etc) es necesario abonar $500 mensualmente.\\n      </ion-text>\\n      <br>\\n      <div class=\\\"ion-margin-top\\\">\\n        <ion-button (click)=\\\"goPayment()\\\" class=\\\"ion-float-right\\\" > Realizar el pago</ion-button>\\n      </div>\\n\\n    </ion-card-content>\\n  </ion-card>\\n\\n\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V2ZW50L2V2ZW50LWZvcm0vZXZlbnQtZm9ybS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Model } from 'src/app/api/models/model';\nimport { IonItem, NavParams, ModalController } from '@ionic/angular';\nimport { RequestService } from 'src/app/api/request.service';\nimport { DialogService } from 'src/app/api/util/dialog.service';\nimport { ModalForm } from 'src/app/models/modal-form';\nimport { ModalFormInterface } from 'src/app/interfaces/modal-form-interface';\nimport { UtilArrayService } from 'src/app/services/util-array.service';\nimport { PaymentTeamService } from 'src/app/services/payment-team.service';\nimport { PlatformLocation } from '@angular/common';\n\n@Component({\n  selector: 'app-event-form',\n  templateUrl: './event-form.page.html',\n  styleUrls: ['./event-form.page.scss'],\n})\nexport class EventFormPage extends ModalForm implements OnInit , ModalFormInterface {\n\n\n  gameModel : Model;\n  eventModel : Model;\n  game_id : any ;\n  dataEvent : any;\n  event : any;\n  id : any;\n  types_events : [];\n  team_admin : any;\n  twoTeam = false;\n\n  //valid goals\n  events = [];\n  game : any;\n\n  constructor(\n    public navParams : NavParams,\n    public requestService : RequestService,\n    public dialogService : DialogService,\n    public viewCtrl: ModalController,\n    public utilArray : UtilArrayService,\n    public paymentTeamService : PaymentTeamService,\n    location: PlatformLocation\n\n\n  ) {\n      super(location,viewCtrl);\n      this.gameModel = new Model('Game',requestService)\n      this.eventModel = new Model('Event',requestService)\n      this.game_id = navParams.get('game_id') ;\n      this.twoTeam = navParams.get('twoTeam');\n      this.id = navParams.get('id');\n      this.team_admin = navParams.get('team_admin');\n      this.events = navParams.get('events');\n      this.game = navParams.get('game');\n      \n\n   }\n\n  \n  async initObject() {\n    await this.init();\n    this.loadEvent();\n  };\n\n\n\n  loadEvent(){\n    if(this.id){\n\n    }else{\n      this.event = {\n        game_id : this.game_id,\n        type_event_id : '',\n        player_id : '',\n        team_id : this.team_admin ? this.team_admin.id : '',\n        time : ''\n      }\n    }\n  }\n\n\n  async init(){\n    await this.eventModel.api_function('dataEventCreate',{game_id : this.game_id }).subscribe(\n      data => {\n        if(data['status'] == 'success'){\n          this.dataEvent = data['data'];\n          this.types_events = this.dataEvent['types_events'];\n        }\n        console.log('ty',this.types_events);\n        console.log(this.dataEvent);\n\n      }\n    )\n  }\n\n  getPlayers(){\n    let id = this.event.team_id; \n    \n    if(this.team_admin)\n      id = this.event.team_id;\n    \n    if(id){\n      let team = this.dataEvent.teams.find(t => t.id === id );\n      if(team)\n        return team.players;\n    }\n    return [];\n  }\n\n\n  async submit(){\n\n    try{\n      await this.isValid();\n    }catch(e){\n      console.log(e);\n      this.dialogService.showToast(e.message ,'Error' , 'danger')\n      return;\n    }\n\n\n    let teamSelect = this.game[ 'team_' + this.getTeamType() ];\n    this.paymentTeamService.setTeam(teamSelect);\n    if( this.paymentTeamService.noPaid()){\n      await this.close();\n      await this.paymentTeamService.showAlert();\n      //this.close();\n      return;\n    }\n\n\n\n    if(this.event.id){\n      this.eventModel.api_update(this.event).subscribe(data => {\n        if(data['status'] == 'success'){\n          this.dialogService.showToast( data['msjSuccess'] ?? 'Registrado' );\n          console.log(data);\n          this.dismiss(data['Event'])\n        }\n      });\n\n    }else{\n      this.eventModel.api_create(this.event).subscribe(data => {\n        if(data['status'] == 'success'){\n          this.dialogService.showToast( data['msjSuccess'] ?? 'Registrado' );\n          this.dismiss(data['Event'])\n        }\n    })\n    }\n  }\n\n  dismiss(event) {\n    this.viewCtrl.dismiss(\n      {\n        event : event,\n      }\n    );\n  }\n\n  async close(){\n    await this.viewCtrl.dismiss();\n  }\n\n  myDateFilter = (d: Date): boolean => {\n    const day = d.getDay();\n    // Prevent Saturday and Sunday from being selected.\n    return day == 6 ;\n  }\n\n  print(){\n    console.log(this.event);\n  }\n\n  async isValid(){\n\n    if(!this.event.team_id){\n      throw new Error('Seleccione un equipo');\n    }\n\n    if(!this.event.type_event_id){\n      throw new Error('Seleccione un evento');\n    }\n\n    var type_team = this.getTeamType();\n\n    let eventSelect = this.utilArray.findList(this.types_events , this.event.type_event_id);\n\n    //Validaciones de los goles registrados\n    if(eventSelect && eventSelect.name == 'Gol'){\n\n     \n\n      let total_golas = this.game[ type_team + '_goals' ];\n\n      let total_goals_reg = this.events.filter( e => e.team_id == this.event.team_id && e.type_event.name == 'Gol').length;\n\n      if((total_goals_reg + 1) > total_golas)\n        throw new Error(   total_golas == 0 ? `El equipo seleccionado no ha convertido goles en este partido, no es posible registrar este evento.`:`No puede añadir más de ${total_golas} goles para éste equipo en éste partido.`);\n\n    }\n\n    return true\n  }\n\n  getTeamType(){\n\n    var type_team = 'l';  //Local o visitante\n\n    if(this.game.v_team == this.event.team_id){\n      type_team = 'v';\n    }\n\n    return type_team;\n  }\n\n}\n","export default \".text {\\n  font-size: x-large;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF5bWVudC9hbGVydC1jcmVhdGUtdGVhbS9hbGVydC1jcmVhdGUtdGVhbS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcGF5bWVudC9hbGVydC1jcmVhdGUtdGVhbS9hbGVydC1jcmVhdGUtdGVhbS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGV4dHtcbiAgICBmb250LXNpemU6IHgtbGFyZ2U7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalForm } from 'src/app/models/modal-form';\nimport { ModalFormInterface } from 'src/app/interfaces/modal-form-interface';\nimport { ModalController, NavParams } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { PlatformLocation } from '@angular/common';\n\n@Component({\n  selector: 'app-alert-create-team',\n  templateUrl: './alert-create-team.page.html',\n  styleUrls: ['./alert-create-team.page.scss'],\n})\nexport class AlertCreateTeamPage extends ModalForm implements OnInit , ModalFormInterface{\n\n  public id : any;\n\n  constructor(\n    public viewCtrl: ModalController,\n    public router : Router,\n    public navParams : NavParams,\n    location: PlatformLocation\n  ) {\n    super(location,viewCtrl);\n    this.id = navParams.get('id');\n   }\n\n  ngOnInit() {\n  }\n\n  close() {\n    this.viewCtrl.dismiss();\n\n    //throw new Error(\"Method not implemented.\");\n  }\n  initObject() {\n    //throw new Error(\"Method not implemented.\");\n  }\n\n  goPayment(){\n    this.router.navigateByUrl('/payment/create/' + this.id )\n    this.close();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Model } from '../api/models/model';\nimport { ModalController } from '@ionic/angular';\nimport { AlertCreateTeamPage } from '../pages/payment/alert-create-team/alert-create-team.page';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentTeamService {\n\n  private team : any;\n\n  public active = false;\n\n  constructor(\n    public modalController : ModalController,\n\n  ) { \n\n  }\n\n  setTeam(team : any){\n    this.team  = team;\n  }\n\n  isActive(){\n    return this.active;\n  }\n\n\n  noPaid(){\n    return  this.active ?  ! this.team.paid : false ;\n  }\n\n  async showAlert(){\n    const modal = await this.modalController.create({\n      component: AlertCreateTeamPage ,\n      componentProps: { \n           id: this.team.id,\n         }\n       });\n \n       modal.onDidDismiss().then(data=>{\n         console.log('return paid')\n       })\n \n      return await modal.present();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilArrayService {\n\n  constructor() { }\n\n  /**\n   * Inserta el elemento al final del array\n   * @param list array en el que se inserta el objeto\n   * @param item item a insertar\n   */\n\n  listAddLast(list,item){\n    list.push(item);\n  }\n\n  /**\n   * Añade un elemente en el array al inicio\n   * @param list array en la que se inserta el objeto\n   * @param item  elemento que se almacenara en el array\n   */\n  listAddFirst(list,item){\n    list.unshift(item);\n  }\n\n  /**\n   * Remplaza un objeto del array\n   * @param list array que se actualizara\n   * @param id iel id del objeto\n   * @param item elemento que se remplazara en el array\n   */\n  listUpdate(list,id,item){\n    let index = this.findIndexList(list,id);\n    if(index >= 0){\n        list[index] = item ;\n    }\n  }\n\n  /**\n   * elimina objeto de un array pasando el id del objeto\n   * @param list array del que se eliminara el objeto\n   * @param id id del objeto\n   */\n  listDelete(list,id){\n    let index = this.findIndexList(list,id);\n    if(index >= 0)\n        list.splice(index, 1);\n  }\n\n  /**\n   * Busca un obeto en el array\n   * @param list array en el qie se bucara el objeto\n   * @param id id del objeto\n   */\n  findList(list, id){\n    return list.find(item => item['id'] === id);\n  }\n\n  /**\n   * Retorna el indice de la posicion en la que se encuentra el objeto\n   * @param list Array en el que se realizara a busqueda\n   * @param id id del objeto buscado\n   */\n  findIndexList(list,id){\n    return list.findIndex(item => item['id'] === id);\n  }\n\n  /**\n   * Modifica solo los atributos indicados en el array\n   * @param objectResult objeto a modificar\n   * @param object objeto del que se obtendran los datos\n   * @param attibutes atributos que seran modificados \n   */\n\n  updateAttribustesObject(objectResult : {} , object : {} , attibutes : string[] = []){\n    console.log('update attributes')\n    for(let att of attibutes){\n      if(object.hasOwnProperty(att))\n        objectResult[att] = object[att];\n    }\n\n    return objectResult;\n  }\n\n}\n"]}