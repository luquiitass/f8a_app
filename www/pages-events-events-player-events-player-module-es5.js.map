{"version":3,"sources":["webpack:///src/app/pages/events/events-player/events-player.page.html","webpack:///src/app/pages/events/events-player/events-player-routing.module.ts","webpack:///src/app/pages/events/events-player/events-player.module.ts","webpack:///src/app/pages/events/events-player/events-player.page.scss","webpack:///src/app/pages/events/events-player/events-player.page.ts","webpack:///src/app/services/util-array.service.ts"],"names":["routes","path","component","EventsPlayerPageRoutingModule","imports","forChild","exports","EventsPlayerPageModule","declarations","EventsPlayerPage","route","requestService","dialogService","utilArray","id","snapshot","paramMap","get","event","modelPlayer","init","parms","loadingProgres","api_functionModel","subscribe","response","player","dimissLoaging","error","selector","template","UtilArrayService","list","item","push","unshift","index","findIndexList","splice","find","findIndex","objectResult","object","attibutes","console","log","att","hasOwnProperty","providedIn"],"mappings":"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","file":"pages-events-events-player-events-player-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Sucesos de partidos</ion-title>\\n\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/player/profile/{{id}}\\\"></ion-back-button>\\n    </ion-buttons>\\n\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"player\\\">\\n\\n    <div class=\\\"ion-text-center  user\\\">{{player.name}}</div>\\n\\n    <div>\\n\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let e of player.events\\\"  routerLink=\\\"/results/profile//{{e.game ? e.game.id : ''}}\\\" >\\n          <label> \\n            <ion-text class=\\\"date\\\" *ngIf=\\\"e.game\\\">{{ e.game.date | date: 'dd-MMM-yyyy'}}</ion-text>\\n            <ion-text class=\\\"event val\\\" *ngIf=\\\"e.type_event\\\"> {{ e.type_event.name  }} </ion-text>\\n            {{e.time > 0 ? ' a los ' : ''}}\\n            <ion-text *ngIf=\\\"e.time > 0\\\" class=\\\"val\\\"> {{e.time +'´'}}</ion-text> \\n            {{e.game ? ' contra ' : ''}}\\n            \\n            <ion-text class=\\\"team val\\\" *ngIf=\\\"e.game\\\">{{e.team_id == e.game.l_team ? e.game.team_v.name : e.game.team_l.name  }} </ion-text>\\n          </label> \\n        </ion-item>\\n      </ion-list>\\n\\n    </div>\\n\\n    <ion-item *ngIf=\\\"player.events.length == 0\\\" >\\n      <div class=\\\"ion-text-center\\\">\\n        No se han encontrado registros\\n      </div>\\n    </ion-item>\\n\\n  </div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EventsPlayerPage } from './events-player.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsPlayerPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EventsPlayerPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EventsPlayerPageRoutingModule } from './events-player-routing.module';\n\nimport { EventsPlayerPage } from './events-player.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EventsPlayerPageRoutingModule\n  ],\n  declarations: [EventsPlayerPage]\n})\nexport class EventsPlayerPageModule {}\n","export default \".date {\\n  color: #ffffff;\\n}\\n\\n.team {\\n  font-weight: 400;\\n}\\n\\n.event {\\n  color: #ffffff;\\n  font-weight: 400;\\n  color: white;\\n}\\n\\n.user {\\n  font-size: xx-large;\\n  padding: 10px;\\n  margin-top: 10px;\\n}\\n\\n.val {\\n  font-size: x-large;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZXZlbnRzL2V2ZW50cy1wbGF5ZXIvZXZlbnRzLXBsYXllci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FBQ0o7O0FBRUE7RUFDSSxnQkFBQTtBQUNKOztBQUVBO0VBQ0ksY0FBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtBQUNKOztBQUVBO0VBQ0ksbUJBQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFDQTtFQUNJLGtCQUFBO0FBRUoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9ldmVudHMvZXZlbnRzLXBsYXllci9ldmVudHMtcGxheWVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXRle1xuICAgIGNvbG9yOiAjZmZmZmZmO1xufVxuXG4udGVhbXtcbiAgICBmb250LXdlaWdodDogNDAwO1xufVxuXG4uZXZlbnR7XG4gICAgY29sb3I6ICNmZmZmZmY7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBjb2xvcjogIHdoaXRlO1xufVxuXG4udXNlciB7XG4gICAgZm9udC1zaXplOiB4eC1sYXJnZTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG59XG4udmFse1xuICAgIGZvbnQtc2l6ZTogeC1sYXJnZTtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { UtilArrayService } from 'src/app/services/util-array.service';\nimport { DialogService } from 'src/app/api/util/dialog.service';\nimport { RequestService } from 'src/app/api/request.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Model } from 'src/app/api/models/model';\n\n@Component({\n  selector: 'app-events-player',\n  templateUrl: './events-player.page.html',\n  styleUrls: ['./events-player.page.scss'],\n})\nexport class EventsPlayerPage implements OnInit {\n\n  public id ;\n  public event ; \n  public player;\n  public modelPlayer : Model;\n\n  constructor(\n    public route : ActivatedRoute,\n    public requestService : RequestService,\n    public dialogService : DialogService,\n    public utilArray : UtilArrayService\n  ) { \n    this.id = route.snapshot.paramMap.get('id');\n    this.event = route.snapshot.paramMap.get('event');\n    this.modelPlayer = new Model('Player',requestService);\n  }\n\n  ngOnInit() {\n    this.init();\n\n\n  }\n\n  async init(){\n    let parms = {};\n    if(this.event){\n      parms['event'] = this.event;\n    }\n\n    await this.dialogService.loadingProgres();\n\n    this.modelPlayer.api_functionModel(this.id,'pageEvents',parms).subscribe(\n      response =>{\n\n        if(response['status'] == 'success' ){\n          this.player = response['data']\n        }\n\n        this.dialogService.dimissLoaging();\n      },\n      error => {\n        this.dialogService.dimissLoaging();\n      }\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilArrayService {\n\n  constructor() { }\n\n  /**\n   * Inserta el elemento al final del array\n   * @param list array en el que se inserta el objeto\n   * @param item item a insertar\n   */\n\n  listAddLast(list,item){\n    list.push(item);\n  }\n\n  /**\n   * Añade un elemente en el array al inicio\n   * @param list array en la que se inserta el objeto\n   * @param item  elemento que se almacenara en el array\n   */\n  listAddFirst(list,item){\n    list.unshift(item);\n  }\n\n  /**\n   * Remplaza un objeto del array\n   * @param list array que se actualizara\n   * @param id iel id del objeto\n   * @param item elemento que se remplazara en el array\n   */\n  listUpdate(list,id,item){\n    let index = this.findIndexList(list,id);\n    if(index >= 0){\n        list[index] = item ;\n    }\n  }\n\n  /**\n   * elimina objeto de un array pasando el id del objeto\n   * @param list array del que se eliminara el objeto\n   * @param id id del objeto\n   */\n  listDelete(list,id){\n    let index = this.findIndexList(list,id);\n    if(index >= 0)\n        list.splice(index, 1);\n  }\n\n  /**\n   * Busca un obeto en el array\n   * @param list array en el qie se bucara el objeto\n   * @param id id del objeto\n   */\n  findList(list, id){\n    return list.find(item => item['id'] === id);\n  }\n\n  /**\n   * Retorna el indice de la posicion en la que se encuentra el objeto\n   * @param list Array en el que se realizara a busqueda\n   * @param id id del objeto buscado\n   */\n  findIndexList(list,id){\n    return list.findIndex(item => item['id'] === id);\n  }\n\n  /**\n   * Modifica solo los atributos indicados en el array\n   * @param objectResult objeto a modificar\n   * @param object objeto del que se obtendran los datos\n   * @param attibutes atributos que seran modificados \n   */\n\n  updateAttribustesObject(objectResult : {} , object : {} , attibutes : string[] = []){\n    console.log('update attributes')\n    for(let att of attibutes){\n      if(object.hasOwnProperty(att))\n        objectResult[att] = object[att];\n    }\n\n    return objectResult;\n  }\n\n}\n"]}