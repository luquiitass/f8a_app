{"version":3,"sources":["./src/app/pages/player/list/list.page.html","./src/app/pages/player/list/list-routing.module.ts","./src/app/pages/player/list/list.module.ts","./src/app/pages/player/list/list.page.scss","./src/app/pages/player/list/list.page.ts","./src/app/services/util-array.service.ts"],"names":[],"mappings":"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","file":"pages-player-list-list-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"admin_home\\\"></ion-back-button>    \\n    </ion-buttons>\\n    <ion-title>{{team_id ? 'Plantilla de ' : ''}}Jugadores</ion-title>\\n    <ion-buttons slot=\\\"secondary\\\">\\n      <ion-button (click)=\\\"openModal()\\\">\\n        <ion-icon name=\\\"add-outline\\\"></ion-icon>      \\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"load($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n  <ion-list>\\n      \\n      <ion-list-header *ngIf=\\\"list.length == 0\\\"  color=\\\"tertiary\\\">\\n        <ion-label>Sin registros</ion-label>\\n      </ion-list-header>\\n   \\n      <ion-item *ngFor=\\\"let item of list\\\" >\\n          \\n        <ion-label >\\n          <h3>{{item.name}}</h3>\\n        </ion-label>\\n\\n        <ion-buttons slot=\\\"end\\\">\\n          <ion-button (click)=\\\"showEdit(item)\\\">\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"create-outline\\\"></ion-icon>\\n          </ion-button>\\n          <ion-button (click)=\\\"confirmDelete(item)\\\">\\n            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n          </ion-button>\\n        </ion-buttons>\\n\\n      </ion-item>\\n    </ion-list>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListPageRoutingModule } from './list-routing.module';\n\nimport { ListPage } from './list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListPageRoutingModule\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BsYXllci9saXN0L2xpc3QucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\nimport { RequestService } from '../../../api/request.service';\nimport { ModalController } from '@ionic/angular';\nimport { PlayerFormPage } from '../../../pages/player/player-form/player-form.page';\nimport { DialogService } from '../../../api/util/dialog.service';\nimport { Model } from 'src/app/api/models/model';\nimport { ActivatedRoute } from '@angular/router';\nimport { UtilArrayService } from 'src/app/services/util-array.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.page.html',\n  styleUrls: ['./list.page.scss'],\n})\nexport class ListPage implements OnInit {\n\n\n  public team_id : any;\n  public playerService : Model ;\n  public list : any = [];\n  public modelTeam : Model;\n\n\n  constructor(\n    public request : RequestService,\n    public dialogService : DialogService,\n    public modalController: ModalController,\n    public dialog : DialogService,\n    public route : ActivatedRoute,\n    public utilArray : UtilArrayService\n\n  ) {\n    this.playerService = new Model('Player',request);\n    this.modelTeam = new Model('Team',request);\n    this.team_id = this.route.snapshot.paramMap.get('team_id');\n\n  }\n  \n  ngOnInit(): void {\n    //this.playerService.setModel('Player');\n    \n    this.load();//this.playerService.api_all();\n  }\n\n\n  load(event = null){\n    console.log('load');\n    if(this.team_id){\n      this.modelTeam.api_loadAttribute(this.team_id,'players').subscribe(\n        response => {\n          if(response['status'] = 'success'){\n            console.log('response' , response);\n            this.list = response['Team']['players'];\n          }\n          if(event)\n            event.target.complete();\n        },\n        error => {\n          if(event)\n            event.target.complete();\n        }\n\n      )\n    }else{\n      //this.list = this.playerService.list;\n      //this.playerService.api_all(event);\n\n      this.playerService.api_function('all').subscribe(\n        response => {\n          this.list = response['data'];\n        },\n        error=> {\n          console.log(error);\n        }\n      )\n\n    }\n  }\n\n  async openModal() {\n    const modal = await this.modalController.create({\n      component: PlayerFormPage ,\n      componentProps : {\n        team_id : this.team_id\n      }\n    });\n\n    modal.onDidDismiss().then(data=>{\n      if(data.data && data.data['player']){\n        const player = data.data['player'];\n        //this.playerService.listAddLast(player);\n        this.utilArray.listAddFirst(this.list , player);\n      }\n    })\n\n    return await modal.present();\n   }\n\n   async showEdit(player){\n    const modal = await this.modalController.create({\n      component: PlayerFormPage ,\n      componentProps: { id: player.id }\n    });\n\n    modal.onDidDismiss().then(data=>{\n      if(data.data && data.data.hasOwnProperty('player')){\n        const player = data.data['player'];\n        //this.playerService.listUpdate(player.id,player);\n        this.utilArray.listUpdate(this.list , player.id , player);\n      }\n    })\n\n    return await modal.present();\n   }\n\n   confirmDelete(player){\n    this.dialog.presentAlertConfirm('Confirmar','Estas seguro de eliminar este jugador',e => {\n      this.delete(player)\n    });\n   }\n\n   delete(player){\n\n    if(!player.user_id){\n     this.playerService.api_delete(player.id).subscribe(data => {\n       console.log(data);\n       if(data['status'] == 'success'){\n         this.dialog.showToast('Jugador Eliminado',null,'success');\n         this.utilArray.listDelete(this.list,player.id);\n         //this.playerService.listDelete(player.id);\n       }\n     });\n    }else if(player.pivot.team_id){\n      \n      this.modelTeam.api_functionModel(this.team_id,'removePlayer',{player_id : player.id}).subscribe(\n        response => {\n          this.dialog.showToast('El Jugador ha sido eliminado de esta plantilla',null,'success');\n          this.utilArray.listDelete(this.list,player.id);\n        },\n        error => {\n\n        }\n      )\n    }\n   }\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilArrayService {\n\n  constructor() { }\n\n  /**\n   * Inserta el elemento al final del array\n   * @param list array en el que se inserta el objeto\n   * @param item item a insertar\n   */\n\n  listAddLast(list,item){\n    list.push(item);\n  }\n\n  /**\n   * Añade un elemente en el array al inicio\n   * @param list array en la que se inserta el objeto\n   * @param item  elemento que se almacenara en el array\n   */\n  listAddFirst(list,item){\n    list.unshift(item);\n  }\n\n  /**\n   * Remplaza un objeto del array\n   * @param list array que se actualizara\n   * @param id iel id del objeto\n   * @param item elemento que se remplazara en el array\n   */\n  listUpdate(list,id,item){\n    let index = this.findIndexList(list,id);\n    if(index >= 0){\n        list[index] = item ;\n    }\n  }\n\n  /**\n   * elimina objeto de un array pasando el id del objeto\n   * @param list array del que se eliminara el objeto\n   * @param id id del objeto\n   */\n  listDelete(list,id){\n    let index = this.findIndexList(list,id);\n    if(index >= 0)\n        list.splice(index, 1);\n  }\n\n  /**\n   * Busca un obeto en el array\n   * @param list array en el qie se bucara el objeto\n   * @param id id del objeto\n   */\n  findList(list, id){\n    return list.find(item => item['id'] === id);\n  }\n\n  /**\n   * Retorna el indice de la posicion en la que se encuentra el objeto\n   * @param list Array en el que se realizara a busqueda\n   * @param id id del objeto buscado\n   */\n  findIndexList(list,id){\n    return list.findIndex(item => item['id'] === id);\n  }\n\n  /**\n   * Modifica solo los atributos indicados en el array\n   * @param objectResult objeto a modificar\n   * @param object objeto del que se obtendran los datos\n   * @param attibutes atributos que seran modificados \n   */\n\n  updateAttribustesObject(objectResult : {} , object : {} , attibutes : string[] = []){\n    console.log('update attributes')\n    for(let att of attibutes){\n      if(object.hasOwnProperty(att))\n        objectResult[att] = object[att];\n    }\n\n    return objectResult;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}