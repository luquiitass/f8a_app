{"version":3,"sources":["webpack:///src/app/pages/publications/form-publication/form-publication.page.html","webpack:///src/app/pages/publications/form-publication/form-publication-routing.module.ts","webpack:///src/app/pages/publications/form-publication/form-publication.module.ts","webpack:///src/app/pages/publications/form-publication/form-publication.page.scss","webpack:///src/app/pages/publications/form-publication/form-publication.page.ts","webpack:///src/app/services/paths-images.service.ts","webpack:///src/app/services/photo.service.ts"],"names":["routes","path","component","FormPublicationPageRoutingModule","imports","forChild","exports","FormPublicationPageModule","declarations","FormPublicationPage","request","dialogService","viewCtrl","photoService","navParams","authUser","pathImages","location","chatService","posting","myDateFilter","d","day","getDay","photoModel","init","setAspectRatioCrop","servicePublication","console","log","user","id","get","setElementImg","publication","text","user_id","api_find","subscribe","data","image","setImage","validSend","e","showToast","message","isLoadPthoto","getImageUpload","api_update","dismiss","error","api_create","length","Error","selector","template","PathsImagesService","images","providedIn","Camera","Filesystem","Storage","PhotoService","photos","convertBlobToBase64","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","serviceImage","url","thumb","pathDefault","photo","Photo","getPhoto","resultType","Uri","source","quality","capturedPhoto","readAsBase64","base64Data","unshift","webPath","cameraPhoto","fetch","response","filepath","webviewPath"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,gCAAgC;AAAA;AAAA,O;;AAAhCA,sCAAgC,6DAJ5C,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI4C,GAAhCH,gCAAgC,CAAhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DATrC,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,iGAJO,CADD;AAORI,oBAAY,EAAE,CAAC,0EAAD;AAPN,OAAT,CASqC,GAAzBD,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCmBFE,mBAAmB;AAAA;;AAAA;;AAe9B,qCACSC,OADT,EAESC,aAFT,EAGSC,QAHT,EAISC,YAJT,EAKEC,SALF,EAMSC,QANT,EAOSC,UAPT,EAQEC,QARF,EASSC,WATT,EASkC;AAAA;;AAAA;;AAEhC,oCAAMD,QAAN,EAAeL,QAAf;AAVO,gBAAAF,OAAA,GAAAA,OAAA;AACA,gBAAAC,aAAA,GAAAA,aAAA;AACA,gBAAAC,QAAA,GAAAA,QAAA;AACA,gBAAAC,YAAA,GAAAA,YAAA;AAEA,gBAAAE,QAAA,GAAAA,QAAA;AACA,gBAAAC,UAAA,GAAAA,UAAA;AAEA,gBAAAE,WAAA,GAAAA,WAAA;AAXF,gBAAAC,OAAA,GAAU,KAAV;;AAmHP,gBAAAC,YAAA,GAAe,UAACC,CAAD,EAAsB;AACnC,gBAAMC,GAAG,GAAGD,CAAC,CAACE,MAAF,EAAZ;AACA,mBAAOD,GAAG,IAAI,CAAd;AACD,WAHD;;AArGE,gBAAKE,UAAL,GAAkB,IAAI,wEAAJ,CAAed,OAAf,EAAuBE,QAAvB,CAAlB;;AACA,gBAAKY,UAAL,CAAgBC,IAAhB,CAAqB,sBAArB,EAA4C,KAA5C;;AACA,gBAAKD,UAAL,CAAgBE,kBAAhB,CAAmC,MAAnC;;AACA,gBAAKC,kBAAL,GAA0B,IAAI,8DAAJ,CAAU,aAAV,EAAwBjB,OAAxB,CAA1B,CANgC,CAOhC;;AACAkB,iBAAO,CAACC,GAAR,CAAY,WAAZ,EAA0Bd,QAAQ,CAACe,IAAnC;AAEA,gBAAKC,EAAL,GAAUjB,SAAS,CAACkB,GAAV,CAAc,IAAd,CAAV;AAVgC;AAYhC;;AApC4B;AAAA;AAAA,uCAsCpB;AAAA;;AAER,iBAAKR,UAAL,CAAgBS,aAAhB,CAA8B,iBAA9B;AAEA,iBAAKH,IAAL,GAAY,KAAKf,QAAL,CAAce,IAA1B,CAJQ,CAIuB;;AAC/BF,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAqB,KAAKC,IAA1B;AAEA,iBAAKI,WAAL,GAAmB;AACjBC,kBAAI,EAAG,EADU;AAEjBC,qBAAO,EAAG,KAAKN,IAAL,CAAUC;AAFH,aAAnB;;AAKA,gBAAG,KAAKA,EAAR,EAAW;AACT,mBAAKJ,kBAAL,CAAwBU,QAAxB,CAAiC,KAAKN,EAAtC,EAA0CO,SAA1C,CAAoD,UAAAC,IAAI,EAAI;AAC1D,oBAAGA,IAAI,CAAC,QAAD,CAAJ,IAAkB,SAArB,EAA+B;AAC7B,wBAAI,CAACL,WAAL,GAAmBK,IAAI,CAAC,aAAD,CAAvB;;AACA,sBAAG,MAAI,CAACL,WAAL,CAAiBM,KAApB,EAA0B;AACxB,0BAAI,CAAChB,UAAL,CAAgBiB,QAAhB,CAAyB,MAAI,CAACP,WAAL,CAAiBM,KAA1C;AACD;AACF;AACF,eAPD;AAQD;AACF;AA5D6B;AAAA;AAAA,mCAgExB;AAAA;;AAEJ,gBAAG;AACD,mBAAKE,SAAL;AACD,aAFD,CAEC,OAAMC,CAAN,EAAQ;AACP,mBAAKhC,aAAL,CAAmBiC,SAAnB,CAA6BD,CAAC,CAACE,OAA/B,EAAuC,IAAvC,EAA4C,QAA5C;AACA;AACD;;AAED,gBAAG,KAAKrB,UAAL,CAAgBsB,YAAhB,EAAH,EAAkC;AAChC,mBAAKZ,WAAL,CAAiBM,KAAjB,GAAyB,KAAKhB,UAAL,CAAgBuB,cAAhB,EAAzB;AACD;;AAED,iBAAK5B,OAAL,GAAe,IAAf;;AACA,gBAAG,KAAKe,WAAL,CAAiBH,EAApB,EAAuB;AACrB,mBAAKJ,kBAAL,CAAwBqB,UAAxB,CAAmC,KAAKd,WAAxC,EAAqDI,SAArD,CACE,UAAAC,IAAI,EAAI;;;AACN,oBAAGA,IAAI,CAAC,QAAD,CAAJ,IAAkB,SAArB,EAA+B;AAC7B,wBAAI,CAAC5B,aAAL,CAAmBiC,SAAnB,CAA6B,CAAD,KAAEL,IAAI,CAAC,YAAD,CAAL,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,EAAnB,GAAuB,YAApD;;AACAX,yBAAO,CAACC,GAAR,CAAYU,IAAZ;;AACA,wBAAI,CAACU,OAAL,CAAaV,IAAI,CAAC,aAAD,CAAjB;AACD;;AACD,sBAAI,CAACpB,OAAL,GAAe,KAAf;AACD,eARH,EASE,UAAA+B,KAAK,EAAI;AACP,sBAAI,CAAC/B,OAAL,GAAe,KAAf;AACD,eAXH;AAaD,aAdD,MAcK;AACH,mBAAKQ,kBAAL,CAAwBwB,UAAxB,CAAmC,KAAKjB,WAAxC,EAAqDI,SAArD,CACE,UAAAC,IAAI,EAAI;;;AACN,oBAAGA,IAAI,CAAC,QAAD,CAAJ,IAAkB,SAArB,EAA+B;AAC7B,wBAAI,CAAC5B,aAAL,CAAmBiC,SAAnB,CAA6B,CAAD,KAAEL,IAAI,CAAC,YAAD,CAAL,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,EAAnB,GAAuB,YAApD;;AACA,wBAAI,CAACU,OAAL,CAAaV,IAAI,CAAC,aAAD,CAAjB;AACD;;AACD,sBAAI,CAACpB,OAAL,GAAe,KAAf;AAED,eARH,EASE,UAAA+B,KAAK,EAAI;AACP,sBAAI,CAAC/B,OAAL,GAAe,KAAf;AAED,eAZH;AAaD;AACF;AA3G6B;AAAA;AAAA,sCA6GrB;AACPS,mBAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,gBAAG,CAAC,KAAKL,UAAL,CAAgBsB,YAAhB,EAAD,IAAmC,KAAKZ,WAAL,CAAiBC,IAAjB,CAAsBiB,MAAtB,IAAgC,CAAtE,EAAwE;AACtE,oBAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;AACD;AACF;AAlH6B;AAAA;AAAA,kCAoHtBnB,WApHsB,EAoHT;AACnB,iBAAKtB,QAAL,CAAcqC,OAAd,CACE;AACEf,yBAAW,EAAGA;AADhB,aADF;AAKD;AA1H6B;AAAA;AAAA,kCA4HzB;AACH,iBAAKtB,QAAL,CAAcqC,OAAd;AACD;AA9H6B;AAAA;AAAA,kCAqIzB;AACHrB,mBAAO,CAACC,GAAR,CAAY,KAAKK,WAAjB;AACD;AAvI6B;;AAAA;AAAA,QAAS,oEAAT,C;;;;gBAlBvB;;gBACA;;gBACA;;gBACA;;gBADiB;;gBAIjB;;gBACA;;gBAGA;;gBACA;;;;;;gBAUN,uD;AAAS,iBAAC,QAAD;;;gBACT,uD;AAAS,iBAAC,iBAAD;;;AAJCzB,yBAAmB,6DAL/B,gEAAU;AACT6C,gBAAQ,EAAE,sBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,qIAFS;;;;AAAA,OAAV,CAK+B,GAAnB9C,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCdA+C,kBAAkB,GAS7B,8BAAc;AAAA;;AAPP,aAAAC,MAAA,GAAS;AACd,0BAAiB,2BADH;AAEd,oBAAW,0BAFG;AAGd,kBAAS,+BAHK;AAId,oBAAW;AAJG,SAAT;AAOU,O;;;;;;AATND,wBAAkB,6DAH9B,iEAAW;AACVE,kBAAU,EAAE;AADF,OAAX,CAG8B,GAAlBF,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCCC2B,uD;UAAhCG,M,yBAAAA,M;UAAQC,U,yBAAAA,U;UAAYC,O,yBAAAA,O;;UAKfC,YAAY;AAWvB,8BAAYpD,OAAZ,EAAsC;AAAA;;AAT/B,eAAAqD,MAAA,GAAkB,EAAlB;;AAqEP,eAAAC,mBAAA,GAAsB,UAACC,IAAD;AAAA,mBAAgB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrE,kBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,oBAAM,CAACE,OAAP,GAAiBH,MAAjB;;AACAC,oBAAM,CAACG,MAAP,GAAgB,YAAM;AAClBL,uBAAO,CAACE,MAAM,CAACI,MAAR,CAAP;AACH,eAFD;;AAGAJ,oBAAM,CAACK,aAAP,CAAqBT,IAArB;AACD,aAPqC,CAAhB;AAAA,WAAtB;;AA3DI,eAAKU,YAAL,GAAoB,IAAI,uDAAJ,CAAU,OAAV,EAAkBjE,OAAlB,CAApB;AACH;;AAbsB;AAAA;AAAA,+BAeXkE,GAfW,EAemE;AAAA,gBAAhEC,KAAgE,uEAA9C,IAA8C;AAAA,gBAAzCC,WAAyC,uEAA3B,2BAA2B;AACtF,iBAAKF,GAAL,GAAWA,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAAA,GAAA,GAAO,UAAlB;AACA,iBAAKC,KAAL,GAAaA,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAAA,KAAA,GAAS,KAAtB;AACA,iBAAK5E,IAAL,GAAY6E,WAAZ;AACA,iBAAKC,KAAL,GAAa,IAAIC,KAAJ,CAAUF,WAAV,CAAb;AACH;AApBsB;AAAA;AAAA,mCAsBdtC,KAtBc,EAsBT;AACZ,iBAAKA,KAAL,GAAaA,KAAb;AACA,iBAAKuC,KAAL,CAAWvC,KAAX,GAAmBA,KAAnB;AACD;AAzBsB;AAAA;AAAA,4CA2BQ;;;;;;;;AAEP,6BAAMmB,MAAM,CAACsB,QAAP,CAAgB;AAC1CC,kCAAU,EAAE,iEAAiBC,GADa;AAE1CC,8BAAM,EAAE,6DAAazB,MAFqB;AAG1C0B,+BAAO,EAAE;AAHiC,uBAAhB,CAAN;;;AAAhBC,mC;;AAQa,6BAAM,KAAKC,YAAL,CAAkBD,aAAlB,CAAN;;;AAAbE,gC;AAGN,2BAAKzB,MAAL,CAAY0B,OAAZ,CAAoB,IAAIT,KAAJ,CAAU,IAAV,EAAeM,aAAa,CAACI,OAA7B,EAAsCF,UAAtC,EAAkD,KAAKZ,GAAvD,EAA4D,KAAKC,KAAjE,CAApB;;;;;;;;;AACD;AAzCsB;AAAA;AAAA,+CA4CW;;;;;;;;AAEV,6BAAMlB,MAAM,CAACsB,QAAP,CAAgB;AAC1CC,kCAAU,EAAE,iEAAiBC,GADa;AAE1CC,8BAAM,EAAE,6DAAazB,MAFqB;AAG1C0B,+BAAO,EAAE;AAHiC,uBAAhB,CAAN;;;AAAhBC,mC;;AAMa,6BAAM,KAAKC,YAAL,CAAkBD,aAAlB,CAAN;;;AAAbE,gC;AAEN,2BAAKT,KAAL,GAAa,IAAIC,KAAJ,CAAUM,aAAa,CAACI,OAAxB,EAAgCF,UAAhC,EAA4CA,UAA5C,EAAwD,KAAKZ,GAA7D,EAAkE,KAAKC,KAAvE,EAA8E,KAAKrC,KAAnF,CAAb;;;;;;;;;AAGD;AAzDsB;AAAA;AAAA,yCA2DD;AACpB,mBAAQ,KAAKuC,KAAL,CAAWxC,IAAX,GAAiB,IAAjB,GAAwB,KAAhC;AACD;AA7DsB;AAAA;AAAA,uCA+DIoD,WA/DJ,EA+D8B;;;;;;;;AAElC,6BAAMC,KAAK,CAACD,WAAW,CAACD,OAAb,CAAX;;;AAAXG,8B;;AACO,6BAAMA,QAAQ,CAAC5B,IAAT,EAAN;;;AAAPA,0B;;AAEC,6BAAM,KAAKD,mBAAL,CAAyBC,IAAzB,CAAN;;;;;;;;;;;;AACR;AArEsB;AAAA;AAAA,wCAiFZ;AACT,gBAAG,KAAKnB,YAAL,EAAH,EAAuB;AACrB,kBAAG,KAAKiC,KAAL,CAAWhD,EAAd,EAAiB;AACf,uBAAO,KAAK4C,YAAL,CAAkB3B,UAAlB,CAA6B,KAAK+B,KAAlC,CAAP;AACD,eAFD,MAEK;AACH,uBAAO,KAAKJ,YAAL,CAAkBxB,UAAlB,CAA6B,KAAK4B,KAAlC,CAAP;AACD;AACF;AACF;AAzFsB;;AAAA;AAAA,S;;;;gBAPhB;;;;AAOIjB,kBAAY,6DAHxB,iEAAW;AACVJ,kBAAU,EAAE;AADF,OAAX,CAGwB,GAAZI,YAAY,CAAZ;;UA4FAkB,K;AASX,yBAA0K;AAAA,cAA5Jc,QAA4J,uEAAxI,2BAAwI;AAAA,cAA5GC,WAA4G,uEAArF,IAAqF;AAAA,cAAhFxD,IAAgF,uEAAjE,EAAiE;AAAA,cAA9DqC,GAA8D,uEAA/C,EAA+C;AAAA,cAA5CC,KAA4C,uEAA1B,KAA0B;AAAA,cAAlBrC,KAAkB,uEAAJ,IAAI;;AAAA;;AACxK,eAAKT,EAAL,GAAUS,KAAK,GAAGA,KAAK,CAACT,EAAT,GAAc,EAA7B;AACA,eAAKgE,WAAL,GAAmBA,WAAnB;AACA,eAAKD,QAAL,GAAgBA,QAAhB;AACA,eAAKvD,IAAL,GAAYA,IAAZ;AACA,eAAKqC,GAAL,GAAWA,GAAX;AACA,eAAKC,KAAL,GAAaA,KAAb;AACA,eAAKrC,KAAL,GAAaA,KAAb;AACD;;;;oCAEM;AACL,gBAAG,KAAKuD,WAAR,EAAoB;AAClB,qBAAO,KAAKA,WAAZ;AACD,aAFD,MAGK,IAAG,KAAKvD,KAAL,IAAc,KAAKA,KAAL,CAAW,aAAX,CAAjB,EAA4C;AAC/C,qBAAO,KAAKA,KAAL,CAAW,aAAX,CAAP;AACD,aAFI,MAEA;AACH,qBAAO,KAAKsD,QAAZ;AACD;AACF","file":"pages-publications-form-publication-form-publication-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"dark\\\" (click)=\\\"close()\\\">\\n          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Nueva Publicaci√≥n</ion-title>\\n    <ion-buttons slot=\\\"secondary\\\">\\n      <ion-button *ngIf=\\\"chatService.isInit\\\" (click)=\\\"chatService.toggle()\\\" [color]=\\\"chatService.isVisible ? 'success' : ''\\\">\\n        <ion-icon name=\\\"help-circle-outline\\\"></ion-icon>\\n      </ion-button>  \\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content #form_c>\\n  <form (ngSubmit)=\\\"submit()\\\"  (keyup)=\\\"servicePublication.errorsForm.clear()\\\" >\\n\\n    <ion-item>\\n      <ion-avatar *ngIf=\\\"user\\\"> \\n        <ion-img [src]=\\\"user.photo ? user.photo.urlCompleteThumb : pathImages.images.profile_user \\\" ></ion-img>\\n      </ion-avatar>\\n      <label class=\\\"name-user\\\">{{user.completeName}}</label>\\n    </ion-item>\\n\\n    <div class=\\\"separador\\\"></div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" >Escribe aqui...</ion-label>\\n      <ion-textarea  class=\\\"editor-text\\\" [(ngModel)]=\\\"publication.text\\\" name=\\\"text\\\"  ></ion-textarea>\\n    </ion-item>\\n    <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ servicePublication.errorsForm.get('text') }}</div>\\n\\n    <!-- <ion-item *ngIf=\\\"false\\\">\\n      <ion-label position=\\\"floating\\\">Mencionar Equipo</ion-label>\\n      <ion-select [(ngModel)]=\\\"publication.l_team\\\" name=\\\"l_team\\\">\\n        <ion-select-option [value]=\\\"l_team.id\\\" *ngFor=\\\"let l_team of teams\\\">{{ l_team.name }}</ion-select-option>\\n      </ion-select>\\n      <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ servicePublication.errorsForm.get('l_team') }}</div>\\n    </ion-item> -->\\n\\n    <ion-item *ngIf=\\\"photoModel.isLoadPthoto() || photoModel.hasImage()\\\">\\n      <img id=\\\"img_publication\\\"  [src]=\\\"photoModel.photo.getPath()\\\" >\\n    </ion-item>\\n    <br>\\n    <ion-button expand=\\\"block\\\"  fill=\\\"outline\\\"  (click)=\\\"photoModel.addOneNewToGallery()\\\" >\\n      <ion-icon  name=\\\"image\\\" slot=\\\"start\\\"></ion-icon>\\n      Foto\\n    </ion-button> \\n\\n    <ion-button type=\\\"submit\\\"  expand=\\\"block\\\" [disabled]=\\\"posting\\\">\\n      <ion-spinner name=\\\"lines\\\" *ngIf=\\\"posting\\\" ></ion-spinner>\\n      Publicar\\n    </ion-button>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormPublicationPage } from './form-publication.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormPublicationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FormPublicationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FormPublicationPageRoutingModule } from './form-publication-routing.module';\n\nimport { FormPublicationPage } from './form-publication.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FormPublicationPageRoutingModule\n  ],\n  declarations: [FormPublicationPage]\n})\nexport class FormPublicationPageModule {}\n","export default \".name-user {\\n  margin-left: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHVibGljYXRpb25zL2Zvcm0tcHVibGljYXRpb24vZm9ybS1wdWJsaWNhdGlvbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcHVibGljYXRpb25zL2Zvcm0tcHVibGljYXRpb24vZm9ybS1wdWJsaWNhdGlvbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmFtZS11c2Vye1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuIl19 */\";","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { RequestService } from 'src/app/api/request.service';\nimport { DialogService } from 'src/app/api/util/dialog.service';\nimport { ModalController, NavParams, IonImg } from '@ionic/angular';\nimport { PhotoService } from 'src/app/services/photo.service';\nimport { Model } from 'src/app/api/models/model';\nimport { ModelImage } from 'src/app/api/models/modelImage';\nimport { AuthUserService } from 'src/app/services/auth-user.service';\nimport { PathsImagesService } from 'src/app/services/paths-images.service';\nimport { ModalForm } from 'src/app/models/modal-form';\nimport { ModalFormInterface } from 'src/app/interfaces/modal-form-interface';\nimport { PlatformLocation } from '@angular/common';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-form-publication',\n  templateUrl: './form-publication.page.html',\n  styleUrls: ['./form-publication.page.scss'],\n})\nexport class FormPublicationPage extends ModalForm implements OnInit , ModalFormInterface {\n\n\n  @ViewChild('form_c') form_c: ElementRef ;\n  @ViewChild('img_publication') img_publication: ElementRef ;\n\n\n\n  public id: any;\n  public publication : any;\n  public servicePublication : Model;\n  public photoModel : ModelImage;\n  public user : any;\n  public posting = false;\n\n  constructor(\n    public request : RequestService,\n    public dialogService : DialogService,\n    public viewCtrl: ModalController,\n    public photoService : PhotoService,\n    navParams: NavParams,\n    public authUser : AuthUserService,\n    public pathImages : PathsImagesService,\n    location: PlatformLocation,\n    public chatService : ChatService\n  ) {\n    super(location,viewCtrl);\n    this.photoModel = new ModelImage(request,viewCtrl);\n    this.photoModel.init('images/publications/',false)\n    this.photoModel.setAspectRatioCrop('none');\n    this.servicePublication = new Model('Publication',request);\n    //this.serviceTeam.setModel('Team');\n    console.log('user auth' , authUser.user)\n\n    this.id = navParams.get('id') ;\n    \n   }\n\n  initObject(){\n\n    this.photoModel.setElementImg('img_publication');\n\n    this.user = this.authUser.user //await this.authUser.getUser();\n    console.log('user' , this.user)\n\n    this.publication = { \n      text : '',\n      user_id : this.user.id\n    };\n\n    if(this.id){\n      this.servicePublication.api_find(this.id).subscribe(data => {\n        if(data['status'] == 'success'){\n          this.publication = data['Publication'];\n          if(this.publication.image){\n            this.photoModel.setImage(this.publication.image);\n          }\n        }\n      })\n    }\n  }\n\n\n\n  submit(){\n\n    try{\n      this.validSend();\n    }catch(e){\n      this.dialogService.showToast(e.message,null,'danger');\n      return;\n    }\n\n    if(this.photoModel.isLoadPthoto()){\n      this.publication.image = this.photoModel.getImageUpload();\n    }\n\n    this.posting = true;\n    if(this.publication.id){\n      this.servicePublication.api_update(this.publication).subscribe(\n        data => {\n          if(data['status'] == 'success'){\n            this.dialogService.showToast( data['msjSuccess'] ?? 'Registrado' );\n            console.log(data);\n            this.dismiss(data['Publication'])\n          }\n          this.posting = false;\n        },\n        error => {\n          this.posting = false;\n        });\n\n    }else{\n      this.servicePublication.api_create(this.publication).subscribe(\n        data => {\n          if(data['status'] == 'success'){\n            this.dialogService.showToast( data['msjSuccess'] ?? 'Registrado' );\n            this.dismiss(data['Publication'])\n          }\n          this.posting = false;\n\n        },\n        error => {\n          this.posting = false;\n\n        })\n    }\n  }\n\n  validSend(){\n    console.log('valid')\n    if(!this.photoModel.isLoadPthoto() && this.publication.text.length == 0){\n      throw new Error('Debe escribir algo en la publicaci√≥n o a√±adir una imagen.');\n    }\n  }\n\n  dismiss(publication) {\n    this.viewCtrl.dismiss(\n      {\n        publication : publication,\n      }\n    );\n  }\n\n  close(){\n    this.viewCtrl.dismiss();\n  }\n\n  myDateFilter = (d: Date): boolean => {\n    const day = d.getDay();\n    return day == 6 ;\n  }\n\n  print(){\n    console.log(this.publication);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PathsImagesService {\n\n  public images = {\n    'profile_user' : 'assets/images/profile.jpg',\n    'escudo' : 'assets/images/escudo.png',\n    'team' : 'assets/images/shield_team.png',\n    'player' : 'assets/images/jugador.png'\n  };\n  \n  constructor() { }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Plugins, CameraResultType, Capacitor, FilesystemDirectory, \n  CameraPhoto, CameraSource } from '@capacitor/core';\nimport { Model } from '../api/models/model';\nimport { RequestService } from '../api/request.service';\n\nconst { Camera, Filesystem, Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n\n  public photos: Photo[] = [];\n\n  public photo : any;\n  public url :string ;\n  public thumb : boolean ;\n  public serviceImage : Model;\n  public image : any ;\n  public path : string;\n\n  constructor(request : RequestService) { \n      this.serviceImage = new Model('Image',request);\n  }\n\n  public init(url : string, thumb : boolean = true,pathDefault = 'assets/images/pngwing.png'){\n      this.url = url ?? '/images/';\n      this.thumb = thumb ?? false ;\n      this.path = pathDefault;\n      this.photo = new Photo(pathDefault);\n  }\n\n  setImage(image){\n    this.image = image;\n    this.photo.image = image;\n  }\n\n  public async addNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri, \n      source: CameraSource.Camera, \n      quality: 100 \n    });\n\n\n\n    const base64Data = await this.readAsBase64(capturedPhoto);\n\n  \n    this.photos.unshift(new Photo(null,capturedPhoto.webPath, base64Data, this.url, this.thumb));\n  }\n\n\n  public async addOneNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri, \n      source: CameraSource.Camera, \n      quality: 100 \n    });\n  \n    const base64Data = await this.readAsBase64(capturedPhoto);\n\n    this.photo = new Photo(capturedPhoto.webPath,base64Data, base64Data, this.url, this.thumb, this.image);\n\n  \n  }\n\n  public isLoadPthoto() {\n    return  this.photo.data? true : false;\n  }\n\n  private async readAsBase64(cameraPhoto: CameraPhoto) {\n    // Fetch the photo, read as a blob, then convert to base64 format\n    const response = await fetch(cameraPhoto.webPath!);\n    const blob = await response.blob();\n  \n    return await this.convertBlobToBase64(blob) as string;  \n  }\n  \n  convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader;\n    reader.onerror = reject;\n    reader.onload = () => {\n        resolve(reader.result);\n    };\n    reader.readAsDataURL(blob);\n  });\n\n\n  uploadImage(){\n    if(this.isLoadPthoto()){\n      if(this.photo.id){\n        return this.serviceImage.api_update(this.photo);\n      }else{\n        return this.serviceImage.api_create(this.photo);\n      }\n    }\n  }\n}\n\nexport class Photo {\n  id? : string;\n  filepath: string;\n  webviewPath: string;\n  data :string;\n  url : string;\n  thumb : boolean;\n  image ? :{}\n\n  constructor(  filepath : string = \"assets/images/pngwing.png\",webviewPath : string = null,data :string = '',url : string = '',thumb : boolean = false , image : any = null){\n    this.id = image ? image.id : '';\n    this.webviewPath = webviewPath;\n    this.filepath = filepath;\n    this.data = data;\n    this.url = url;\n    this.thumb = thumb;\n    this.image = image\n  }\n\n  getPath(){\n    if(this.webviewPath){\n      return this.webviewPath;\n    }\n    else if(this.image && this.image['urlComplete'] ){\n      return this.image['urlComplete'];\n    }else{\n      return this.filepath;\n    }\n  }\n}\n"]}